[
  {
    "signature": "calculatePieDatasetTotal(org.jfree.data.pie.PieDataset dataset)",
    "name": "calculatePieDatasetTotal",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.pie.PieDataset",
          "name": "PieDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.pie.PieDataset",
            "name": "PieDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The total.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createPieDatasetForRow(org.jfree.data.category.CategoryDataset dataset, java.lang.Comparable rowKey)",
    "name": "createPieDatasetForRow",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.pie.PieDataset",
      "name": "org.jfree.data.pie.PieDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "rowKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "rowKey"
        },
        "comment": "the row key.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A pie dataset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createPieDatasetForRow(org.jfree.data.category.CategoryDataset dataset, int row)",
    "name": "createPieDatasetForRow",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.pie.PieDataset",
      "name": "org.jfree.data.pie.PieDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "the row (zero-based index).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A pie dataset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createPieDatasetForColumn(org.jfree.data.category.CategoryDataset dataset, java.lang.Comparable columnKey)",
    "name": "createPieDatasetForColumn",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.pie.PieDataset",
      "name": "org.jfree.data.pie.PieDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "columnKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "columnKey"
        },
        "comment": "the column key.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A pie dataset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createPieDatasetForColumn(org.jfree.data.category.CategoryDataset dataset, int column)",
    "name": "createPieDatasetForColumn",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.pie.PieDataset",
      "name": "org.jfree.data.pie.PieDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "the column (zero-based index).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A pie dataset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createConsolidatedPieDataset(org.jfree.data.pie.PieDataset source, java.lang.Comparable key, double minimumPercent)",
    "name": "createConsolidatedPieDataset",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.pie.PieDataset",
      "name": "org.jfree.data.pie.PieDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.pie.PieDataset",
          "name": "PieDataset",
          "isArray": false
        },
        "name": "source"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "minimumPercent"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.pie.PieDataset",
            "name": "PieDataset",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "the source dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key is new. new key for the aggregated items (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "minimumPercent"
        },
        "comment": "the percent threshold.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The pie dataset with (possibly) aggregated items.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createConsolidatedPieDataset(org.jfree.data.pie.PieDataset source, java.lang.Comparable key, double minimumPercent, int minItems)",
    "name": "createConsolidatedPieDataset",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.pie.PieDataset",
      "name": "org.jfree.data.pie.PieDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.pie.PieDataset",
          "name": "PieDataset",
          "isArray": false
        },
        "name": "source"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "minimumPercent"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minItems"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.pie.PieDataset",
            "name": "PieDataset",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "the source dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to represent the aggregated items.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "minimumPercent"
        },
        "comment": "the percent threshold (ten percent is 0.10).",
        "kind": "PARAM",
        "condition": "args[2]==0.1"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minItems"
        },
        "comment": "only aggregate low values if there are at least this many.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The pie dataset with (possibly) aggregated items.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createCategoryDataset(java.lang.String rowKeyPrefix, java.lang.String columnKeyPrefix, double[][] data)",
    "name": "createCategoryDataset",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.category.CategoryDataset",
      "name": "org.jfree.data.category.CategoryDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "rowKeyPrefix"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "columnKeyPrefix"
      },
      {
        "type": {
          "qualifiedName": "[[D",
          "name": "double[][]",
          "isArray": true
        },
        "name": "data"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "rowKeyPrefix"
        },
        "comment": "the row key prefix.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "columnKeyPrefix"
        },
        "comment": "the column key prefix.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[[D",
            "name": "double[][]",
            "isArray": true
          },
          "name": "data"
        },
        "comment": "the data.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The dataset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createCategoryDataset(java.lang.String rowKeyPrefix, java.lang.String columnKeyPrefix, java.lang.Number[][] data)",
    "name": "createCategoryDataset",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.category.CategoryDataset",
      "name": "org.jfree.data.category.CategoryDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "rowKeyPrefix"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "columnKeyPrefix"
      },
      {
        "type": {
          "qualifiedName": "[[Ljava.lang.Number;",
          "name": "Number[][]",
          "isArray": true
        },
        "name": "data"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "rowKeyPrefix"
        },
        "comment": "the row key prefix.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "columnKeyPrefix"
        },
        "comment": "the column key prefix.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[[Ljava.lang.Number;",
            "name": "Number[][]",
            "isArray": true
          },
          "name": "data"
        },
        "comment": "the data.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The dataset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createCategoryDataset(java.lang.Comparable[] rowKeys, java.lang.Comparable[] columnKeys, double[][] data)",
    "name": "createCategoryDataset",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.category.CategoryDataset",
      "name": "org.jfree.data.category.CategoryDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Comparable;",
          "name": "Comparable[]",
          "isArray": true
        },
        "name": "rowKeys"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Comparable;",
          "name": "Comparable[]",
          "isArray": true
        },
        "name": "columnKeys"
      },
      {
        "type": {
          "qualifiedName": "[[D",
          "name": "double[][]",
          "isArray": true
        },
        "name": "data"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Comparable;",
            "name": "Comparable[]",
            "isArray": true
          },
          "name": "rowKeys"
        },
        "comment": "the row keys (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Comparable;",
            "name": "Comparable[]",
            "isArray": true
          },
          "name": "columnKeys"
        },
        "comment": "the column keys (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[[D",
            "name": "double[][]",
            "isArray": true
          },
          "name": "data"
        },
        "comment": "the data.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The dataset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createCategoryDataset(java.lang.Comparable rowKey, org.jfree.data.KeyedValues rowData)",
    "name": "createCategoryDataset",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.category.CategoryDataset",
      "name": "org.jfree.data.category.CategoryDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "rowKey"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.data.KeyedValues",
          "name": "KeyedValues",
          "isArray": false
        },
        "name": "rowData"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "rowKey"
        },
        "comment": "the row key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.KeyedValues",
            "name": "KeyedValues",
            "isArray": false
          },
          "name": "rowData"
        },
        "comment": "the row data (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A dataset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sampleFunction2D(org.jfree.data.function.Function2D f, double start, double end, int samples, java.lang.Comparable seriesKey)",
    "name": "sampleFunction2D",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.xy.XYDataset",
      "name": "org.jfree.data.xy.XYDataset",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.function.Function2D",
          "name": "Function2D",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "end"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "samples"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "seriesKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.function.Function2D",
            "name": "Function2D",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "the function (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the start value for the range.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the end value for the range.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "samples"
        },
        "comment": "the number of sample points (. samples is > 1).",
        "kind": "PARAM",
        "condition": "args[3]>1"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "seriesKey"
        },
        "comment": "the key to give the resulting series (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A dataset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sampleFunction2DToSeries(org.jfree.data.function.Function2D f, double start, double end, int samples, java.lang.Comparable seriesKey)",
    "name": "sampleFunction2DToSeries",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.xy.XYSeries",
      "name": "org.jfree.data.xy.XYSeries",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.function.Function2D",
          "name": "Function2D",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "end"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "samples"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "seriesKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.function.Function2D",
            "name": "Function2D",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "the function (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the start value for the range.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the end value for the range.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "samples"
        },
        "comment": "the number of sample points (. samples is > 1).",
        "kind": "PARAM",
        "condition": "args[3]>1"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "seriesKey"
        },
        "comment": "the key to give the resulting series (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A series.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isEmptyOrNull(org.jfree.data.pie.PieDataset dataset)",
    "name": "isEmptyOrNull",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.pie.PieDataset",
          "name": "PieDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.pie.PieDataset",
            "name": "PieDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A boolean.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isEmptyOrNull(org.jfree.data.category.CategoryDataset dataset)",
    "name": "isEmptyOrNull",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A boolean.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isEmptyOrNull(org.jfree.data.xy.XYDataset dataset)",
    "name": "isEmptyOrNull",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A boolean.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findDomainBounds(org.jfree.data.xy.XYDataset dataset)",
    "name": "findDomainBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range of values (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findDomainBounds(org.jfree.data.xy.XYDataset dataset, boolean includeInterval)",
    "name": "findDomainBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "determines whether or not the x-interval is taken into account (only applies if the dataset is an IntervalXYDataset).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range of values (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findDomainBounds(org.jfree.data.xy.XYDataset dataset, java.util.List visibleSeriesKeys, boolean includeInterval)",
    "name": "findDomainBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "visibleSeriesKeys"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "visibleSeriesKeys"
        },
        "comment": "visibleSeriesKeys is visible. visible series keys (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "include the x-interval (if any)?.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The bounds (or null if the dataset contains no values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateDomainBounds(org.jfree.data.xy.XYDataset dataset)",
    "name": "iterateDomainBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateDomainBounds(org.jfree.data.xy.XYDataset dataset, boolean includeInterval)",
    "name": "iterateDomainBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "a flag that determines for an IntervalXYDataset. includeInterval is whether the x-interval or just the x-value is used to determine the overall range.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findRangeBounds(org.jfree.data.category.CategoryDataset dataset)",
    "name": "findRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findRangeBounds(org.jfree.data.category.CategoryDataset dataset, boolean includeInterval)",
    "name": "findRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "a flag that determines whether or not the y-interval is taken into account.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findRangeBounds(org.jfree.data.category.CategoryDataset dataset, java.util.List visibleSeriesKeys, boolean includeInterval)",
    "name": "findRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "visibleSeriesKeys"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "visibleSeriesKeys"
        },
        "comment": "the keys for the visible series (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "include the y-interval (if the dataset has a y-interval).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The data bounds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findRangeBounds(org.jfree.data.xy.XYDataset dataset)",
    "name": "findRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findRangeBounds(org.jfree.data.xy.XYDataset dataset, boolean includeInterval)",
    "name": "findRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "a flag that determines whether or not the y-interval is taken into account.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findRangeBounds(org.jfree.data.xy.XYDataset dataset, java.util.List visibleSeriesKeys, org.jfree.data.Range xRange, boolean includeInterval)",
    "name": "findRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "visibleSeriesKeys"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.data.Range",
          "name": "Range",
          "isArray": false
        },
        "name": "xRange"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "visibleSeriesKeys"
        },
        "comment": "the keys for the visible series (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.Range",
            "name": "Range",
            "isArray": false
          },
          "name": "xRange"
        },
        "comment": "the x-range (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "include the y-interval (if the dataset has a y-interval).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The data bounds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateCategoryRangeBounds(org.jfree.data.category.CategoryDataset dataset, boolean includeInterval)",
    "name": "iterateCategoryRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "a flag that determines whether or not the y-interval is taken into account.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateRangeBounds(org.jfree.data.category.CategoryDataset dataset)",
    "name": "iterateRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateRangeBounds(org.jfree.data.category.CategoryDataset dataset, boolean includeInterval)",
    "name": "iterateRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "a flag that determines whether or not the y-interval is taken into account.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset dataset, java.util.List visibleSeriesKeys, boolean includeInterval)",
    "name": "iterateToFindRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "visibleSeriesKeys"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "a flag that determines whether or not the y-interval is taken into account.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "visibleSeriesKeys"
        },
        "comment": "visibleSeriesKeys is visible. visible series keys.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateXYRangeBounds(org.jfree.data.xy.XYDataset dataset)",
    "name": "iterateXYRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateRangeBounds(org.jfree.data.xy.XYDataset dataset)",
    "name": "iterateRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateRangeBounds(org.jfree.data.xy.XYDataset dataset, boolean includeInterval)",
    "name": "iterateRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "a flag that determines for an IntervalXYDataset. includeInterval is whether the y-interval or just the y-value is used to determine the overall range.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateToFindDomainBounds(org.jfree.data.xy.XYDataset dataset, java.util.List visibleSeriesKeys, boolean includeInterval)",
    "name": "iterateToFindDomainBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "visibleSeriesKeys"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "visibleSeriesKeys"
        },
        "comment": "visibleSeriesKeys is visible. visible series keys (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "a flag that determines whether or not the y-interval for the dataset is included (this only applies if the dataset is an instance of IntervalXYDataset).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The x-range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterateToFindRangeBounds(org.jfree.data.xy.XYDataset dataset, java.util.List visibleSeriesKeys, org.jfree.data.Range xRange, boolean includeInterval)",
    "name": "iterateToFindRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "visibleSeriesKeys"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.data.Range",
          "name": "Range",
          "isArray": false
        },
        "name": "xRange"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeInterval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "visibleSeriesKeys"
        },
        "comment": "visibleSeriesKeys is visible. visible series keys (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.Range",
            "name": "Range",
            "isArray": false
          },
          "name": "xRange"
        },
        "comment": "the x-range (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "includeInterval"
        },
        "comment": "a flag that determines whether or not the y-interval for the dataset is included (this only applies if the dataset is an instance of IntervalXYDataset).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The y-range (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findMinimumDomainValue(org.jfree.data.xy.XYDataset dataset)",
    "name": "findMinimumDomainValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The minimum value (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findMaximumDomainValue(org.jfree.data.xy.XYDataset dataset)",
    "name": "findMaximumDomainValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The maximum value (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findMinimumRangeValue(org.jfree.data.category.CategoryDataset dataset)",
    "name": "findMinimumRangeValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The minimum value (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findMinimumRangeValue(org.jfree.data.xy.XYDataset dataset)",
    "name": "findMinimumRangeValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The minimum value (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findMaximumRangeValue(org.jfree.data.category.CategoryDataset dataset)",
    "name": "findMaximumRangeValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The maximum value (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findMaximumRangeValue(org.jfree.data.xy.XYDataset dataset)",
    "name": "findMaximumRangeValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.XYDataset",
          "name": "XYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.XYDataset",
            "name": "XYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The maximum value (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findStackedRangeBounds(org.jfree.data.category.CategoryDataset dataset)",
    "name": "findStackedRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (null if the dataset contains no values).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findStackedRangeBounds(org.jfree.data.category.CategoryDataset dataset, double base)",
    "name": "findStackedRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "base"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "base"
        },
        "comment": "the base value for the bars.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (null if the dataset contains no values).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findStackedRangeBounds(org.jfree.data.category.CategoryDataset dataset, org.jfree.data.KeyToGroupMap map)",
    "name": "findStackedRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.data.KeyToGroupMap",
          "name": "KeyToGroupMap",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.KeyToGroupMap",
            "name": "KeyToGroupMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "a structure that maps series to groups.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The value range (null if the dataset contains no values).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findMinimumStackedRangeValue(org.jfree.data.category.CategoryDataset dataset)",
    "name": "findMinimumStackedRangeValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The minimum value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findMaximumStackedRangeValue(org.jfree.data.category.CategoryDataset dataset)",
    "name": "findMaximumStackedRangeValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The maximum value (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findStackedRangeBounds(org.jfree.data.xy.TableXYDataset dataset)",
    "name": "findStackedRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.TableXYDataset",
          "name": "TableXYDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.TableXYDataset",
            "name": "TableXYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range ([0.0, 0.0] if the dataset contains no values).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findStackedRangeBounds(org.jfree.data.xy.TableXYDataset dataset, double base)",
    "name": "findStackedRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.TableXYDataset",
          "name": "TableXYDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "base"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.TableXYDataset",
            "name": "TableXYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "base"
        },
        "comment": "the base value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range (null if the dataset contains no values).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "calculateStackTotal(org.jfree.data.xy.TableXYDataset dataset, int item)",
    "name": "calculateStackTotal",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.xy.TableXYDataset",
          "name": "TableXYDataset",
          "isArray": false
        },
        "name": "dataset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "item"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.xy.TableXYDataset",
            "name": "TableXYDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "item"
        },
        "comment": "the item index.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The total.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findCumulativeRangeBounds(org.jfree.data.category.CategoryDataset dataset)",
    "name": "findCumulativeRangeBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.data.general.DatasetUtilities",
      "name": "DatasetUtilities",
      "isArray": false
    },
    "targetClass": "org.jfree.data.general.DatasetUtilities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.Range",
      "name": "org.jfree.data.Range",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.category.CategoryDataset",
          "name": "CategoryDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.category.CategoryDataset",
            "name": "CategoryDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The range.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]