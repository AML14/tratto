[
  {
    "signature": "org.jfree.chart.plot.PiePlot()",
    "name": "org.jfree.chart.plot.PiePlot",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.jfree.chart.plot.PiePlot(org.jfree.data.general.PieDataset dataset)",
    "name": "org.jfree.chart.plot.PiePlot",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.general.PieDataset",
          "name": "PieDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.general.PieDataset",
            "name": "PieDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getDataset()",
    "name": "getDataset",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.data.general.PieDataset",
      "name": "org.jfree.data.general.PieDataset",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The dataset (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setDataset(org.jfree.data.general.PieDataset dataset)",
    "name": "setDataset",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.general.PieDataset",
          "name": "PieDataset",
          "isArray": false
        },
        "name": "dataset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.general.PieDataset",
            "name": "PieDataset",
            "isArray": false
          },
          "name": "dataset"
        },
        "comment": "the dataset (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getPieIndex()",
    "name": "getPieIndex",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The pie index.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setPieIndex(int index)",
    "name": "setPieIndex",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getStartAngle()",
    "name": "getStartAngle",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The start angle.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setStartAngle(double angle)",
    "name": "setStartAngle",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "angle"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "angle"
        },
        "comment": "the angle (in degrees).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getDirection()",
    "name": "getDirection",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.util.Rotation",
      "name": "org.jfree.chart.util.Rotation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The direction (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setDirection(org.jfree.chart.util.Rotation direction)",
    "name": "setDirection",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.util.Rotation",
          "name": "Rotation",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.util.Rotation",
            "name": "Rotation",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "the direction (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getInteriorGap()",
    "name": "getInteriorGap",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The gap (as a percentage of the available drawing space).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setInteriorGap(double percent)",
    "name": "setInteriorGap",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "percent"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "percent"
        },
        "comment": "the gap (as a percentage of the available drawing space).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isCircular()",
    "name": "isCircular",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A flag indicating whether the pie chart is circular.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setCircular(boolean flag)",
    "name": "setCircular",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "flag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "flag"
        },
        "comment": "flag is new. new value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setCircular(boolean circular, boolean notify)",
    "name": "setCircular",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "circular"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "notify"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "circular"
        },
        "comment": "circular is new. new value of the flag.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "notify"
        },
        "comment": "notify listeners?.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getIgnoreNullValues()",
    "name": "getIgnoreNullValues",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A boolean.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setIgnoreNullValues(boolean flag)",
    "name": "setIgnoreNullValues",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "flag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "flag"
        },
        "comment": "the flag.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getIgnoreZeroValues()",
    "name": "getIgnoreZeroValues",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A boolean.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setIgnoreZeroValues(boolean flag)",
    "name": "setIgnoreZeroValues",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "flag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "flag"
        },
        "comment": "the flag.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "lookupSectionPaint(java.lang.Comparable key)",
    "name": "lookupSectionPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the section key.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The paint for the specified section.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lookupSectionPaint(java.lang.Comparable key, boolean autoPopulate)",
    "name": "lookupSectionPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "autoPopulate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the section key.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "autoPopulate"
        },
        "comment": "a flag that controls whether the drawing supplier is used to auto-populate the section paint settings.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The paint.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSectionKey(int section)",
    "name": "getSectionKey",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Comparable",
      "name": "java.lang.Comparable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "section"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "section"
        },
        "comment": "the section index.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The key.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSectionPaint(java.lang.Comparable key)",
    "name": "getSectionPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The paint associated with the specified key, or null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "key is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "setSectionPaint(java.lang.Comparable key, java.awt.Paint paint)",
    "name": "setSectionPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.awt.Paint",
          "name": "Paint",
          "isArray": false
        },
        "name": "paint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Paint",
            "name": "Paint",
            "isArray": false
          },
          "name": "paint"
        },
        "comment": "the paint.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "key is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "getBaseSectionPaint()",
    "name": "getBaseSectionPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The paint (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setBaseSectionPaint(java.awt.Paint paint)",
    "name": "setBaseSectionPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Paint",
          "name": "Paint",
          "isArray": false
        },
        "name": "paint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Paint",
            "name": "Paint",
            "isArray": false
          },
          "name": "paint"
        },
        "comment": "the paint (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getSectionOutlinesVisible()",
    "name": "getSectionOutlinesVisible",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The flag that controls whether or not the outline is drawn for each pie section.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSectionOutlinesVisible(boolean visible)",
    "name": "setSectionOutlinesVisible",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "visible"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "visible"
        },
        "comment": "the flag.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "lookupSectionOutlinePaint(java.lang.Comparable key)",
    "name": "lookupSectionOutlinePaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the section key.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The paint for the specified section.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lookupSectionOutlinePaint(java.lang.Comparable key, boolean autoPopulate)",
    "name": "lookupSectionOutlinePaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "autoPopulate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the section key.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "autoPopulate"
        },
        "comment": "a flag that controls whether the drawing supplier is used to auto-populate the section outline paint settings.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The paint.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSectionOutlinePaint(java.lang.Comparable key)",
    "name": "getSectionOutlinePaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The paint associated with the specified key, or null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "key is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "setSectionOutlinePaint(java.lang.Comparable key, java.awt.Paint paint)",
    "name": "setSectionOutlinePaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.awt.Paint",
          "name": "Paint",
          "isArray": false
        },
        "name": "paint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Paint",
            "name": "Paint",
            "isArray": false
          },
          "name": "paint"
        },
        "comment": "the paint.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "key is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "getBaseSectionOutlinePaint()",
    "name": "getBaseSectionOutlinePaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The paint (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setBaseSectionOutlinePaint(java.awt.Paint paint)",
    "name": "setBaseSectionOutlinePaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Paint",
          "name": "Paint",
          "isArray": false
        },
        "name": "paint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Paint",
            "name": "Paint",
            "isArray": false
          },
          "name": "paint"
        },
        "comment": "the paint (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "lookupSectionOutlineStroke(java.lang.Comparable key)",
    "name": "lookupSectionOutlineStroke",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Stroke",
      "name": "java.awt.Stroke",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the section key.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The stroke for the specified section.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lookupSectionOutlineStroke(java.lang.Comparable key, boolean autoPopulate)",
    "name": "lookupSectionOutlineStroke",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Stroke",
      "name": "java.awt.Stroke",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "autoPopulate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the section key.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "autoPopulate"
        },
        "comment": "a flag that controls whether the drawing supplier is used to auto-populate the section outline stroke settings.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The stroke.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSectionOutlineStroke(java.lang.Comparable key)",
    "name": "getSectionOutlineStroke",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Stroke",
      "name": "java.awt.Stroke",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The stroke associated with the specified key, or null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "key is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "setSectionOutlineStroke(java.lang.Comparable key, java.awt.Stroke stroke)",
    "name": "setSectionOutlineStroke",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.awt.Stroke",
          "name": "Stroke",
          "isArray": false
        },
        "name": "stroke"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Stroke",
            "name": "Stroke",
            "isArray": false
          },
          "name": "stroke"
        },
        "comment": "the stroke.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "key is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "getBaseSectionOutlineStroke()",
    "name": "getBaseSectionOutlineStroke",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Stroke",
      "name": "java.awt.Stroke",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The stroke (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setBaseSectionOutlineStroke(java.awt.Stroke stroke)",
    "name": "setBaseSectionOutlineStroke",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Stroke",
          "name": "Stroke",
          "isArray": false
        },
        "name": "stroke"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Stroke",
            "name": "Stroke",
            "isArray": false
          },
          "name": "stroke"
        },
        "comment": "the stroke (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getShadowPaint()",
    "name": "getShadowPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The paint (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setShadowPaint(java.awt.Paint paint)",
    "name": "setShadowPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Paint",
          "name": "Paint",
          "isArray": false
        },
        "name": "paint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Paint",
            "name": "Paint",
            "isArray": false
          },
          "name": "paint"
        },
        "comment": "the paint (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getShadowXOffset()",
    "name": "getShadowXOffset",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The offset (in Java2D units).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setShadowXOffset(double offset)",
    "name": "setShadowXOffset",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "the offset (in Java2D units).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getShadowYOffset()",
    "name": "getShadowYOffset",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The offset (in Java2D units).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setShadowYOffset(double offset)",
    "name": "setShadowYOffset",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "the offset (in Java2D units).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getExplodePercent(java.lang.Comparable key)",
    "name": "getExplodePercent",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount that the section with the specified key should be exploded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "key is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "setExplodePercent(java.lang.Comparable key, double percent)",
    "name": "setExplodePercent",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "percent"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the section key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "percent"
        },
        "comment": "percent is explode. explode percentage (0.30 = 30 percent).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMaximumExplodePercent()",
    "name": "getMaximumExplodePercent",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The percent.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLabelGenerator()",
    "name": "getLabelGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.labels.PieSectionLabelGenerator",
      "name": "org.jfree.chart.labels.PieSectionLabelGenerator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The generator (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator generator)",
    "name": "setLabelGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.labels.PieSectionLabelGenerator",
          "name": "PieSectionLabelGenerator",
          "isArray": false
        },
        "name": "generator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.labels.PieSectionLabelGenerator",
            "name": "PieSectionLabelGenerator",
            "isArray": false
          },
          "name": "generator"
        },
        "comment": "the generator (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelGap()",
    "name": "getLabelGap",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The gap (a percentage, where 0.05 = five percent).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelGap(double gap)",
    "name": "setLabelGap",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "gap"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "gap"
        },
        "comment": "the gap (a percentage. gap is where 0.05 = five percent).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMaximumLabelWidth()",
    "name": "getMaximumLabelWidth",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The width (a percentage, where 0.20 = 20 percent).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMaximumLabelWidth(double width)",
    "name": "setMaximumLabelWidth",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "width"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "width"
        },
        "comment": "the width (a percentage. width is where 0.20 = 20 percent).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelLinksVisible()",
    "name": "getLabelLinksVisible",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A boolean.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelLinksVisible(boolean visible)",
    "name": "setLabelLinksVisible",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "visible"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "visible"
        },
        "comment": "the flag.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelLinkMargin()",
    "name": "getLabelLinkMargin",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The link margin (as a percentage, where 0.05 is five percent).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelLinkMargin(double margin)",
    "name": "setLabelLinkMargin",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "margin"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "margin"
        },
        "comment": "the margin.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelLinkPaint()",
    "name": "getLabelLinkPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The paint (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelLinkPaint(java.awt.Paint paint)",
    "name": "setLabelLinkPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Paint",
          "name": "Paint",
          "isArray": false
        },
        "name": "paint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Paint",
            "name": "Paint",
            "isArray": false
          },
          "name": "paint"
        },
        "comment": "the paint (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelLinkStroke()",
    "name": "getLabelLinkStroke",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Stroke",
      "name": "java.awt.Stroke",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The stroke.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelLinkStroke(java.awt.Stroke stroke)",
    "name": "setLabelLinkStroke",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Stroke",
          "name": "Stroke",
          "isArray": false
        },
        "name": "stroke"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Stroke",
            "name": "Stroke",
            "isArray": false
          },
          "name": "stroke"
        },
        "comment": "the stroke.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelFont()",
    "name": "getLabelFont",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "java.awt.Font",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The font (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelFont(java.awt.Font font)",
    "name": "setLabelFont",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Font",
          "name": "Font",
          "isArray": false
        },
        "name": "font"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Font",
            "name": "Font",
            "isArray": false
          },
          "name": "font"
        },
        "comment": "the font (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelPaint()",
    "name": "getLabelPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The paint (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelPaint(java.awt.Paint paint)",
    "name": "setLabelPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Paint",
          "name": "Paint",
          "isArray": false
        },
        "name": "paint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Paint",
            "name": "Paint",
            "isArray": false
          },
          "name": "paint"
        },
        "comment": "the paint (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelBackgroundPaint()",
    "name": "getLabelBackgroundPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The paint (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelBackgroundPaint(java.awt.Paint paint)",
    "name": "setLabelBackgroundPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Paint",
          "name": "Paint",
          "isArray": false
        },
        "name": "paint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Paint",
            "name": "Paint",
            "isArray": false
          },
          "name": "paint"
        },
        "comment": "the paint (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelOutlinePaint()",
    "name": "getLabelOutlinePaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The paint (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelOutlinePaint(java.awt.Paint paint)",
    "name": "setLabelOutlinePaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Paint",
          "name": "Paint",
          "isArray": false
        },
        "name": "paint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Paint",
            "name": "Paint",
            "isArray": false
          },
          "name": "paint"
        },
        "comment": "the paint (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelOutlineStroke()",
    "name": "getLabelOutlineStroke",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Stroke",
      "name": "java.awt.Stroke",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The stroke (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelOutlineStroke(java.awt.Stroke stroke)",
    "name": "setLabelOutlineStroke",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Stroke",
          "name": "Stroke",
          "isArray": false
        },
        "name": "stroke"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Stroke",
            "name": "Stroke",
            "isArray": false
          },
          "name": "stroke"
        },
        "comment": "the stroke (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelShadowPaint()",
    "name": "getLabelShadowPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Paint",
      "name": "java.awt.Paint",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The paint (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelShadowPaint(java.awt.Paint paint)",
    "name": "setLabelShadowPaint",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Paint",
          "name": "Paint",
          "isArray": false
        },
        "name": "paint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Paint",
            "name": "Paint",
            "isArray": false
          },
          "name": "paint"
        },
        "comment": "the paint (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelPadding()",
    "name": "getLabelPadding",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.util.RectangleInsets",
      "name": "org.jfree.chart.util.RectangleInsets",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The label padding (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelPadding(org.jfree.chart.util.RectangleInsets padding)",
    "name": "setLabelPadding",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.util.RectangleInsets",
          "name": "RectangleInsets",
          "isArray": false
        },
        "name": "padding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.util.RectangleInsets",
            "name": "RectangleInsets",
            "isArray": false
          },
          "name": "padding"
        },
        "comment": "the padding (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getSimpleLabels()",
    "name": "getSimpleLabels",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A boolean.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSimpleLabels(boolean simple)",
    "name": "setSimpleLabels",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "simple"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "simple"
        },
        "comment": "simple is new. new flag value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getSimpleLabelOffset()",
    "name": "getSimpleLabelOffset",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.util.RectangleInsets",
      "name": "org.jfree.chart.util.RectangleInsets",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The offset (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSimpleLabelOffset(org.jfree.chart.util.RectangleInsets offset)",
    "name": "setSimpleLabelOffset",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.util.RectangleInsets",
          "name": "RectangleInsets",
          "isArray": false
        },
        "name": "offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.util.RectangleInsets",
            "name": "RectangleInsets",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "the offset (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabelDistributor()",
    "name": "getLabelDistributor",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.plot.AbstractPieLabelDistributor",
      "name": "org.jfree.chart.plot.AbstractPieLabelDistributor",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The label distributor (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLabelDistributor(org.jfree.chart.plot.AbstractPieLabelDistributor distributor)",
    "name": "setLabelDistributor",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.AbstractPieLabelDistributor",
          "name": "AbstractPieLabelDistributor",
          "isArray": false
        },
        "name": "distributor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.AbstractPieLabelDistributor",
            "name": "AbstractPieLabelDistributor",
            "isArray": false
          },
          "name": "distributor"
        },
        "comment": "the distributor (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getToolTipGenerator()",
    "name": "getToolTipGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.labels.PieToolTipGenerator",
      "name": "org.jfree.chart.labels.PieToolTipGenerator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The generator (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator generator)",
    "name": "setToolTipGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.labels.PieToolTipGenerator",
          "name": "PieToolTipGenerator",
          "isArray": false
        },
        "name": "generator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.labels.PieToolTipGenerator",
            "name": "PieToolTipGenerator",
            "isArray": false
          },
          "name": "generator"
        },
        "comment": "the generator (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getURLGenerator()",
    "name": "getURLGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.urls.PieURLGenerator",
      "name": "org.jfree.chart.urls.PieURLGenerator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The generator (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setURLGenerator(org.jfree.chart.urls.PieURLGenerator generator)",
    "name": "setURLGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.urls.PieURLGenerator",
          "name": "PieURLGenerator",
          "isArray": false
        },
        "name": "generator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.urls.PieURLGenerator",
            "name": "PieURLGenerator",
            "isArray": false
          },
          "name": "generator"
        },
        "comment": "the generator (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMinimumArcAngleToDraw()",
    "name": "getMinimumArcAngleToDraw",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The minimum angle.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMinimumArcAngleToDraw(double angle)",
    "name": "setMinimumArcAngleToDraw",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "angle"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "angle"
        },
        "comment": "angle is minimum. minimum angle.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLegendItemShape()",
    "name": "getLegendItemShape",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Shape",
      "name": "java.awt.Shape",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The shape (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLegendItemShape(java.awt.Shape shape)",
    "name": "setLegendItemShape",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Shape",
          "name": "Shape",
          "isArray": false
        },
        "name": "shape"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Shape",
            "name": "Shape",
            "isArray": false
          },
          "name": "shape"
        },
        "comment": "the shape (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLegendLabelGenerator()",
    "name": "getLegendLabelGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.labels.PieSectionLabelGenerator",
      "name": "org.jfree.chart.labels.PieSectionLabelGenerator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The legend label generator (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLegendLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator generator)",
    "name": "setLegendLabelGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.labels.PieSectionLabelGenerator",
          "name": "PieSectionLabelGenerator",
          "isArray": false
        },
        "name": "generator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.labels.PieSectionLabelGenerator",
            "name": "PieSectionLabelGenerator",
            "isArray": false
          },
          "name": "generator"
        },
        "comment": "the generator (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLegendLabelToolTipGenerator()",
    "name": "getLegendLabelToolTipGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.labels.PieSectionLabelGenerator",
      "name": "org.jfree.chart.labels.PieSectionLabelGenerator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The legend label tool tip generator (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLegendLabelToolTipGenerator(org.jfree.chart.labels.PieSectionLabelGenerator generator)",
    "name": "setLegendLabelToolTipGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.labels.PieSectionLabelGenerator",
          "name": "PieSectionLabelGenerator",
          "isArray": false
        },
        "name": "generator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.labels.PieSectionLabelGenerator",
            "name": "PieSectionLabelGenerator",
            "isArray": false
          },
          "name": "generator"
        },
        "comment": "the generator (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLegendLabelURLGenerator()",
    "name": "getLegendLabelURLGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.urls.PieURLGenerator",
      "name": "org.jfree.chart.urls.PieURLGenerator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The legend label URL generator (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLegendLabelURLGenerator(org.jfree.chart.urls.PieURLGenerator generator)",
    "name": "setLegendLabelURLGenerator",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.urls.PieURLGenerator",
          "name": "PieURLGenerator",
          "isArray": false
        },
        "name": "generator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.urls.PieURLGenerator",
            "name": "PieURLGenerator",
            "isArray": false
          },
          "name": "generator"
        },
        "comment": "the generator (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "initialise(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D plotArea, org.jfree.chart.plot.PiePlot plot, java.lang.Integer index, org.jfree.chart.plot.PlotRenderingInfo info)",
    "name": "initialise",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.plot.PiePlotState",
      "name": "org.jfree.chart.plot.PiePlotState",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "plotArea"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PiePlot",
          "name": "PiePlot",
          "isArray": false
        },
        "name": "plot"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Integer",
          "name": "Integer",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PlotRenderingInfo",
          "name": "PlotRenderingInfo",
          "isArray": false
        },
        "name": "info"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the graphics device.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "plotArea"
        },
        "comment": "the plot area (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PiePlot",
            "name": "PiePlot",
            "isArray": false
          },
          "name": "plot"
        },
        "comment": "the plot.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Integer",
            "name": "Integer",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "index is secondary. secondary index (null for primary renderer).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PlotRenderingInfo",
            "name": "PlotRenderingInfo",
            "isArray": false
          },
          "name": "info"
        },
        "comment": "collects chart rendering information for return to caller.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A state object (maintains state information relevant to one chart drawing).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "draw(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D area, java.awt.geom.Point2D anchor, org.jfree.chart.plot.PlotState parentState, org.jfree.chart.plot.PlotRenderingInfo info)",
    "name": "draw",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "area"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Point2D",
          "name": "Point2D",
          "isArray": false
        },
        "name": "anchor"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PlotState",
          "name": "PlotState",
          "isArray": false
        },
        "name": "parentState"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PlotRenderingInfo",
          "name": "PlotRenderingInfo",
          "isArray": false
        },
        "name": "info"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the graphics device.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "area"
        },
        "comment": "the area within which the plot should be drawn.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Point2D",
            "name": "Point2D",
            "isArray": false
          },
          "name": "anchor"
        },
        "comment": "the anchor point (null permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PlotState",
            "name": "PlotState",
            "isArray": false
          },
          "name": "parentState"
        },
        "comment": "the state from the parent plot if there is one.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PlotRenderingInfo",
            "name": "PlotRenderingInfo",
            "isArray": false
          },
          "name": "info"
        },
        "comment": "collects info about the drawing (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "drawPie(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D plotArea, org.jfree.chart.plot.PlotRenderingInfo info)",
    "name": "drawPie",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "plotArea"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PlotRenderingInfo",
          "name": "PlotRenderingInfo",
          "isArray": false
        },
        "name": "info"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the graphics device.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "plotArea"
        },
        "comment": "the plot area.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PlotRenderingInfo",
            "name": "PlotRenderingInfo",
            "isArray": false
          },
          "name": "info"
        },
        "comment": "chart rendering info.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "drawItem(java.awt.Graphics2D g2, int section, java.awt.geom.Rectangle2D dataArea, org.jfree.chart.plot.PiePlotState state, int currentPass)",
    "name": "drawItem",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "section"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "dataArea"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PiePlotState",
          "name": "PiePlotState",
          "isArray": false
        },
        "name": "state"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "currentPass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the graphics device (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "section"
        },
        "comment": "the section index.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "dataArea"
        },
        "comment": "the data plot area.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PiePlotState",
            "name": "PiePlotState",
            "isArray": false
          },
          "name": "state"
        },
        "comment": "state information for one chart.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "currentPass"
        },
        "comment": "the current pass index.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "drawSimpleLabels(java.awt.Graphics2D g2, java.util.List keys, double totalValue, java.awt.geom.Rectangle2D plotArea, java.awt.geom.Rectangle2D pieArea, org.jfree.chart.plot.PiePlotState state)",
    "name": "drawSimpleLabels",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "keys"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "totalValue"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "plotArea"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "pieArea"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PiePlotState",
          "name": "PiePlotState",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the graphics device.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "keys"
        },
        "comment": "the section keys.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "totalValue"
        },
        "comment": "totalValue is total. total value for all sections in the pie.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "plotArea"
        },
        "comment": "the plot area.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "pieArea"
        },
        "comment": "the area containing the pie.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PiePlotState",
            "name": "PiePlotState",
            "isArray": false
          },
          "name": "state"
        },
        "comment": "the plot state.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "drawLabels(java.awt.Graphics2D g2, java.util.List keys, double totalValue, java.awt.geom.Rectangle2D plotArea, java.awt.geom.Rectangle2D linkArea, org.jfree.chart.plot.PiePlotState state)",
    "name": "drawLabels",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "keys"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "totalValue"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "plotArea"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "linkArea"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PiePlotState",
          "name": "PiePlotState",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the graphics device.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "keys"
        },
        "comment": "the keys.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "totalValue"
        },
        "comment": "totalValue is total. total value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "plotArea"
        },
        "comment": "the plot area.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "linkArea"
        },
        "comment": "the link area.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PiePlotState",
            "name": "PiePlotState",
            "isArray": false
          },
          "name": "state"
        },
        "comment": "the state.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "drawLeftLabels(org.jfree.data.KeyedValues leftKeys, java.awt.Graphics2D g2, java.awt.geom.Rectangle2D plotArea, java.awt.geom.Rectangle2D linkArea, float maxLabelWidth, org.jfree.chart.plot.PiePlotState state)",
    "name": "drawLeftLabels",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.KeyedValues",
          "name": "KeyedValues",
          "isArray": false
        },
        "name": "leftKeys"
      },
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "plotArea"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "linkArea"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "maxLabelWidth"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PiePlotState",
          "name": "PiePlotState",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.KeyedValues",
            "name": "KeyedValues",
            "isArray": false
          },
          "name": "leftKeys"
        },
        "comment": "a collection of keys and angles (to the middle of the section. leftKeys is in degrees) for the sections on the left side of the plot.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the graphics device.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "plotArea"
        },
        "comment": "the plot area.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "linkArea"
        },
        "comment": "the link area.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "maxLabelWidth"
        },
        "comment": "the maximum label width.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PiePlotState",
            "name": "PiePlotState",
            "isArray": false
          },
          "name": "state"
        },
        "comment": "the state.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "drawRightLabels(org.jfree.data.KeyedValues keys, java.awt.Graphics2D g2, java.awt.geom.Rectangle2D plotArea, java.awt.geom.Rectangle2D linkArea, float maxLabelWidth, org.jfree.chart.plot.PiePlotState state)",
    "name": "drawRightLabels",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.data.KeyedValues",
          "name": "KeyedValues",
          "isArray": false
        },
        "name": "keys"
      },
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "plotArea"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "linkArea"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "maxLabelWidth"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PiePlotState",
          "name": "PiePlotState",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.data.KeyedValues",
            "name": "KeyedValues",
            "isArray": false
          },
          "name": "keys"
        },
        "comment": "the keys.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the graphics device.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "plotArea"
        },
        "comment": "the plot area.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "linkArea"
        },
        "comment": "the link area.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "maxLabelWidth"
        },
        "comment": "the maximum label width.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PiePlotState",
            "name": "PiePlotState",
            "isArray": false
          },
          "name": "state"
        },
        "comment": "the state.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLegendItems()",
    "name": "getLegendItems",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jfree.chart.LegendItemCollection",
      "name": "org.jfree.chart.LegendItemCollection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The legend items (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPlotType()",
    "name": "getPlotType",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The plot type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getArcBounds(java.awt.geom.Rectangle2D unexploded, java.awt.geom.Rectangle2D exploded, double angle, double extent, double explodePercent)",
    "name": "getArcBounds",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.geom.Rectangle2D",
      "name": "java.awt.geom.Rectangle2D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "unexploded"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Rectangle2D",
          "name": "Rectangle2D",
          "isArray": false
        },
        "name": "exploded"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "angle"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "extent"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "explodePercent"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "unexploded"
        },
        "comment": "the area inside which the unexploded pie sections are drawn.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.geom.Rectangle2D",
            "name": "Rectangle2D",
            "isArray": false
          },
          "name": "exploded"
        },
        "comment": "the area inside which the exploded pie sections are drawn.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "angle"
        },
        "comment": "the start angle.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "extent"
        },
        "comment": "the extent of the arc.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "explodePercent"
        },
        "comment": "the amount by which the pie section is exploded.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A rectangle that can be used to create a pie section.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "drawLeftLabel(java.awt.Graphics2D g2, org.jfree.chart.plot.PiePlotState state, org.jfree.chart.plot.PieLabelRecord record)",
    "name": "drawLeftLabel",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PiePlotState",
          "name": "PiePlotState",
          "isArray": false
        },
        "name": "state"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PieLabelRecord",
          "name": "PieLabelRecord",
          "isArray": false
        },
        "name": "record"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the graphics device.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PiePlotState",
            "name": "PiePlotState",
            "isArray": false
          },
          "name": "state"
        },
        "comment": "the state.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PieLabelRecord",
            "name": "PieLabelRecord",
            "isArray": false
          },
          "name": "record"
        },
        "comment": "the label record.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "drawRightLabel(java.awt.Graphics2D g2, org.jfree.chart.plot.PiePlotState state, org.jfree.chart.plot.PieLabelRecord record)",
    "name": "drawRightLabel",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PiePlotState",
          "name": "PiePlotState",
          "isArray": false
        },
        "name": "state"
      },
      {
        "type": {
          "qualifiedName": "org.jfree.chart.plot.PieLabelRecord",
          "name": "PieLabelRecord",
          "isArray": false
        },
        "name": "record"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the graphics device.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PiePlotState",
            "name": "PiePlotState",
            "isArray": false
          },
          "name": "state"
        },
        "comment": "the state.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.plot.PieLabelRecord",
            "name": "PieLabelRecord",
            "isArray": false
          },
          "name": "record"
        },
        "comment": "the label record.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object obj)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to test against (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true or false.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "org.jfree.chart.plot.PiePlot",
      "name": "PiePlot",
      "isArray": false
    },
    "targetClass": "org.jfree.chart.plot.PiePlot",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A clone.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.CloneNotSupportedException",
          "name": "CloneNotSupportedException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "some component of the plot does not support cloning.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]