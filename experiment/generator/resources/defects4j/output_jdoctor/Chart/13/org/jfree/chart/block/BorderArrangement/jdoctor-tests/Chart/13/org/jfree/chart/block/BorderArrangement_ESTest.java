/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 02:07:09 GMT 2023
 */
package org.jfree.chart.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.IndexColorModel;
import java.text.AttributedCharacterIterator;
import java.time.Clock;
import java.time.LocalDate;
import java.time.chrono.ChronoLocalDate;
import java.time.chrono.IsoEra;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.TimeZone;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.block.Block;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.BorderArrangement;
import org.jfree.chart.block.CenterArrangement;
import org.jfree.chart.block.ColorBlock;
import org.jfree.chart.block.EmptyBlock;
import org.jfree.chart.block.FlowArrangement;
import org.jfree.chart.block.LengthConstraintType;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.data.Range;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.IntervalXYDelegate;
import org.junit.runner.RunWith;
import sun.awt.SunHints;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class BorderArrangement_ESTest extends BorderArrangement_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-186.01), 1428.270794, 0.0, (-186.01));
        blockContainer0.trimBorder(rectangle2D_Double0);
        FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
        Graphics2D graphics2D0 = null;
        blockContainer0.setPadding(1428.270794, (-1.0), (-1183.96070736), (-1.7976931348623157E308));
        FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[");
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
        IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(defaultTableXYDataset0);
        intervalXYDelegate0.getDomainBounds(false);
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 0.0);
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, (Range) null);
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        Graphics2D graphics2D0 = null;
        TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-127);
        byteArray0[1] = (byte) 114;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-458.6479027), (-912.3));
        borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        Range range0 = new Range(13.100398612273521, 13.100398612273521);
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
        RectangleConstraint rectangleConstraint1 = new RectangleConstraint(13.100398612273521, range0, lengthConstraintType0, 0.0, range0, lengthConstraintType0);
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
        blockContainer0.arrange((Graphics2D) null, (RectangleConstraint) null);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        Graphics2D graphics2D0 = null;
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) 4;
        byteArray0[1] = (byte) 65;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
        Range range0 = new Range((-17.214925318493947), (-17.214925318493947));
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.RANGE;
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-17.214925318493947), range0, lengthConstraintType0, 0.0, range0, lengthConstraintType0);
        RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toFixedHeight(1176.7792870805408);
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint1);
        blockContainer0.arrange((Graphics2D) null, (RectangleConstraint) null);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
        boolean boolean0 = borderArrangement0.equals(rectangleEdge0);
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
        boolean boolean0 = borderArrangement0.equals(rectangleEdge0);
        borderArrangement0.clear();
        Clock clock0 = MockClock.systemDefaultZone();
        MockLocalDate.now(clock0);
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.clear();
        FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
        int[] intArray0 = new int[7];
        borderArrangement0.add((Block) null, rectangleEdge0);
        rectangleEdge0.toString();
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
        borderArrangement0.equals(rectangleEdge0);
        borderArrangement0.clear();
        Clock clock0 = MockClock.systemDefaultZone();
        LocalDate localDate0 = MockLocalDate.now(clock0);
        borderArrangement0.equals(localDate0);
        borderArrangement0.clear();
        FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
        int[] intArray0 = new int[7];
        borderArrangement0.add((Block) null, rectangleEdge0);
        rectangleEdge0.toString();
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        Graphics2D graphics2D0 = null;
        Range range0 = new Range(0.0, 0.0);
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
        FileSystemHandling.shouldAllThrowIOExceptions();
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range0);
        SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent("Nd4");
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
        borderArrangement0.equals(seriesChangeEvent0);
        borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.equals((Object) null);
        EmptyBlock emptyBlock0 = new EmptyBlock(2.0, 2.0);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Rectangle rectangle0 = new Rectangle();
        borderArrangement0.add(emptyBlock0, emptyBlock0);
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        Graphics2D graphics2D0 = null;
        Range range0 = new Range(13.100398612273521, 13.100398612273521);
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
        FileSystemHandling.shouldAllThrowIOExceptions();
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(13.100398612273521, range0, lengthConstraintType0, 0.0, range0, lengthConstraintType0);
        SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent("Nd4");
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 0;
        byteArray0[1] = (byte) 118;
        byteArray0[2] = (byte) (-12);
        byteArray0[3] = (byte) 59;
        byteArray0[4] = (byte) 0;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        blockContainer0.setMargin((double) (byte) 0, (double) (byte) (-12), (double) (byte) (-12), (double) (byte) (-12));
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        BlockContainer blockContainer1 = new BlockContainer();
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.arrangeFF(blockContainer1, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, (byte) 59);
        System.setCurrentTimeMillis((byte) 59);
        CenterArrangement centerArrangement0 = new CenterArrangement();
        borderArrangement0.add(blockContainer1, (Object) null);
        borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeFR(blockContainer1, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        borderArrangement0.equals(borderArrangement0);
        BlockContainer blockContainer0 = new BlockContainer();
        AffineTransform affineTransform0 = AffineTransform.getTranslateInstance((-2100.724604096333), (-2100.724604096333));
        HashMap<RenderingHints.Key, ChronoLocalDate> hashMap0 = new HashMap<RenderingHints.Key, ChronoLocalDate>();
        RenderingHints renderingHints0 = new RenderingHints(hashMap0);
        AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
        byte[] byteArray0 = new byte[1];
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        borderArrangement0.clear();
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
        RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
        boolean boolean0 = borderArrangement0.equals(rectangleEdge0);
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
        RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
        boolean boolean0 = borderArrangement0.equals(rectangleEdge0);
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, (Range) null, lengthConstraintType0, (-287.4701887638619), (Range) null, lengthConstraintType0);
        Size2D size2D0 = borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
        HashMap<AttributedCharacterIterator.Attribute, Integer> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, Integer>();
        Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
        char[] charArray0 = new char[8];
        charArray0[0] = 'O';
        charArray0[1] = 'I';
        charArray0[2] = '/';
        charArray0[3] = 'D';
        charArray0[4] = 'I';
        charArray0[5] = '<';
        charArray0[6] = 's';
        charArray0[7] = ';';
        AffineTransform affineTransform0 = AffineTransform.getTranslateInstance((-1.0), 0.0);
        FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
        Rectangle2D rectangle2D0 = font0.getStringBounds(charArray0, (int) (byte) 0, (int) (byte) 0, fontRenderContext0);
        RectangleEdge rectangleEdge1 = RectangleEdge.TOP;
        RectangleEdge.coordinate(rectangle2D0, rectangleEdge1);
        RectangleEdge rectangleEdge2 = RectangleEdge.opposite(rectangleEdge0);
        borderArrangement0.add(blockContainer0, rectangleEdge2);
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        Graphics2D graphics2D0 = null;
        TimeZone timeZone0 = TimeZone.getTimeZone("Not implemented.");
        TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
        boolean boolean0 = false;
        Range range0 = new Range(0.0, 855.4494347);
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(855.4494347, range0);
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
        timeTableXYDataset0.getDomainBounds(false);
        RectangleConstraint rectangleConstraint1 = new RectangleConstraint(855.4494347, (Range) null);
        AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
        borderArrangement0.add(blockContainer0, attributedCharacterIterator_Attribute0);
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 0;
        byteArray0[1] = (byte) 118;
        byteArray0[2] = (byte) (-12);
        byteArray0[3] = (byte) 59;
        byteArray0[4] = (byte) 0;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        blockContainer0.clear();
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        BlockContainer blockContainer1 = new BlockContainer();
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.arrangeNN(blockContainer1, (Graphics2D) null);
        borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, (byte) 59);
        System.setCurrentTimeMillis((byte) 59);
        CenterArrangement centerArrangement0 = new CenterArrangement();
        borderArrangement0.add(blockContainer1, (Object) null);
        borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint0);
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
        borderArrangement0.arrangeRR(blockContainer1, range0, range0, (Graphics2D) null);
        borderArrangement0.arrangeFR(blockContainer1, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        Graphics2D graphics2D0 = null;
        Range range0 = new Range(13.100398612273521, 13.100398612273521);
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range0);
        RectangleConstraint rectangleConstraint1 = null;
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent("N4");
        categoryTableXYDataset0.getDomainBounds(true);
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, 13.100398612273521);
        borderArrangement0.arrangeRR(blockContainer0, range0, (Range) null, (Graphics2D) null);
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 0;
        byteArray0[1] = (byte) 118;
        byteArray0[2] = (byte) (-12);
        byteArray0[3] = (byte) 59;
        byteArray0[4] = (byte) 0;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        BlockContainer blockContainer1 = new BlockContainer();
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.arrangeNN(blockContainer1, (Graphics2D) null);
        borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, (byte) 59);
        System.setCurrentTimeMillis((byte) 59);
        CenterArrangement centerArrangement0 = new CenterArrangement();
        borderArrangement0.add(blockContainer1, (Object) null);
        borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeFR(blockContainer1, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 0;
        byteArray0[1] = (byte) 118;
        byteArray0[2] = (byte) (-12);
        byteArray0[3] = (byte) 59;
        byteArray0[4] = (byte) 0;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        BlockContainer blockContainer1 = new BlockContainer();
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.arrangeNN(blockContainer1, (Graphics2D) null);
        borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, (byte) 59);
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        System.setCurrentTimeMillis((byte) 59);
        CenterArrangement centerArrangement0 = new CenterArrangement();
        BlockContainer blockContainer2 = new BlockContainer(centerArrangement0);
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        RectangleInsets rectangleInsets0 = new RectangleInsets();
        blockContainer1.setMargin(rectangleInsets0);
        categoryTableXYDataset0.getDomainBounds(false);
        borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeFR(blockContainer2, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 0;
        byteArray0[1] = (byte) 118;
        byteArray0[2] = (byte) (-12);
        byteArray0[3] = (byte) 59;
        byteArray0[4] = (byte) 0;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        Size2D size2D0 = borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        BlockContainer blockContainer1 = new BlockContainer();
        FileSystemHandling.shouldAllThrowIOExceptions();
        rectangleConstraint0.calculateConstrainedSize(size2D0);
        borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, (byte) 59);
        System.setCurrentTimeMillis((byte) 59);
        CenterArrangement centerArrangement0 = new CenterArrangement();
        BlockContainer blockContainer2 = new BlockContainer(centerArrangement0);
        SunHints.Key sunHints_Key0 = (SunHints.Key) RenderingHints.KEY_ALPHA_INTERPOLATION;
        blockContainer2.add((Block) blockContainer1, (Object) sunHints_Key0);
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        Range range0 = new Range((byte) 0, (byte) 118);
        borderArrangement0.add(blockContainer2, (Object) null);
        borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeFN(blockContainer2, (Graphics2D) null, 0.0);
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 0;
        byteArray0[1] = (byte) 118;
        byteArray0[2] = (byte) (-12);
        byteArray0[3] = (byte) 59;
        byteArray0[4] = (byte) 0;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        BlockContainer blockContainer1 = new BlockContainer();
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.arrangeNN(blockContainer1, (Graphics2D) null);
        borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, (byte) 59);
        System.setCurrentTimeMillis((byte) 59);
        CenterArrangement centerArrangement0 = new CenterArrangement();
        BlockContainer blockContainer2 = new BlockContainer(centerArrangement0);
        SunHints.Key sunHints_Key0 = (SunHints.Key) RenderingHints.KEY_ALPHA_INTERPOLATION;
        blockContainer2.add((Block) blockContainer1, (Object) sunHints_Key0);
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        categoryTableXYDataset0.getDomainBounds(false);
        borderArrangement0.add(blockContainer2, (Object) null);
        borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeFR(blockContainer2, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        IsoEra isoEra0 = IsoEra.BCE;
        borderArrangement0.equals(isoEra0);
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, 0.0);
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test1921() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        Graphics2D graphics2D0 = null;
        Range range0 = new Range(13.100398612273521, 13.100398612273521);
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.RANGE;
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(13.100398612273521, range0, lengthConstraintType0, 0.0, range0, lengthConstraintType0);
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        categoryTableXYDataset0.getDomainBounds(true);
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test2022() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        BufferedImage bufferedImage0 = new BufferedImage(193, 193, 7);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        borderArrangement0.arrangeFN(blockContainer0, graphics2D0, 0);
        FlowArrangement flowArrangement0 = new FlowArrangement();
        BlockContainer blockContainer1 = new BlockContainer(flowArrangement0);
        AffineTransformOp affineTransformOp0 = null;
        affineTransformOp0 = new AffineTransformOp(((SunGraphics2D) graphics2D0).transform, 0);
    }

    @Test(timeout = 4000)
    public void test2123() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        TimeZone timeZone0 = TimeZone.getTimeZone("Not implemented.");
        TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
        boolean boolean0 = false;
        Range range0 = new Range(855.4494347, 855.4494347);
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(855.4494347, range0);
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
        borderArrangement0.add(blockContainer0, attributedCharacterIterator_Attribute0);
    }

    @Test(timeout = 4000)
    public void test2224() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        Graphics2D graphics2D0 = null;
        Locale.forLanguageTag("d8p(z5BV7{;=aL");
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-1.0), (-2348.746));
        rectangleConstraint0.toString();
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test2325() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 0;
        byteArray0[1] = (byte) 118;
        byteArray0[2] = (byte) (-12);
        byteArray0[3] = (byte) 59;
        byteArray0[4] = (byte) 0;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        RectangleConstraint rectangleConstraint1 = blockContainer0.toContentConstraint(rectangleConstraint0);
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint1);
        BlockContainer blockContainer1 = new BlockContainer();
        Graphics2D graphics2D0 = null;
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.arrangeNN(blockContainer1, (Graphics2D) null);
        borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, (byte) 59);
        System.setCurrentTimeMillis((byte) 59);
        CenterArrangement centerArrangement0 = new CenterArrangement();
        BlockContainer blockContainer2 = new BlockContainer(centerArrangement0);
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        categoryTableXYDataset0.getDomainBounds(false);
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.RANGE;
        RectangleConstraint rectangleConstraint2 = new RectangleConstraint((-1.0), (Range) null, lengthConstraintType0, (byte) 118, (Range) null, lengthConstraintType0);
        borderArrangement0.arrange(blockContainer2, (Graphics2D) null, rectangleConstraint2);
    }

    @Test(timeout = 4000)
    public void test2426() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
        Graphics2D graphics2D0 = null;
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
        IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(defaultTableXYDataset0);
        intervalXYDelegate0.getDomainBounds(false);
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, (Range) null);
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test2527() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        EmptyBlock emptyBlock0 = new EmptyBlock(5905.80729, Double.POSITIVE_INFINITY);
        blockContainer0.add((Block) emptyBlock0);
        Graphics2D graphics2D0 = null;
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-2.147483648E9), 0.0);
        RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toUnconstrainedHeight();
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint1);
    }

    @Test(timeout = 4000)
    public void test2628() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        BufferedImage bufferedImage0 = new BufferedImage(193, 193, 7);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(7, 7);
        Size2D size2D0 = borderArrangement0.arrangeFF(blockContainer0, graphics2D0, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test2729() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        Size2D size2D0 = borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
    }

    @Test(timeout = 4000)
    public void test2830() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        Color color0 = Color.getColor("Ve!CDbg19FKCi", 3441);
        ColorBlock colorBlock0 = new ColorBlock(color0, 3441, 3441);
        RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
        blockContainer0.add((Block) colorBlock0, (Object) rectangleEdge0);
        borderArrangement0.add(blockContainer0, blockContainer0);
    }

    @Test(timeout = 4000)
    public void test2931() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, (RectangleConstraint) null);
    }

    @Test(timeout = 4000)
    public void test3032() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        CenterArrangement centerArrangement0 = new CenterArrangement();
        BlockContainer blockContainer0 = new BlockContainer(centerArrangement0);
        Graphics2D graphics2D0 = null;
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, Double.NaN);
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-60.24901));
    }

    @Test(timeout = 4000)
    public void test3133() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        borderArrangement0.equals((Object) null);
        Object object0 = new Object();
        borderArrangement0.equals(object0);
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        rectangleConstraint0.toString();
        borderArrangement0.arrangeFF((BlockContainer) null, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeFN((BlockContainer) null, (Graphics2D) null, 0.0);
    }

    @Test(timeout = 4000)
    public void test3234() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        Graphics2D graphics2D0 = null;
        RectangleConstraint rectangleConstraint0 = null;
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, (RectangleConstraint) null);
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        Graphics2D graphics2D0 = null;
        TimeZone timeZone0 = TimeZone.getTimeZone("");
        TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
        boolean boolean0 = false;
        timeTableXYDataset0.getDomainBounds(false);
        timeTableXYDataset0.clear();
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (Range) null);
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test3436() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        borderArrangement0.arrangeFN(blockContainer0, (Graphics2D) null, (-381.85331276));
    }

    @Test(timeout = 4000)
    public void test3537() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        Block block0 = null;
        String string0 = "FbXJ`I2+'9,v";
        borderArrangement0.add((Block) null, "FbXJ`I2+'9,v");
    }

    @Test(timeout = 4000)
    public void test3638() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        Graphics2D graphics2D0 = null;
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        defaultTableXYDataset0.getDomainBounds(false);
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, 2936.85);
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test3739() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, (RectangleConstraint) null);
    }

    @Test(timeout = 4000)
    public void test3840() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        categoryTableXYDataset0.getDomainBounds(false);
        Graphics2D graphics2D0 = null;
        borderArrangement0.arrangeRR(blockContainer0, (Range) null, (Range) null, (Graphics2D) null);
    }

    @Test(timeout = 4000)
    public void test3941() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
        Range range0 = dynamicTimeSeriesCollection0.getRangeBounds(false);
        Range range1 = Range.combine(range0, range0);
        Range.shift(range1, (double) 0);
        borderArrangement0.arrangeRR(blockContainer0, range1, range0, (Graphics2D) null);
        boolean boolean0 = borderArrangement0.equals(range0);
    }

    @Test(timeout = 4000)
    public void test4042() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        borderArrangement0.add((Block) null, (Object) null);
        BlockContainer blockContainer0 = null;
        TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
        timePeriodValuesCollection0.getDomainBounds(false);
        int int0 = 0;
        int int1 = 0;
        int int2 = 0;
        byte[] byteArray0 = new byte[0];
        IndexColorModel indexColorModel0 = null;
        indexColorModel0 = new IndexColorModel(0, 0, byteArray0, byteArray0, byteArray0, 552);
    }

    @Test(timeout = 4000)
    public void test4143() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        EmptyBlock emptyBlock0 = new EmptyBlock(0.0, 0.0);
        borderArrangement0.add(emptyBlock0, "Z=h;WujZ]t;@sI");
    }

    @Test(timeout = 4000)
    public void test4244() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BorderArrangement borderArrangement1 = new BorderArrangement();
        boolean boolean0 = borderArrangement0.equals(borderArrangement1);
    }

    @Test(timeout = 4000)
    public void test4245() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BorderArrangement borderArrangement1 = new BorderArrangement();
        boolean boolean0 = borderArrangement0.equals(borderArrangement1);
        BlockContainer blockContainer0 = new BlockContainer();
        AffineTransform affineTransform0 = AffineTransform.getTranslateInstance((-2100.724604096333), (-2100.724604096333));
        HashMap<RenderingHints.Key, ChronoLocalDate> hashMap0 = new HashMap<RenderingHints.Key, ChronoLocalDate>();
        RenderingHints renderingHints0 = new RenderingHints(hashMap0);
        AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
        byte[] byteArray0 = new byte[1];
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        borderArrangement1.clear();
        borderArrangement1.equals((Object) borderArrangement0);
    }

    @Test(timeout = 4000)
    public void test4246() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BorderArrangement borderArrangement1 = new BorderArrangement();
        boolean boolean0 = borderArrangement0.equals(borderArrangement1);
        BlockContainer blockContainer0 = new BlockContainer();
        AffineTransform affineTransform0 = AffineTransform.getTranslateInstance((-2100.724604096333), (-2100.724604096333));
        HashMap<RenderingHints.Key, ChronoLocalDate> hashMap0 = new HashMap<RenderingHints.Key, ChronoLocalDate>();
        RenderingHints renderingHints0 = new RenderingHints(hashMap0);
        AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
        byte[] byteArray0 = new byte[1];
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        borderArrangement1.clear();
        borderArrangement1.add(blockContainer0, (Object) null);
        boolean boolean1 = borderArrangement1.equals(borderArrangement0);
    }

    @Test(timeout = 4000)
    public void test4347() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        borderArrangement0.clear();
    }

    @Test(timeout = 4000)
    public void test4448() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        borderArrangement0.equals(rectangleEdge0);
        borderArrangement0.clear();
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.clear();
        BlockContainer blockContainer0 = null;
        int[] intArray0 = new int[7];
        int int0 = 0;
        borderArrangement0.add((Block) null, rectangleEdge0);
        byte[] byteArray0 = new byte[0];
        ByteLookupTable byteLookupTable0 = null;
        byteLookupTable0 = new ByteLookupTable((-1267), byteArray0);
    }

    @Test(timeout = 4000)
    public void test4549() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        Graphics2D graphics2D0 = null;
        Range range0 = new Range(0.0, 0.0);
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
        FileSystemHandling.shouldAllThrowIOExceptions();
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range0);
        SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent("");
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.arrangeNN(blockContainer0, (Graphics2D) null);
        borderArrangement0.equals(seriesChangeEvent0);
        borderArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        borderArrangement0.equals((Object) null);
        EmptyBlock emptyBlock0 = new EmptyBlock(2.0, 2.0);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        borderArrangement0.add(emptyBlock0, emptyBlock0);
    }

    @Test(timeout = 4000)
    public void test4650() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
        borderArrangement0.equals(rectangleEdge0);
        Clock clock0 = MockClock.systemDefaultZone();
        MockLocalDate.now(clock0);
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.clear();
        borderArrangement0.add((Block) null, rectangleEdge0);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 26;
        byteArray0[1] = (byte) 1;
        byteArray0[3] = (byte) 0;
        byteArray0[4] = (byte) (-128);
        byteArray0[5] = (byte) 1;
        byteArray0[6] = (byte) 1;
        byteArray0[7] = (byte) (-13);
        IndexColorModel indexColorModel0 = null;
        indexColorModel0 = new IndexColorModel((-1557), 1, byteArray0, (byte) 0, false);
    }

    @Test(timeout = 4000)
    public void test4751() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 0;
        byteArray0[1] = (byte) 118;
        byteArray0[2] = (byte) (-12);
        byteArray0[3] = (byte) 59;
        byteArray0[4] = (byte) 0;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        blockContainer0.clear();
        RectangleConstraint rectangleConstraint0 = RectangleConstraint.NONE;
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
        BlockContainer blockContainer1 = new BlockContainer();
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.arrangeNN(blockContainer1, (Graphics2D) null);
        borderArrangement0.arrangeFN(blockContainer1, (Graphics2D) null, (byte) 59);
        System.setCurrentTimeMillis((byte) 59);
        CenterArrangement centerArrangement0 = new CenterArrangement();
        borderArrangement0.add(blockContainer1, (Object) null);
        borderArrangement0.arrange(blockContainer1, (Graphics2D) null, rectangleConstraint0);
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
        Range.shift(range0, (double) (byte) (-12));
        borderArrangement0.arrangeRR(blockContainer1, range0, range0, (Graphics2D) null);
        borderArrangement0.arrangeFR(blockContainer1, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test4852() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        Range range0 = new Range(1.5, 1.5);
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, 1.5);
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test4953() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        Graphics2D graphics2D0 = null;
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
        IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(defaultTableXYDataset0);
        intervalXYDelegate0.getDomainBounds(false);
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(817.131161005, (Range) null);
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test5054() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-186.01), 1428.270794, 1.0, (-186.01));
        blockContainer0.trimBorder(rectangle2D_Double0);
        FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
        Graphics2D graphics2D0 = null;
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
        IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(defaultTableXYDataset0);
        intervalXYDelegate0.getDomainBounds(false);
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, (Range) null);
        borderArrangement0.arrange(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test5155() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        Graphics2D graphics2D0 = null;
        Range range0 = new Range(0.13834176695915446, 0.13834176695915446);
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.NONE;
        FileSystemHandling.shouldAllThrowIOExceptions();
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.13834176695915446, range0, lengthConstraintType0, 0.0, range0, lengthConstraintType0);
        SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent("Nd4");
        borderArrangement0.arrangeFR(blockContainer0, (Graphics2D) null, rectangleConstraint0);
    }

    @Test(timeout = 4000)
    public void test5256() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
        Graphics2D graphics2D0 = null;
        TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
        Range range0 = new Range(13.100398612273521, 13.100398612273521);
        LengthConstraintType lengthConstraintType0 = LengthConstraintType.RANGE;
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(13.100398612273521, range0, lengthConstraintType0, 0.0, range0, lengthConstraintType0);
        blockContainer0.arrange((Graphics2D) null, rectangleConstraint0);
        blockContainer0.arrange((Graphics2D) null, (RectangleConstraint) null);
    }

    @Test(timeout = 4000)
    public void test5357() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
        borderArrangement0.equals(rectangleEdge0);
        borderArrangement0.clear();
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.clear();
        BlockContainer blockContainer0 = null;
        int int0 = (-1545);
        int int1 = 242;
        int[] intArray0 = new int[7];
        borderArrangement0.add((Block) null, rectangleEdge0);
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) 0;
        IndexColorModel indexColorModel0 = null;
        indexColorModel0 = new IndexColorModel(242, (-1545), byteArray0, (-610), true);
    }

    @Test(timeout = 4000)
    public void test5458() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
        borderArrangement0.equals(rectangleEdge0);
        borderArrangement0.clear();
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.clear();
        int[] intArray0 = new int[7];
        borderArrangement0.add((Block) null, rectangleEdge0);
        rectangleEdge0.toString();
    }

    @Test(timeout = 4000)
    public void test5559() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
        borderArrangement0.equals(rectangleEdge0);
        borderArrangement0.clear();
        FileSystemHandling.shouldAllThrowIOExceptions();
        borderArrangement0.clear();
        int[] intArray0 = new int[7];
        borderArrangement0.clear();
        borderArrangement0.add((Block) null, rectangleEdge0);
        rectangleEdge0.toString();
    }

    @Test(timeout = 4000)
    public void test5660() throws Throwable {
        BorderArrangement borderArrangement0 = new BorderArrangement();
        borderArrangement0.equals(borderArrangement0);
        AffineTransform.getTranslateInstance((-2100.724604096333), (-2100.724604096333));
        byte[] byteArray0 = new byte[0];
        borderArrangement0.clear();
    }

    @Test(timeout = 4000)
    public void test5761() throws Throwable {
        BlockContainer blockContainer0 = new BlockContainer();
        RectangleConstraint rectangleConstraint0 = new RectangleConstraint(7, 7);
        FlowArrangement flowArrangement0 = new FlowArrangement();
        BlockContainer blockContainer1 = new BlockContainer(flowArrangement0);
        blockContainer1.getHeight();
    }

    @Test(timeout = 4000)
    public void test5862() throws Throwable {
        int[] intArray0 = new int[0];
    }
}
