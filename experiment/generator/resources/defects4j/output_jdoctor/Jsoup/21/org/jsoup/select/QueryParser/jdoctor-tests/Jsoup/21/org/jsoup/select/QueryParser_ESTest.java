/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 05:30:52 GMT 2023
 */
package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.select.Evaluator;
import org.jsoup.select.QueryParser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class QueryParser_ESTest extends QueryParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        QueryParser.parse(":eq(%d)");
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        QueryParser.parse("9*u>aGAo{70[:");
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        QueryParser.parse(":lt(");
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        QueryParser.parse("#");
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        QueryParser.parse(":gt(");
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        QueryParser.parse(":has(");
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        QueryParser.parse("org.jsoup.select.StructuralEvaluator$Not");
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse(":not(selector) subselect must not be empty");
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse("+[psu|+~dJ;");
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse("yNHZ,8[aOV04");
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        QueryParser.parse("b>xg~a`55}yQ6wa");
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        QueryParser.parse(",z r");
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse("ed~8m");
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        QueryParser.parse(",{s*=%s(]");
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse(":contains(text) query must not be empty");
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse(":containsOwn(%s");
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse(":matches(regex) query must not be empty");
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse(":matchesOwn(%s");
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        QueryParser.parse("2oQ|_p-qRK(KgW");
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse("[%s$=%s]");
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse("[^%s]");
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse("[%(=%]");
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse("[%s!=%s]");
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse("[%s^=%s]");
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse("[%s~=%s]");
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Evaluator evaluator0 = QueryParser.parse("[%s*=%s]");
    }
}
