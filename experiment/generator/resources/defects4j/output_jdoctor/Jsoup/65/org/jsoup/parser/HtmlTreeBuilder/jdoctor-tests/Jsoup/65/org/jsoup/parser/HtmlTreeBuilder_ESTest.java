/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 22:34:23 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.HtmlTreeBuilderState;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("");
        Document document1 = new Document("");
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, document1);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", (ParseErrorList) null, parseSettings0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", (ParseErrorList) null, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope((String) null);
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        htmlTreeBuilder0.replaceOnStack(document0, (Element) null);
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.push(document0);
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.push(document0);
        htmlTreeBuilder0.popStackToClose("tbody");
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("ql");
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parse(stringReader0, "ql", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test0067() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        StringReader stringReader0 = new StringReader("select");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 77);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.Comment token_Comment0 = tokeniser0.commentPending;
        htmlTreeBuilder0.insert(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test0078() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parse(stringReader0, "", (ParseErrorList) null, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.Character token_Character0 = tokeniser0.charPending;
        htmlTreeBuilder0.insert(token_Character0);
        token_Character0.toString();
    }

    @Test(timeout = 4000)
    public void test0089() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insert(document0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test00910() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.initialiseParse(stringReader0, "", (ParseErrorList) null, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test01011() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InFrameset;
        htmlTreeBuilder0.transition(htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test01112() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("+c");
        htmlTreeBuilder0.setHeadElement(document0);
        document0.updateMetaCharsetElement();
    }

    @Test(timeout = 4000)
    public void test01213() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.framesetOk(false);
    }

    @Test(timeout = 4000)
    public void test01314() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertMarkerToFormattingElements();
    }

    @Test(timeout = 4000)
    public void test01415() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("tr", (Attributes) null);
        htmlTreeBuilder0.insertForm(token_StartTag1, true);
    }

    @Test(timeout = 4000)
    public void test01516() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.clearStackToTableContext();
    }

    @Test(timeout = 4000)
    public void test01617() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        String string0 = htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test01718() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.state();
    }

    @Test(timeout = 4000)
    public void test01819() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        Element element0 = document0.head();
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", element0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
        element1.hasParent();
    }

    @Test(timeout = 4000)
    public void test01920() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Doctype token_Doctype0 = new Token.Doctype();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.Text;
        boolean boolean0 = htmlTreeBuilder0.process(token_Doctype0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test02021() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parse(stringReader0, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.pop();
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test02122() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.onStack(document0);
    }

    @Test(timeout = 4000)
    public void test02223() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.lastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test02324() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        Element element0 = document0.head();
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        htmlTreeBuilder0.parseFragment("]K:", element0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.lastFormattingElement();
        element1.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test02425() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        Element element0 = document0.head();
        boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    }

    @Test(timeout = 4000)
    public void test02526() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements(document0);
    }

    @Test(timeout = 4000)
    public void test02627() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    }

    @Test(timeout = 4000)
    public void test02728() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
    }

    @Test(timeout = 4000)
    public void test02829() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.insertStartTag("table");
        element0.isBlock();
    }

    @Test(timeout = 4000)
    public void test02930() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test02931() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.insertStartTag("C$a8fq^6@I@$8T");
        element0.baseUri();
    }

    @Test(timeout = 4000)
    public void test03032() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parse(stringReader0, "", (ParseErrorList) null, parseSettings0);
        CharacterReader characterReader0 = new CharacterReader(stringReader0);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Comment comment0 = new Comment("header");
        Attributes attributes0 = comment0.attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("blockquote", attributes0);
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test03133() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test03134() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inTableScope(">v'[");
    }

    @Test(timeout = 4000)
    public void test03235() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[6];
        stringArray0[0] = "footer";
        stringArray0[1] = "footer";
        stringArray0[2] = "V2gmW D^TZM";
        stringArray0[3] = "footer";
        Document document0 = new Document("footer");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("V2gmW D^TZM", document0, "footer", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test03236() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[6];
        stringArray0[0] = "footer";
        stringArray0[1] = "footer";
        stringArray0[2] = "V2gmW D^TZM";
        stringArray0[3] = "footer";
        Document document0 = new Document("footer");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("V2gmW D^TZM", document0, "footer", parseErrorList0, parseSettings0);
        stringArray0[4] = "footer";
        stringArray0[5] = "footer";
        boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
    }

    @Test(timeout = 4000)
    public void test03337() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[0];
        boolean boolean0 = htmlTreeBuilder0.inScope("xmp", stringArray0);
    }

    @Test(timeout = 4000)
    public void test03438() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", parseErrorList0, parseSettings0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test03439() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inListItemScope("");
    }

    @Test(timeout = 4000)
    public void test03540() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
        arrayList0.size();
    }

    @Test(timeout = 4000)
    public void test03641() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
        arrayList0.size();
    }

    @Test(timeout = 4000)
    public void test03742() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", (Element) null, "]K:", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test03743() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", (Element) null, "]K:", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test03844() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        htmlTreeBuilder0.stack = arrayList0;
        Element element0 = htmlTreeBuilder0.getFromStack((String) null);
    }

    @Test(timeout = 4000)
    public void test03945() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.insertInFosterParent(document0);
        document0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test03946() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.insertInFosterParent(document0);
        Document document1 = htmlTreeBuilder0.getDocument();
        document1.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test04047() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        Document document1 = htmlTreeBuilder0.getDocument();
        document1.isBlock();
    }

    @Test(timeout = 4000)
    public void test04148() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        String string0 = htmlTreeBuilder0.getBaseUri();
    }

    @Test(timeout = 4000)
    public void test04250() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.framesetOk();
    }

    @Test(timeout = 4000)
    public void test04351() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.framesetOk();
    }

    @Test(timeout = 4000)
    public void test04452() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.insertInFosterParent(document0);
        // Undeclared exception!
        htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test04553() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test04654() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.replaceOnStack(document0, document0);
    }

    @Test(timeout = 4000)
    public void test04755() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.removeLastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test04856() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("H4hL':`S82tM&=3&'v[");
        htmlTreeBuilder0.removeFromStack(document0);
    }

    @Test(timeout = 4000)
    public void test04957() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test05058() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test05159() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("Tag cannot be self closing; not a void tag");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
    }

    @Test(timeout = 4000)
    public void test05260() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.process((Token) null);
    }

    @Test(timeout = 4000)
    public void test05361() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[9];
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test05462() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToClose("footer");
    }

    @Test(timeout = 4000)
    public void test05563() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToBefore("");
    }

    @Test(timeout = 4000)
    public void test05664() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test05765() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Tag tag0 = Tag.valueOf("tr", parseSettings0);
        Element element0 = new Element(tag0, "article");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment((String) null, element0, "tr", parseErrorList0, (ParseSettings) null);
    }

    @Test(timeout = 4000)
    public void test05866() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("100w)gNcg");
        htmlTreeBuilder0.onStack(document0);
    }

    @Test(timeout = 4000)
    public void test05967() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
    }

    @Test(timeout = 4000)
    public void test06068() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.lastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test06169() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.isSpecial((Element) null);
    }

    @Test(timeout = 4000)
    public void test06270() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertStartTag("<i");
    }

    @Test(timeout = 4000)
    public void test06371() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertStartTag("h1");
    }

    @Test(timeout = 4000)
    public void test06472() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertOnStackAfter((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test06573() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertInFosterParent((Node) null);
    }

    @Test(timeout = 4000)
    public void test06674() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("noscript");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("noscript", document0, "tbody", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.insertInFosterParent(document0);
    }

    @Test(timeout = 4000)
    public void test06775() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertInFosterParent((Node) null);
    }

    @Test(timeout = 4000)
    public void test06876() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertForm((Token.StartTag) null, false);
    }

    @Test(timeout = 4000)
    public void test06977() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertEmpty((Token.StartTag) null);
    }

    @Test(timeout = 4000)
    public void test07078() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        CharacterReader characterReader0 = new CharacterReader("Awh(7qc67Zq@");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(2750);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test07179() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        token_StartTag0.tagName = "{Y&26/x";
        htmlTreeBuilder0.insert(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test07280() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        htmlTreeBuilder0.insert(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test07381() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Character token_Character0 = new Token.Character();
        htmlTreeBuilder0.insert(token_Character0);
    }

    @Test(timeout = 4000)
    public void test07482() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        htmlTreeBuilder0.insert(document0);
    }

    @Test(timeout = 4000)
    public void test07583() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        PipedReader pipedReader0 = new PipedReader();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.initialiseParse(pipedReader0, "section", parseErrorList0, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test07684() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.inTableScope("Z?");
    }

    @Test(timeout = 4000)
    public void test07785() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inSelectScope("");
    }

    @Test(timeout = 4000)
    public void test07886() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[6];
        Document document0 = new Document("footer");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("V2gmW D^TZM", document0, "footer", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pop();
        htmlTreeBuilder0.inScope(stringArray0);
    }

    @Test(timeout = 4000)
    public void test07987() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.inScope("", stringArray0);
    }

    @Test(timeout = 4000)
    public void test08088() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pop();
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.inScope("xmp", stringArray0);
    }

    @Test(timeout = 4000)
    public void test08189() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.inScope("M6|#w2gV'#&");
    }

    @Test(timeout = 4000)
    public void test08290() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.inListItemScope("tbody");
    }

    @Test(timeout = 4000)
    public void test08391() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getFromStack("y)]<");
    }

    @Test(timeout = 4000)
    public void test08492() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getActiveFormattingElement("");
    }

    @Test(timeout = 4000)
    public void test08593() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterFrameset;
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test08694() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test08795() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parse(stringReader0, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test08896() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.getActiveFormattingElement("<]X");
    }

    @Test(timeout = 4000)
    public void test08997() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("colrgroup");
        Element element0 = document0.createElement("colrgroup");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("colrgroup", document0, "tbody", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
        document0.hasParent();
    }

    @Test(timeout = 4000)
    public void test09098() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("colrgroup");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("colrgroup", document0, "tbody", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
        document0.isBlock();
    }

    @Test(timeout = 4000)
    public void test09199() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("colrgroup");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("colrgroup", document0, "tbody", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
        document0.hasParent();
    }

    @Test(timeout = 4000)
    public void test092100() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("colrgroup");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("colrgroup", document0, "tbody", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test093101() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
        element0.isBlock();
    }

    @Test(timeout = 4000)
    public void test094102() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test095103() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        Document document1 = (Document) htmlTreeBuilder0.lastFormattingElement();
        document1.quirksMode();
    }

    @Test(timeout = 4000)
    public void test096104() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("o");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parse(stringReader0, "o", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.generateImpliedEndTags("o");
    }

    @Test(timeout = 4000)
    public void test097105() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags("o");
    }

    @Test(timeout = 4000)
    public void test098106() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test098107() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("AfterAfterBody");
    }

    @Test(timeout = 4000)
    public void test099108() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.inSelectScope("xmp");
    }

    @Test(timeout = 4000)
    public void test100109() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.push(document0);
        boolean boolean0 = htmlTreeBuilder0.inScope("M6|#w2gV'#&");
    }

    @Test(timeout = 4000)
    public void test101110() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.insertOnStackAfter(element0, document0);
        boolean boolean0 = htmlTreeBuilder0.inButtonScope(">v'[");
    }

    @Test(timeout = 4000)
    public void test102111() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.removeFromStack(element0);
        htmlTreeBuilder0.inButtonScope("]K:");
    }

    @Test(timeout = 4000)
    public void test103112() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        Element element0 = document0.body();
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("]K:", element0, "]K:", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test103113() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        Element element0 = document0.body();
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("]K:", element0, "]K:", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test103114() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        Element element0 = document0.body();
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("]K:", element0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
        element1.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test103115() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        Element element0 = document0.body();
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("]K:", element0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test104116() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.push(document0);
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test105117() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, document0);
    }

    @Test(timeout = 4000)
    public void test106118() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertOnStackAfter(document0, document0);
    }

    @Test(timeout = 4000)
    public void test107119() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        Element element0 = document0.head();
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", element0, "]K:", parseErrorList0, parseSettings0);
        Element element1 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.insertOnStackAfter(element1, document0);
        htmlTreeBuilder0.push(element0);
        Element element2 = htmlTreeBuilder0.aboveOnStack(document0);
        element2.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test108120() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test109121() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("Z?");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("Z?", document0, "tbody", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.clearStackToTableBodyContext();
    }

    @Test(timeout = 4000)
    public void test110122() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parse(stringReader0, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.popStackToBefore("");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test111124() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.insertOnStackAfter(element0, document0);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test111125() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.insertOnStackAfter(element0, document0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    }

    @Test(timeout = 4000)
    public void test112127() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test113128() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertInFosterParent(document0);
        // Undeclared exception!
        htmlTreeBuilder0.parseFragment("", document0, "", parseErrorList0, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test114129() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.aboveOnStack(document0);
    }

    @Test(timeout = 4000)
    public void test115130() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        Token.Comment token_Comment0 = new Token.Comment();
        boolean boolean0 = htmlTreeBuilder0.process(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test116131() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test116132() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test116133() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.processStartTag("hr");
    }

    @Test(timeout = 4000)
    public void test117134() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        htmlTreeBuilder0.parseFragment("]K:", document0, "]K:", parseErrorList0, parseSettings0);
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.Initial;
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test118135() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Tag tag0 = Tag.valueOf("tr", parseSettings0);
        Element element0 = new Element(tag0, "article");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("StartTag", element0, "tr", parseErrorList0, (ParseSettings) null);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test119136() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        htmlTreeBuilder0.maybeSetBaseUri(document0);
        document0.isBlock();
    }

    @Test(timeout = 4000)
    public void test120137() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        htmlTreeBuilder0.parseFragment(">v'[", (Element) null, "]K:", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test121138() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableContext();
    }

    @Test(timeout = 4000)
    public void test122139() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.originalState();
    }

    @Test(timeout = 4000)
    public void test123140() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inTableScope("Z?");
    }

    @Test(timeout = 4000)
    public void test124141() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((Token.Comment) null);
    }

    @Test(timeout = 4000)
    public void test125142() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        boolean boolean0 = htmlTreeBuilder0.isSpecial(document0);
    }

    @Test(timeout = 4000)
    public void test126143() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        htmlTreeBuilder0.push(document0);
    }

    @Test(timeout = 4000)
    public void test127144() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setFosterInserts(true);
        boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
    }

    @Test(timeout = 4000)
    public void test128145() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    }

    @Test(timeout = 4000)
    public void test129146() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Tag tag0 = Tag.valueOf("Q!+I||N", parseSettings0);
        Comment comment0 = new Comment("Q!+I||N");
        Attributes attributes0 = comment0.attributes();
        Element element0 = new Element(tag0, "zwiTG<~|D", attributes0);
        htmlTreeBuilder0.isInActiveFormattingElements(element0);
    }

    @Test(timeout = 4000)
    public void test130147() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("]K:");
        htmlTreeBuilder0.aboveOnStack(document0);
    }

    @Test(timeout = 4000)
    public void test131148() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
    }

    @Test(timeout = 4000)
    public void test132149() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String string0 = htmlTreeBuilder0.getBaseUri();
    }

    @Test(timeout = 4000)
    public void test133150() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inScope("tbody");
    }

    @Test(timeout = 4000)
    public void test134151() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.getDocument();
    }

    @Test(timeout = 4000)
    public void test135152() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setPendingTableCharacters((List<String>) null);
    }

    @Test(timeout = 4000)
    public void test136153() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[6];
        htmlTreeBuilder0.inScope(stringArray0);
    }

    @Test(timeout = 4000)
    public void test137154() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.state();
    }

    @Test(timeout = 4000)
    public void test138155() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inButtonScope("wmzo");
    }

    @Test(timeout = 4000)
    public void test139156() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test140157() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        FormElement formElement0 = htmlTreeBuilder0.getFormElement();
    }

    @Test(timeout = 4000)
    public void test141158() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.newPendingTableCharacters();
        List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test142159() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertMarkerToFormattingElements();
    }

    @Test(timeout = 4000)
    public void test143160() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags();
    }

    @Test(timeout = 4000)
    public void test144161() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.markInsertionMode();
    }

    @Test(timeout = 4000)
    public void test145162() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("o");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parse(stringReader0, "o", (ParseErrorList) null, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.EndTag token_EndTag0 = tokeniser0.endPending;
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.BeforeHead;
        htmlTreeBuilder0.process(token_EndTag0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test146163() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test147164() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableBodyContext();
    }

    @Test(timeout = 4000)
    public void test148165() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
    }

    @Test(timeout = 4000)
    public void test149166() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setFormElement((FormElement) null);
    }

    @Test(timeout = 4000)
    public void test150167() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
    }

    @Test(timeout = 4000)
    public void test151168() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inListItemScope("");
    }
}
