[
  {
    "signature": "org.jsoup.parser.HtmlTreeBuilder()",
    "name": "org.jsoup.parser.HtmlTreeBuilder",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "defaultSettings()",
    "name": "defaultSettings",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.parser.ParseSettings",
      "name": "org.jsoup.parser.ParseSettings",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "initialiseParse(java.io.Reader input, java.lang.String baseUri, org.jsoup.parser.ParseErrorList errors, org.jsoup.parser.ParseSettings settings)",
    "name": "initialiseParse",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Reader",
          "name": "Reader",
          "isArray": false
        },
        "name": "input"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.ParseErrorList",
          "name": "ParseErrorList",
          "isArray": false
        },
        "name": "errors"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.ParseSettings",
          "name": "ParseSettings",
          "isArray": false
        },
        "name": "settings"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseFragment(java.lang.String inputFragment, org.jsoup.nodes.Element context, java.lang.String baseUri, org.jsoup.parser.ParseErrorList errors, org.jsoup.parser.ParseSettings settings)",
    "name": "parseFragment",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<org.jsoup.nodes.Node>",
      "name": "java.util.List<org.jsoup.nodes.Node>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "inputFragment"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "context"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.ParseErrorList",
          "name": "ParseErrorList",
          "isArray": false
        },
        "name": "errors"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.ParseSettings",
          "name": "ParseSettings",
          "isArray": false
        },
        "name": "settings"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "process(org.jsoup.parser.Token token)",
    "name": "process",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Token",
          "name": "Token",
          "isArray": false
        },
        "name": "token"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "process(org.jsoup.parser.Token token, org.jsoup.parser.HtmlTreeBuilderState state)",
    "name": "process",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Token",
          "name": "Token",
          "isArray": false
        },
        "name": "token"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.HtmlTreeBuilderState",
          "name": "HtmlTreeBuilderState",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "transition(org.jsoup.parser.HtmlTreeBuilderState state)",
    "name": "transition",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.HtmlTreeBuilderState",
          "name": "HtmlTreeBuilderState",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "state()",
    "name": "state",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilderState",
      "name": "org.jsoup.parser.HtmlTreeBuilderState",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "markInsertionMode()",
    "name": "markInsertionMode",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "originalState()",
    "name": "originalState",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilderState",
      "name": "org.jsoup.parser.HtmlTreeBuilderState",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "framesetOk(boolean framesetOk)",
    "name": "framesetOk",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "framesetOk"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "framesetOk()",
    "name": "framesetOk",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDocument()",
    "name": "getDocument",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBaseUri()",
    "name": "getBaseUri",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "maybeSetBaseUri(org.jsoup.nodes.Element base)",
    "name": "maybeSetBaseUri",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "base"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isFragmentParsing()",
    "name": "isFragmentParsing",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "error(org.jsoup.parser.HtmlTreeBuilderState state)",
    "name": "error",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.HtmlTreeBuilderState",
          "name": "HtmlTreeBuilderState",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "insert(org.jsoup.parser.Token$StartTag startTag)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Token$StartTag",
          "name": "StartTag",
          "isArray": false
        },
        "name": "startTag"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "insertStartTag(java.lang.String startTagName)",
    "name": "insertStartTag",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "startTagName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "insert(org.jsoup.nodes.Element el)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "el"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "insertEmpty(org.jsoup.parser.Token$StartTag startTag)",
    "name": "insertEmpty",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Token$StartTag",
          "name": "StartTag",
          "isArray": false
        },
        "name": "startTag"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "insertForm(org.jsoup.parser.Token$StartTag startTag, boolean onStack)",
    "name": "insertForm",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.FormElement",
      "name": "org.jsoup.nodes.FormElement",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Token$StartTag",
          "name": "StartTag",
          "isArray": false
        },
        "name": "startTag"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "onStack"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "insert(org.jsoup.parser.Token$Comment commentToken)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Token$Comment",
          "name": "Comment",
          "isArray": false
        },
        "name": "commentToken"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "insert(org.jsoup.parser.Token$Character characterToken)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Token$Character",
          "name": "Character",
          "isArray": false
        },
        "name": "characterToken"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "pop()",
    "name": "pop",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "push(org.jsoup.nodes.Element element)",
    "name": "push",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "element"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getStack()",
    "name": "getStack",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ArrayList<org.jsoup.nodes.Element>",
      "name": "java.util.ArrayList<org.jsoup.nodes.Element>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "onStack(org.jsoup.nodes.Element el)",
    "name": "onStack",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "el"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFromStack(java.lang.String elName)",
    "name": "getFromStack",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "elName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeFromStack(org.jsoup.nodes.Element el)",
    "name": "removeFromStack",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "el"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "popStackToClose(java.lang.String elName)",
    "name": "popStackToClose",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "elName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "popStackToClose(java.lang.String... elNames)",
    "name": "popStackToClose",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "elNames"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "popStackToBefore(java.lang.String elName)",
    "name": "popStackToBefore",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "elName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clearStackToTableContext()",
    "name": "clearStackToTableContext",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clearStackToTableBodyContext()",
    "name": "clearStackToTableBodyContext",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clearStackToTableRowContext()",
    "name": "clearStackToTableRowContext",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "aboveOnStack(org.jsoup.nodes.Element el)",
    "name": "aboveOnStack",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "el"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "insertOnStackAfter(org.jsoup.nodes.Element after, org.jsoup.nodes.Element in)",
    "name": "insertOnStackAfter",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "after"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "replaceOnStack(org.jsoup.nodes.Element out, org.jsoup.nodes.Element in)",
    "name": "replaceOnStack",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "resetInsertionMode()",
    "name": "resetInsertionMode",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inScope(java.lang.String[] targetNames)",
    "name": "inScope",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "targetNames"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inScope(java.lang.String targetName)",
    "name": "inScope",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "targetName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inScope(java.lang.String targetName, java.lang.String[] extras)",
    "name": "inScope",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "targetName"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "extras"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inListItemScope(java.lang.String targetName)",
    "name": "inListItemScope",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "targetName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inButtonScope(java.lang.String targetName)",
    "name": "inButtonScope",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "targetName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inTableScope(java.lang.String targetName)",
    "name": "inTableScope",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "targetName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inSelectScope(java.lang.String targetName)",
    "name": "inSelectScope",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "targetName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setHeadElement(org.jsoup.nodes.Element headElement)",
    "name": "setHeadElement",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "headElement"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getHeadElement()",
    "name": "getHeadElement",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isFosterInserts()",
    "name": "isFosterInserts",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setFosterInserts(boolean fosterInserts)",
    "name": "setFosterInserts",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "fosterInserts"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFormElement()",
    "name": "getFormElement",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.FormElement",
      "name": "org.jsoup.nodes.FormElement",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setFormElement(org.jsoup.nodes.FormElement formElement)",
    "name": "setFormElement",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.FormElement",
          "name": "FormElement",
          "isArray": false
        },
        "name": "formElement"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newPendingTableCharacters()",
    "name": "newPendingTableCharacters",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getPendingTableCharacters()",
    "name": "getPendingTableCharacters",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<java.lang.String>",
      "name": "java.util.List<java.lang.String>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setPendingTableCharacters(java.util.List<java.lang.String> pendingTableCharacters)",
    "name": "setPendingTableCharacters",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "pendingTableCharacters"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "generateImpliedEndTags(java.lang.String excludeTag)",
    "name": "generateImpliedEndTags",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "excludeTag"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "generateImpliedEndTags()",
    "name": "generateImpliedEndTags",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isSpecial(org.jsoup.nodes.Element el)",
    "name": "isSpecial",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "el"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "lastFormattingElement()",
    "name": "lastFormattingElement",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeLastFormattingElement()",
    "name": "removeLastFormattingElement",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "pushActiveFormattingElements(org.jsoup.nodes.Element in)",
    "name": "pushActiveFormattingElements",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "reconstructFormattingElements()",
    "name": "reconstructFormattingElements",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clearFormattingElementsToLastMarker()",
    "name": "clearFormattingElementsToLastMarker",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeFromActiveFormattingElements(org.jsoup.nodes.Element el)",
    "name": "removeFromActiveFormattingElements",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "el"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isInActiveFormattingElements(org.jsoup.nodes.Element el)",
    "name": "isInActiveFormattingElements",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "el"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getActiveFormattingElement(java.lang.String nodeName)",
    "name": "getActiveFormattingElement",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "replaceActiveFormattingElement(org.jsoup.nodes.Element out, org.jsoup.nodes.Element in)",
    "name": "replaceActiveFormattingElement",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "insertMarkerToFormattingElements()",
    "name": "insertMarkerToFormattingElements",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "insertInFosterParent(org.jsoup.nodes.Node in)",
    "name": "insertInFosterParent",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.HtmlTreeBuilder",
      "name": "HtmlTreeBuilder",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.HtmlTreeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]