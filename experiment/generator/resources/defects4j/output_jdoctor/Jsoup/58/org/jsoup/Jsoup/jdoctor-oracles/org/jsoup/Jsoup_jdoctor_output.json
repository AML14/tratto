[
  {
    "signature": "parse(java.lang.String html, java.lang.String baseUri)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parse(java.lang.String html, java.lang.String baseUri, org.jsoup.parser.Parser parser)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Parser",
          "name": "Parser",
          "isArray": false
        },
        "name": "parser"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parse(java.lang.String html)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "connect(java.lang.String url)",
    "name": "connect",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.Connection",
      "name": "org.jsoup.Connection",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "url"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "url"
        },
        "comment": "URL to connect to. The protocol . url is http or https.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the connection. You can add data, cookies, and headers; set the user-agent, referrer, method; and then execute.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "parse(java.io.File in, java.lang.String charsetName, java.lang.String baseUri)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "in"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "charsetName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parse(java.io.File in, java.lang.String charsetName)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "in"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "charsetName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parse(java.io.InputStream in, java.lang.String charsetName, java.lang.String baseUri)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "in"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "charsetName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parse(java.io.InputStream in, java.lang.String charsetName, java.lang.String baseUri, org.jsoup.parser.Parser parser)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "in"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "charsetName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Parser",
          "name": "Parser",
          "isArray": false
        },
        "name": "parser"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseBodyFragment(java.lang.String bodyHtml, java.lang.String baseUri)",
    "name": "parseBodyFragment",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "bodyHtml"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseBodyFragment(java.lang.String bodyHtml)",
    "name": "parseBodyFragment",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "bodyHtml"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parse(java.net.URL url, int timeoutMillis)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.net.URL",
          "name": "URL",
          "isArray": false
        },
        "name": "url"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "timeoutMillis"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clean(java.lang.String bodyHtml, java.lang.String baseUri, org.jsoup.safety.Whitelist whitelist)",
    "name": "clean",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "bodyHtml"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.safety.Whitelist",
          "name": "Whitelist",
          "isArray": false
        },
        "name": "whitelist"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clean(java.lang.String bodyHtml, org.jsoup.safety.Whitelist whitelist)",
    "name": "clean",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "bodyHtml"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.safety.Whitelist",
          "name": "Whitelist",
          "isArray": false
        },
        "name": "whitelist"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clean(java.lang.String bodyHtml, java.lang.String baseUri, org.jsoup.safety.Whitelist whitelist, org.jsoup.nodes.Document$OutputSettings outputSettings)",
    "name": "clean",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "bodyHtml"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.safety.Whitelist",
          "name": "Whitelist",
          "isArray": false
        },
        "name": "whitelist"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Document$OutputSettings",
          "name": "OutputSettings",
          "isArray": false
        },
        "name": "outputSettings"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "bodyHtml"
        },
        "comment": "input untrusted HTML (body fragment).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "baseUri"
        },
        "comment": "URL to resolve relative URLs against.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.safety.Whitelist",
            "name": "Whitelist",
            "isArray": false
          },
          "name": "whitelist"
        },
        "comment": "white-list of permitted HTML elements.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.nodes.Document$OutputSettings",
            "name": "OutputSettings",
            "isArray": false
          },
          "name": "outputSettings"
        },
        "comment": "document output settings use to control pretty-printing and entity escape modes.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "safe HTML (body fragment).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isValid(java.lang.String bodyHtml, org.jsoup.safety.Whitelist whitelist)",
    "name": "isValid",
    "containingClass": {
      "qualifiedName": "org.jsoup.Jsoup",
      "name": "Jsoup",
      "isArray": false
    },
    "targetClass": "org.jsoup.Jsoup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "bodyHtml"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.safety.Whitelist",
          "name": "Whitelist",
          "isArray": false
        },
        "name": "whitelist"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]