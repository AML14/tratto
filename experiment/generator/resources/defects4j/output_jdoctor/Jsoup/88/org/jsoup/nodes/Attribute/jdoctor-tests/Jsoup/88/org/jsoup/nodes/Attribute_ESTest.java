/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 23:38:54 GMT 2023
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Attribute attribute0 = new Attribute("39T(g;UY\"6=Q^Zb>0Q", "nowrap");
        attribute0.setKey("allowfullscreen");
        boolean boolean0 = attribute0.isBooleanAttribute();
        attribute0.getValue();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        Attribute attribute0 = new Attribute("39T(g;UY\"6=Q^Zb>0Q", "nowrap");
        attribute0.setKey("allowfullscreen");
        boolean boolean0 = attribute0.isBooleanAttribute();
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("disabled", "disabled");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("& nvO'");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        attribute0.html((Appendable) mockPrintWriter0, document_OutputSettings0);
        document_OutputSettings0.prettyPrint();
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("disabled", "disabled");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        boolean boolean0 = attribute0.shouldCollapseAttribute(document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        boolean boolean0 = Attribute.shouldCollapseAttribute((String) null, (String) null, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        boolean boolean0 = Attribute.isDataAttribute("data-readonly");
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        boolean boolean0 = Attribute.isBooleanAttribute("allowfullscreen");
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        boolean boolean0 = Attribute.isBooleanAttribute("mLGE1%D");
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("-o@]X", (String) null, attributes0);
        String string0 = attribute0.getValue();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("xhtml", "");
        String string0 = attribute0.getValue();
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("disBbleK", "disabled");
        attribute0.shouldCollapseAttribute((Document.OutputSettings) null);
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        Attribute.shouldCollapseAttribute("|w2kb2{.\"W90", "+8>TZ", (Document.OutputSettings) null);
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("L&1\"c", "5Oc?'\"YGR4\"<zYp");
        attribute0.setValue("L&1\"c");
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded(":N68\"K Hwz3~N )[|", ":N68\"K Hwz3~N )[|");
        Attribute attribute1 = Attribute.createFromEncoded("Kutofocus", "");
        Attributes attributes0 = new Attributes();
        attributes0.putIgnoreCase("nohref", (String) null);
        Attributes attributes1 = attributes0.put(attribute1);
        attributes1.put(attribute0);
        String[] stringArray0 = new String[2];
        attributes1.vals = stringArray0;
        attribute0.setValue("F|");
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("L?#", "MAx;9kK5=$j:6P1A[");
        attribute0.setKey("");
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded(":N68\"K Hwz3~N )[|", ":N68\"K Hwz3~N )[|");
        Attribute attribute1 = Attribute.createFromEncoded("Kutofocus", "");
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put(attribute1);
        attributes1.put(attribute0);
        String[] stringArray0 = new String[1];
        attributes1.keys = stringArray0;
        attribute0.setKey(".fj\"eyBU>5");
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        Attribute.isDataAttribute((String) null);
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        Attribute.isBooleanAttribute((String) null);
    }

    @Test(timeout = 4000)
    public void test1718() throws Throwable {
        CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "compact");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Attribute.html("compact", "compact", (Appendable) charBuffer0, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test1819() throws Throwable {
        char[] charArray0 = new char[8];
        CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Attribute.html("b", "_q2F4ux2Eh[3_e<n1(", (Appendable) charBuffer0, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Attribute.html("", "", (Appendable) null, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test2021() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("?sW,9,", "t_IH22J_RVbg<", attributes0);
        char[] charArray0 = new char[9];
        CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        attribute0.html((Appendable) charBuffer0, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test2122() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("No buffer left to unconsume", "&#xa0;", attributes0);
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        attribute0.html((Appendable) null, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test2223() throws Throwable {
        Attribute attribute0 = new Attribute("cZmp&ct", "cZmp&ct");
        PipedWriter pipedWriter0 = new PipedWriter();
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        attribute0.html((Appendable) pipedWriter0, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test2324() throws Throwable {
        Attribute.createFromEncoded("", (String) null);
    }

    @Test(timeout = 4000)
    public void test2425() throws Throwable {
        Attribute.createFromEncoded("", "data-readonly");
    }

    @Test(timeout = 4000)
    public void test2526() throws Throwable {
        Attribute attribute0 = null;
        attribute0 = new Attribute("", (String) null, (Attributes) null);
    }

    @Test(timeout = 4000)
    public void test2627() throws Throwable {
        Attribute attribute0 = null;
        attribute0 = new Attribute((String) null, (String) null);
    }

    @Test(timeout = 4000)
    public void test2728() throws Throwable {
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("QSNY&x$iO;UH~NO3k", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Attribute.html("readonly", "readonly", (Appendable) mockPrintStream0, document_OutputSettings0);
        document_OutputSettings0.prettyPrint();
    }

    @Test(timeout = 4000)
    public void test2829() throws Throwable {
        Attribute attribute0 = new Attribute("compact", "compact");
        CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "compact");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        attribute0.html((Appendable) charBuffer0, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test2930() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("orable", (String) null, attributes0);
        attribute0.hashCode();
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        Attribute attribute0 = new Attribute("compact", "compact");
        attribute0.hashCode();
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        Attribute attribute0 = new Attribute("b", (String) null);
        Attribute attribute1 = attribute0.clone();
        boolean boolean0 = attribute1.equals(attribute0);
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded(":N68\"K Hwz3~N )[|", ":N68\"K Hwz3~N )[|");
        Attribute attribute1 = Attribute.createFromEncoded("Kutofocus", "");
        boolean boolean0 = attribute1.equals(attribute0);
        attribute1.getValue();
    }

    @Test(timeout = 4000)
    public void test3234() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded(":N68\"K Hwz3~N )[|", ":N68\"K Hwz3~N )[|");
        Attribute attribute1 = Attribute.createFromEncoded("Kutofocus", "");
        boolean boolean0 = attribute1.equals(attribute0);
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        Attribute attribute0 = new Attribute("compact", "compact");
        Attribute attribute1 = attribute0.clone();
        boolean boolean0 = attribute1.equals(attribute0);
    }

    @Test(timeout = 4000)
    public void test3436() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("class", "class");
        boolean boolean0 = attribute0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test3537() throws Throwable {
        Attribute attribute0 = new Attribute("compact", "compact");
        boolean boolean0 = attribute0.equals(attribute0);
    }

    @Test(timeout = 4000)
    public void test3638() throws Throwable {
        Attribute attribute0 = new Attribute("compact", "compact");
        Object object0 = new Object();
        boolean boolean0 = attribute0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test3739() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("orable", (String) null, attributes0);
        boolean boolean0 = attribute0.isBooleanAttribute();
    }

    @Test(timeout = 4000)
    public void test3840() throws Throwable {
        Attribute attribute0 = new Attribute("T mqh5?y>?VmB\"7-", "T mqh5?y>?VmB\"7-");
        boolean boolean0 = attribute0.isBooleanAttribute();
    }

    @Test(timeout = 4000)
    public void test3941() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("compact", "redonl");
        boolean boolean0 = attribute0.isBooleanAttribute();
        attribute0.getValue();
    }

    @Test(timeout = 4000)
    public void test3942() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("compact", "redonl");
        boolean boolean0 = attribute0.isBooleanAttribute();
    }

    @Test(timeout = 4000)
    public void test4043() throws Throwable {
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        boolean boolean0 = Attribute.shouldCollapseAttribute(":N68\"K Hwz3~N )[|", "", document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test4144() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("orable", (String) null, attributes0);
        String string0 = attribute0.html();
    }

    @Test(timeout = 4000)
    public void test4245() throws Throwable {
        MockFile mockFile0 = new MockFile("x&v1}SNSCGt,5");
        MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, false);
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
        Attribute.html("T mqh5?y>?VmB\"7-", "T mqh5?y>?VmB\"7-", (Appendable) mockFileWriter0, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test4346() throws Throwable {
        boolean boolean0 = Attribute.isDataAttribute("data-");
    }

    @Test(timeout = 4000)
    public void test4447() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("data-data-readonly", "noshade");
        boolean boolean0 = attribute0.isDataAttribute();
        attribute0.getValue();
    }

    @Test(timeout = 4000)
    public void test4448() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("data-data-readonly", "noshade");
        boolean boolean0 = attribute0.isDataAttribute();
    }

    @Test(timeout = 4000)
    public void test4549() throws Throwable {
        Attribute attribute0 = new Attribute("compact", "compact");
        String string0 = attribute0.toString();
    }

    @Test(timeout = 4000)
    public void test4650() throws Throwable {
        Attribute attribute0 = new Attribute("as>c", "as>c");
        Attributes attributes0 = new Attributes();
        attributes0.put(attribute0);
        attribute0.setValue("b");
        attribute0.getValue();
    }

    @Test(timeout = 4000)
    public void test4751() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("#root", "#root", attributes0);
        String string0 = attribute0.setValue("#root");
        attribute0.getValue();
    }

    @Test(timeout = 4000)
    public void test4752() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("#root", "#root", attributes0);
        String string0 = attribute0.setValue("#root");
    }

    @Test(timeout = 4000)
    public void test4853() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("#root", "#root", attributes0);
        attribute0.setKey("declare");
        attribute0.getValue();
    }

    @Test(timeout = 4000)
    public void test4954() throws Throwable {
        Attribute attribute0 = new Attribute("as>c", "as>c");
        Attributes attributes0 = new Attributes();
        attributes0.put(attribute0);
        attribute0.setKey("eH-3TCPA>9z,F?$t.{x");
        attribute0.getKey();
    }

    @Test(timeout = 4000)
    public void test5055() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("disBbleK", "disabled");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        attribute0.shouldCollapseAttribute(document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test5156() throws Throwable {
        Attribute attribute0 = new Attribute("T mqh5?y>?VmB\"7-", "T mqh5?y>?VmB\"7-");
        String string0 = attribute0.getValue();
    }

    @Test(timeout = 4000)
    public void test5257() throws Throwable {
        Attribute attribute0 = new Attribute("compact", "compact");
        boolean boolean0 = attribute0.isDataAttribute();
    }

    @Test(timeout = 4000)
    public void test5358() throws Throwable {
        Attribute attribute0 = new Attribute("T mqh5?y>?VmB\"7-", "T mqh5?y>?VmB\"7-");
        String string0 = attribute0.getKey();
    }
}
