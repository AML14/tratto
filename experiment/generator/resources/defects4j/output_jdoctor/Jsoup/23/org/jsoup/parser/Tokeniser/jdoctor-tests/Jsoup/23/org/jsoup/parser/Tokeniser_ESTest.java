/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 05:37:34 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Tokeniser_ESTest extends Tokeniser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, (ParseErrorList) null);
        tokeniser0.createTempBuffer();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("P#fU2u2;RkV/OVC_N}{");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.appropriateEndTagName();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("NotLessTilde");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.emitDoctypePending();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, (ParseErrorList) null);
        tokeniser0.acknowledgeSelfClosingFlag();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, (ParseErrorList) null);
        tokeniser0.createCommentPending();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("varphi");
        ParseErrorList parseErrorList0 = new ParseErrorList(10765, 10765);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.isAppropriateEndTagToken();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("oO#k]W=uBw6Dy=~&");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        characterReader0.toString();
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("oO#k]W=uBw6Dy=~&");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, (ParseErrorList) null);
        tokeniser0.emitTagPending();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, (ParseErrorList) null);
        tokeniser0.emitCommentPending();
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("varphi");
        ParseErrorList parseErrorList0 = new ParseErrorList(10765, 10765);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        boolean boolean0 = tokeniser0.currentNodeInHtmlNS();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, (ParseErrorList) null);
        tokeniser0.createDoctypePending();
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("P#fU2u2;RkV/OVC_N}{");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.getState();
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(881);
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        Token.Tag token_Tag0 = tokeniser0.createTagPending(true);
        token_Tag0.selfClosing = true;
        tokeniser0.emit(token_Tag0);
        tokeniser0.read();
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
        Token token0 = tokeniser0.read();
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, (ParseErrorList) null);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        tokeniser0.emit(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        Token.EndTag token_EndTag0 = new Token.EndTag();
        tokeniser0.emit(token_EndTag0);
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        Token.EndTag token_EndTag0 = new Token.EndTag();
        token_EndTag0.appendAttributeName("[__KIY65");
        token_EndTag0.newAttribute();
        tokeniser0.emit(token_EndTag0);
    }

    @Test(timeout = 4000)
    public void test1718() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Xb>/:&CH'<B^oZI|y{");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Xb>/:&CH'<B^oZI|y{");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test1720() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Xb>/:&CH'<B^oZI|y{");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test1821() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        CharacterReader characterReader0 = new CharacterReader("ii;>,Xd1)2,tCu~");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Character character0 = Character.valueOf('7');
        tokeniser0.consumeCharacterReference(character0, true);
        characterReader0.toString();
    }

    @Test(timeout = 4000)
    public void test1922() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("There is an unread token pending!");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
        Character character0 = Character.valueOf('T');
        Character character1 = tokeniser0.consumeCharacterReference(character0, false);
    }

    @Test(timeout = 4000)
    public void test2023() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("&]5_I/<z9qJ");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
    }

    @Test(timeout = 4000)
    public void test2124() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("#X3");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.consumeCharacterReference((Character) null, true);
        characterReader0.toString();
    }

    @Test(timeout = 4000)
    public void test2225() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("#1");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.consumeCharacterReference((Character) null, false);
        characterReader0.toString();
    }

    @Test(timeout = 4000)
    public void test2326() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("#");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
    }

    @Test(timeout = 4000)
    public void test2327() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("#");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test2328() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("#");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
        characterReader0.toString();
    }

    @Test(timeout = 4000)
    public void test2429() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E=F&;bMGiwQG^+>F");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(3301);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.read();
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2430() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E=F&;bMGiwQG^+>F");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(3301);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.read();
        characterReader0.toString();
    }

    @Test(timeout = 4000)
    public void test2531() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("planck");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.consumeCharacterReference((Character) null, false);
        characterReader0.toString();
    }

    @Test(timeout = 4000)
    public void test2532() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("planck");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.consumeCharacterReference((Character) null, false);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test2633() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("numeric reference with no numerals");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
    }

    @Test(timeout = 4000)
    public void test2734() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("sc8=V-Tt}!y:9");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(9);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Character character0 = Character.valueOf('');
        tokeniser0.consumeCharacterReference(character0, true);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2735() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("sc8=V-Tt}!y:9");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(9);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Character character0 = Character.valueOf('');
        tokeniser0.consumeCharacterReference(character0, true);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test2836() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
        Token.Tag token_Tag0 = tokeniser0.createTagPending(false);
    }

    @Test(timeout = 4000)
    public void test2937() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("BW{A@<");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.read();
        characterReader0.toString();
    }

    @Test(timeout = 4000)
    public void test2938() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("BW{A@<");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        tokeniser0.read();
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test3039() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(" X<");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(88);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        characterReader0.toString();
    }

    @Test(timeout = 4000)
    public void test3040() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(" X<");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(88);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }

    @Test(timeout = 4000)
    public void test3141() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Xb>/:&CH'<B^oZI|y{");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(10981);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test3142() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Xb>/:&CH'<B^oZI|y{");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(10981);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token token0 = tokeniser0.read();
        token0.toString();
    }
}
