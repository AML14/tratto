[
  {
    "signature": "org.jsoup.nodes.Node(java.lang.String baseUri, org.jsoup.nodes.Attributes attributes)",
    "name": "org.jsoup.nodes.Node",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Attributes",
          "name": "Attributes",
          "isArray": false
        },
        "name": "attributes"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.jsoup.nodes.Node(java.lang.String baseUri)",
    "name": "org.jsoup.nodes.Node",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.jsoup.nodes.Node()",
    "name": "org.jsoup.nodes.Node",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nodeName()",
    "name": "nodeName",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "attr(java.lang.String attributeKey)",
    "name": "attr",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeKey"
        },
        "comment": "The attribute key.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The attribute, or empty string if not present (to avoid nulls).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "attributes()",
    "name": "attributes",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Attributes",
      "name": "org.jsoup.nodes.Attributes",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "attributes (which implements iterable, in same order as presented in original HTML).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "attr(java.lang.String attributeKey, java.lang.String attributeValue)",
    "name": "attr",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeKey"
        },
        "comment": "The attribute key.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeValue"
        },
        "comment": "The attribute value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this (for chaining).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasAttr(java.lang.String attributeKey)",
    "name": "hasAttr",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeKey"
        },
        "comment": "The attribute key to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the attribute exists, false if not.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeAttr(java.lang.String attributeKey)",
    "name": "removeAttr",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeKey"
        },
        "comment": "The attribute to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this (for chaining).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "baseUri()",
    "name": "baseUri",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setBaseUri(java.lang.String baseUri)",
    "name": "setBaseUri",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "absUrl(java.lang.String attributeKey)",
    "name": "absUrl",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeKey"
        },
        "comment": "The attribute key.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "childNode(int index)",
    "name": "childNode",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "childNodes()",
    "name": "childNodes",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<org.jsoup.nodes.Node>",
      "name": "java.util.List<org.jsoup.nodes.Node>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "childNodesAsArray()",
    "name": "childNodesAsArray",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node[]",
      "name": "org.jsoup.nodes.Node[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parent()",
    "name": "parent",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ownerDocument()",
    "name": "ownerDocument",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Document",
      "name": "org.jsoup.nodes.Document",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the Document associated with this Node, or null if there is no such Document.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "remove()",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "before(java.lang.String html)",
    "name": "before",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "html"
        },
        "comment": "HTML to add before this node.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this node, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "before(org.jsoup.nodes.Node node)",
    "name": "before",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.nodes.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "to add before this node.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this node, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "after(java.lang.String html)",
    "name": "after",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "html"
        },
        "comment": "HTML to add after this node.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this node, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "after(org.jsoup.nodes.Node node)",
    "name": "after",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.nodes.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "to add after this node.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this node, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "wrap(java.lang.String html)",
    "name": "wrap",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "replaceWith(org.jsoup.nodes.Node in)",
    "name": "replaceWith",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.nodes.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "in"
        },
        "comment": "the node that will will replace the existing node.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setParentNode(org.jsoup.nodes.Node parentNode)",
    "name": "setParentNode",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parentNode"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "replaceChild(org.jsoup.nodes.Node out, org.jsoup.nodes.Node in)",
    "name": "replaceChild",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeChild(org.jsoup.nodes.Node out)",
    "name": "removeChild",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addChildren(org.jsoup.nodes.Node... children)",
    "name": "addChildren",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Lorg.jsoup.nodes.Node;",
          "name": "Node[]",
          "isArray": true
        },
        "name": "children"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addChildren(int index, org.jsoup.nodes.Node... children)",
    "name": "addChildren",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "[Lorg.jsoup.nodes.Node;",
          "name": "Node[]",
          "isArray": true
        },
        "name": "children"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "siblingNodes()",
    "name": "siblingNodes",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<org.jsoup.nodes.Node>",
      "name": "java.util.List<org.jsoup.nodes.Node>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextSibling()",
    "name": "nextSibling",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "previousSibling()",
    "name": "previousSibling",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "siblingIndex()",
    "name": "siblingIndex",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "position in node sibling list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSiblingIndex(int siblingIndex)",
    "name": "setSiblingIndex",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "siblingIndex"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "outerHtml()",
    "name": "outerHtml",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "outerHtml(java.lang.StringBuilder accum)",
    "name": "outerHtml",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.StringBuilder",
          "name": "StringBuilder",
          "isArray": false
        },
        "name": "accum"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "outerHtmlHead(java.lang.StringBuilder accum, int depth, org.jsoup.nodes.Document$OutputSettings out)",
    "name": "outerHtmlHead",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.StringBuilder",
          "name": "StringBuilder",
          "isArray": false
        },
        "name": "accum"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "depth"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Document$OutputSettings",
          "name": "OutputSettings",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "outerHtmlTail(java.lang.StringBuilder accum, int depth, org.jsoup.nodes.Document$OutputSettings out)",
    "name": "outerHtmlTail",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.StringBuilder",
          "name": "StringBuilder",
          "isArray": false
        },
        "name": "accum"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "depth"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Document$OutputSettings",
          "name": "OutputSettings",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "indent(java.lang.StringBuilder accum, int depth, org.jsoup.nodes.Document$OutputSettings out)",
    "name": "indent",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.StringBuilder",
          "name": "StringBuilder",
          "isArray": false
        },
        "name": "accum"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "depth"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Document$OutputSettings",
          "name": "OutputSettings",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object o)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "stand-alone cloned node.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doClone(org.jsoup.nodes.Node parent)",
    "name": "doClone",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "Node",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Node",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Node",
      "name": "org.jsoup.nodes.Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]