/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 22:03:27 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.TokenQueue;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class TokenQueue_ESTest extends TokenQueue_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        TokenQueue.unescape("X-kXc[-oD(+(y?l!");
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeElementSelector();
        tokenQueue0.chompBalanced('#', '#');
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
        tokenQueue0.addFirst("Queue did not match expected sequence");
        tokenQueue0.consumeWord();
        tokenQueue0.chompTo("Queue did not match expected sequence");
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("-^1");
        tokenQueue0.consume("-^1");
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("p`DL^");
        tokenQueue0.matchesStartTag();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.matchesStartTag();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        TokenQueue.unescape("");
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.chompBalanced('/', '/');
        tokenQueue0.consumeWord();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        tokenQueue0.remainder();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("$79t<8");
        tokenQueue0.chompBalanced('*', 'C');
        tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("MunxBE4TmJ$O6brhQZ6");
        tokenQueue0.consumeWord();
        tokenQueue0.matchesCS("MunxBE4TmJ");
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ET1.K7YMPRyV");
        tokenQueue0.matches("i`g%R6{fv:n");
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        tokenQueue0.consumeWord();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("C-c}Cvo");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.consumeTo("C-c}Cvo");
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("8rVVhr[");
        tokenQueue0.consumeElementSelector();
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("xc?1>u8j]awS\"t\"PufP");
        tokenQueue0.consumeTagName();
        tokenQueue0.consume();
        char char0 = tokenQueue0.consume();
        tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("xc?1>u8j]awS\"t\"PufP");
        tokenQueue0.consumeTagName();
        tokenQueue0.consume();
        char char0 = tokenQueue0.consume();
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.chompToIgnoreCase("ZPENtVIS-1O4V");
        tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test1718() throws Throwable {
        TokenQueue.unescape((String) null);
    }

    @Test(timeout = 4000)
    public void test1819() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("C-c}Cvo");
        tokenQueue0.matchesCS((String) null);
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("zV}gOohc<nl");
        tokenQueue0.matchesAny((char[]) null);
    }

    @Test(timeout = 4000)
    public void test2021() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
        tokenQueue0.matches((String) null);
    }

    @Test(timeout = 4000)
    public void test2122() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("PsQsP");
        tokenQueue0.matchChomp((String) null);
    }

    @Test(timeout = 4000)
    public void test2223() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        tokenQueue0.consumeToIgnoreCase("");
    }

    @Test(timeout = 4000)
    public void test2324() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("1^=$YvJ?!Czi]S{%s");
        tokenQueue0.consumeToIgnoreCase((String) null);
    }

    @Test(timeout = 4000)
    public void test2425() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("WPI");
        tokenQueue0.consumeToAny((String[]) null);
    }

    @Test(timeout = 4000)
    public void test2526() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        tokenQueue0.consumeTo((String) null);
    }

    @Test(timeout = 4000)
    public void test2627() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("7LS<jn2]+9v");
        tokenQueue0.consume((String) null);
    }

    @Test(timeout = 4000)
    public void test2728() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        tokenQueue0.consume();
    }

    @Test(timeout = 4000)
    public void test2829() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        tokenQueue0.chompToIgnoreCase("");
    }

    @Test(timeout = 4000)
    public void test2930() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("foma::+6g|fqwm}a");
        tokenQueue0.chompToIgnoreCase((String) null);
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("8rVVhr[");
        tokenQueue0.chompTo((String) null);
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        tokenQueue0.addFirst((Character) null);
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        TokenQueue tokenQueue0 = null;
        tokenQueue0 = new TokenQueue((String) null);
    }

    @Test(timeout = 4000)
    public void test3334() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("_U\u0006");
        tokenQueue0.chompBalanced('_', 'c');
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test3435() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        tokenQueue0.addFirst("\"xiJ&`M[0Y_* x");
        tokenQueue0.consumeToIgnoreCase("*`l@X17Z[");
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test3536() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("$t/2XW");
        tokenQueue0.consumeToIgnoreCase("$t/2XW");
        tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test3637() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("PsQsP");
        tokenQueue0.consumeWord();
        tokenQueue0.consumeTo("PsQsP");
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test3738() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("8rVVhr[");
        tokenQueue0.consumeTo("");
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test3839() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        boolean boolean0 = tokenQueue0.matchesWord();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test3840() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        boolean boolean0 = tokenQueue0.matchesWord();
    }

    @Test(timeout = 4000)
    public void test3941() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
        tokenQueue0.chompToIgnoreCase("(@#fgg0X");
        boolean boolean0 = tokenQueue0.matchesWord();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test3942() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
        tokenQueue0.chompToIgnoreCase("(@#fgg0X");
        boolean boolean0 = tokenQueue0.matchesWord();
    }

    @Test(timeout = 4000)
    public void test4043() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("PsQsP");
        boolean boolean0 = tokenQueue0.matchesWord();
    }

    @Test(timeout = 4000)
    public void test4144() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
        tokenQueue0.consumeWord();
        boolean boolean0 = tokenQueue0.matchesWhitespace();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test4145() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
        tokenQueue0.consumeWord();
        boolean boolean0 = tokenQueue0.matchesWhitespace();
    }

    @Test(timeout = 4000)
    public void test4246() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("$79t<8");
        boolean boolean0 = tokenQueue0.matchesWhitespace();
    }

    @Test(timeout = 4000)
    public void test4247() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("$79t<8");
        boolean boolean0 = tokenQueue0.matchesWhitespace();
        tokenQueue0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test4348() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("PsQsP");
        Character character0 = Character.valueOf('u');
        tokenQueue0.addFirst(character0);
        boolean boolean0 = tokenQueue0.matchChomp("PsQsP");
        tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test4349() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("PsQsP");
        Character character0 = Character.valueOf('u');
        tokenQueue0.addFirst(character0);
        boolean boolean0 = tokenQueue0.matchChomp("PsQsP");
    }

    @Test(timeout = 4000)
    public void test4450() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        boolean boolean0 = tokenQueue0.matchChomp("");
        tokenQueue0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test4451() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        boolean boolean0 = tokenQueue0.matchChomp("");
    }

    @Test(timeout = 4000)
    public void test4552() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        Character character0 = new Character('!');
        tokenQueue0.addFirst(character0);
        char[] charArray0 = new char[6];
        charArray0[0] = '!';
        boolean boolean0 = tokenQueue0.matchesAny(charArray0);
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test4553() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        Character character0 = new Character('!');
        tokenQueue0.addFirst(character0);
        char[] charArray0 = new char[6];
        charArray0[0] = '!';
        boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    }

    @Test(timeout = 4000)
    public void test4654() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        Character character0 = new Character('!');
        tokenQueue0.addFirst(character0);
        char[] charArray0 = new char[6];
        boolean boolean0 = tokenQueue0.matchesAny(charArray0);
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test4655() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        Character character0 = new Character('!');
        tokenQueue0.addFirst(character0);
        char[] charArray0 = new char[6];
        boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    }

    @Test(timeout = 4000)
    public void test4756() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        String[] stringArray0 = new String[8];
        stringArray0[0] = "";
        boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    }

    @Test(timeout = 4000)
    public void test4857() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("MKf2*BS>:okK]H<");
        String[] stringArray0 = new String[1];
        stringArray0[0] = "y9?Q{4";
        boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    }

    @Test(timeout = 4000)
    public void test4958() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        String[] stringArray0 = new String[8];
        tokenQueue0.matchesAny(stringArray0);
    }

    @Test(timeout = 4000)
    public void test5059() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("s@zD6]");
        Character character0 = new Character('L');
        tokenQueue0.addFirst(character0);
        tokenQueue0.chompBalanced('L', 'L');
        boolean boolean0 = tokenQueue0.isEmpty();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test5060() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("s@zD6]");
        Character character0 = new Character('L');
        tokenQueue0.addFirst(character0);
        tokenQueue0.chompBalanced('L', 'L');
        boolean boolean0 = tokenQueue0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test5161() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("$79t<8");
        boolean boolean0 = tokenQueue0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test5262() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("s@zD6]");
        String string0 = tokenQueue0.remainder();
    }

    @Test(timeout = 4000)
    public void test5363() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("s@zD6]");
        boolean boolean0 = tokenQueue0.matches("s@zD6]");
    }

    @Test(timeout = 4000)
    public void test5464() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.chompBalanced('/', '/');
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test5565() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        tokenQueue0.addFirst("0Z-T~R7~7 izo");
        tokenQueue0.consumeCssIdentifier();
        tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test5666() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
        tokenQueue0.consume();
        tokenQueue0.consumeToIgnoreCase("Queue did not match expected sequence");
        tokenQueue0.consumeCssIdentifier();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test5767() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("$79t<8");
        tokenQueue0.consumeElementSelector();
        tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test5868() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.chompBalanced('/', '/');
        tokenQueue0.consumeElementSelector();
        tokenQueue0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test5969() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("I:xt}ChItIVC=~!{");
        tokenQueue0.consumeTagName();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test6070() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("xc?1>u8j]awS\"t\"PufP");
        tokenQueue0.consumeTagName();
        tokenQueue0.chompToIgnoreCase("X");
        tokenQueue0.consumeTagName();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test6171() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("_U\u0006");
        tokenQueue0.chompBalanced('c', '_');
        tokenQueue0.matchesWord();
    }

    @Test(timeout = 4000)
    public void test6272() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("String must not be empty");
        tokenQueue0.advance();
        String[] stringArray0 = new String[7];
        stringArray0[0] = "String must not be empty";
        stringArray0[1] = "String must not be empty";
        stringArray0[2] = "]NF";
        stringArray0[3] = "String must not be empty";
        stringArray0[4] = "String must not be empty";
        stringArray0[5] = "String must not be empty";
        stringArray0[6] = "String must not be empty";
        tokenQueue0.consumeToAny(stringArray0);
        tokenQueue0.chompBalanced('\"', '\"');
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test6373() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue(".Rw %Y-cF[9:Oy");
        Character character0 = Character.valueOf('#');
        tokenQueue0.addFirst(character0);
        tokenQueue0.consume(".Rw %Y-cF[9:Oy");
    }

    @Test(timeout = 4000)
    public void test6474() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consume("");
        tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test6575() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
        tokenQueue0.consume();
        tokenQueue0.consumeToIgnoreCase("Queue did not match expected sequence");
        tokenQueue0.advance();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test6676() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("String must not be empty");
        tokenQueue0.consumeTagName();
        boolean boolean0 = tokenQueue0.consumeWhitespace();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test6677() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("String must not be empty");
        tokenQueue0.consumeTagName();
        boolean boolean0 = tokenQueue0.consumeWhitespace();
    }

    @Test(timeout = 4000)
    public void test6778() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        boolean boolean0 = tokenQueue0.consumeWhitespace();
    }

    @Test(timeout = 4000)
    public void test6779() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        boolean boolean0 = tokenQueue0.consumeWhitespace();
        tokenQueue0.matchesWord();
    }

    @Test(timeout = 4000)
    public void test6880() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.chompBalanced('/', '/');
        tokenQueue0.consumeWord();
        boolean boolean0 = tokenQueue0.matchesWhitespace();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test6881() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.chompBalanced('/', '/');
        tokenQueue0.consumeWord();
        boolean boolean0 = tokenQueue0.matchesWhitespace();
    }

    @Test(timeout = 4000)
    public void test6982() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.chompTo("");
        tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test7083() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("<]CY\"1}kOU&tb3>#)*");
        boolean boolean0 = tokenQueue0.matchesStartTag();
        tokenQueue0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test7084() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("<]CY\"1}kOU&tb3>#)*");
        boolean boolean0 = tokenQueue0.matchesStartTag();
    }

    @Test(timeout = 4000)
    public void test7185() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("FL<x48V1,UNy`}6o");
        tokenQueue0.consumeTagName();
        boolean boolean0 = tokenQueue0.matchesStartTag();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test7186() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("FL<x48V1,UNy`}6o");
        tokenQueue0.consumeTagName();
        boolean boolean0 = tokenQueue0.matchesStartTag();
    }

    @Test(timeout = 4000)
    public void test7287() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.chompBalanced('/', '/');
        boolean boolean0 = tokenQueue0.matchesStartTag();
        tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test7288() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.chompBalanced('/', '/');
        boolean boolean0 = tokenQueue0.matchesStartTag();
    }

    @Test(timeout = 4000)
    public void test7389() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        String[] stringArray0 = new String[18];
        stringArray0[0] = "";
        tokenQueue0.consumeToAny(stringArray0);
        tokenQueue0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test7490() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("String must not be empty");
        tokenQueue0.advance();
        String[] stringArray0 = new String[7];
        stringArray0[0] = "String must not be empty";
        stringArray0[1] = "String must not be empty";
        stringArray0[2] = "]NF";
        stringArray0[3] = "String must not be empty";
        stringArray0[4] = "String must not be empty";
        stringArray0[5] = "String must not be empty";
        stringArray0[6] = "String must not be empty";
        tokenQueue0.consumeToAny(stringArray0);
        char[] charArray0 = new char[3];
        boolean boolean0 = tokenQueue0.matchesAny(charArray0);
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test7491() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("String must not be empty");
        tokenQueue0.advance();
        String[] stringArray0 = new String[7];
        stringArray0[0] = "String must not be empty";
        stringArray0[1] = "String must not be empty";
        stringArray0[2] = "]NF";
        stringArray0[3] = "String must not be empty";
        stringArray0[4] = "String must not be empty";
        stringArray0[5] = "String must not be empty";
        stringArray0[6] = "String must not be empty";
        tokenQueue0.consumeToAny(stringArray0);
        char[] charArray0 = new char[3];
        boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    }

    @Test(timeout = 4000)
    public void test7592() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.chompBalanced('/', '/');
        tokenQueue0.consumeWord();
        char char0 = tokenQueue0.peek();
        tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test7593() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        tokenQueue0.consumeAttributeKey();
        tokenQueue0.chompBalanced('/', '/');
        tokenQueue0.consumeWord();
        char char0 = tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test7694() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        char char0 = tokenQueue0.peek();
    }

    @Test(timeout = 4000)
    public void test7795() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("ZPENtVIS-1O4V#f");
        String string0 = tokenQueue0.toString();
    }

    @Test(timeout = 4000)
    public void test7896() throws Throwable {
        TokenQueue tokenQueue0 = new TokenQueue("");
        boolean boolean0 = tokenQueue0.matchesCS("");
    }
}
