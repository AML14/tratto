[
  {
    "signature": "org.jsoup.parser.TokenQueue(java.lang.String data)",
    "name": "org.jsoup.parser.TokenQueue",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if no data left in queue.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "peek()",
    "name": "peek",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "First character, or 0 if empty.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addFirst(java.lang.Character c)",
    "name": "addFirst",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Character",
          "name": "Character",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addFirst(java.lang.String seq)",
    "name": "addFirst",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matches(java.lang.String seq)",
    "name": "matches",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "seq"
        },
        "comment": "String to check queue for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the next characters match.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "matchesCS(java.lang.String seq)",
    "name": "matchesCS",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "seq"
        },
        "comment": "string to case sensitively check for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if matched, false if not.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "matchesAny(java.lang.String... seq)",
    "name": "matchesAny",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchesAny(char... seq)",
    "name": "matchesAny",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchesStartTag()",
    "name": "matchesStartTag",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchChomp(java.lang.String seq)",
    "name": "matchChomp",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "seq"
        },
        "comment": "String to search for and if found remove from queue.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if found and removed, false if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "matchesWhitespace()",
    "name": "matchesWhitespace",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchesWord()",
    "name": "matchesWord",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "advance()",
    "name": "advance",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consume()",
    "name": "consume",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "first character on queue.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "consume(java.lang.String seq)",
    "name": "consume",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "seq"
        },
        "comment": "sequence to remove from head of queue.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "consumeTo(java.lang.String seq)",
    "name": "consumeTo",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "seq"
        },
        "comment": "String to end on (and not include in return. seq is but leave on queue). Case sensitive.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The matched data consumed from queue.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "consumeToIgnoreCase(java.lang.String seq)",
    "name": "consumeToIgnoreCase",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeToAny(java.lang.String... seq)",
    "name": "consumeToAny",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "chompTo(java.lang.String seq)",
    "name": "chompTo",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "seq"
        },
        "comment": "String to match up to and not include in return. seq is and to pull off queue. Case sensitive.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Data matched from queue.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "chompToIgnoreCase(java.lang.String seq)",
    "name": "chompToIgnoreCase",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "chompBalanced(char open, char close)",
    "name": "chompBalanced",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "open"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "close"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "open"
        },
        "comment": "opener.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "close"
        },
        "comment": "closer.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "data matched from the queue.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "unescape(java.lang.String in)",
    "name": "unescape",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "in"
        },
        "comment": "backslash escaped string.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "unescaped string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "consumeWhitespace()",
    "name": "consumeWhitespace",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Whether consuming whitespace or not., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "consumeWord()",
    "name": "consumeWord",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "String of word characters from queue, or empty string if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "consumeTagName()",
    "name": "consumeTagName",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "tag name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "consumeElementSelector()",
    "name": "consumeElementSelector",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "tag name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "consumeCssIdentifier()",
    "name": "consumeCssIdentifier",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeAttributeKey()",
    "name": "consumeAttributeKey",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "remainder()",
    "name": "remainder",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.TokenQueue",
      "name": "TokenQueue",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.TokenQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]