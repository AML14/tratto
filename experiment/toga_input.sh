#!/bin/bash
# This script generates a test suite for a class using Evosuite.
# Then, for every supported TOG, it creates a variant of teh test suite that uses the TOG's oracle.
# An invocation follows the format,
#     "bash experiment.sh [target-class] [src-dir] [bin-dir] [jar]"
# This script adds the following sub-directories to the output directory, `experiment/output/`:
#     - "evosuite-tests": a test suite generated by EvoSuite
#     - "evosuite-simple-tests": EvoSuite tests split with one assertion per
#                                test
#     - "evosuite-prefixes": EvoSuite simple tests with all assertions removed
#     - "[tog]/input": preprocessed TOG input (if necessary)
#     - "[tog]/oracle": OracleOutputs generated by TOG
#     - "tog-tests/[tog]": a test suite made by inserting TOG oracles into the
#                          EvoSuite prefixes

# Get current directory
# shellcheck disable=SC2128
current_dir=$(realpath "$(dirname "${BASH_SOURCE}")")
# Setup global variables
source "${current_dir}/generator/utils/global_variables.sh"

# Define local variables
tog=${1}
target_class=${2}
src_dir=${3}
bin_dir=${4}
classpath_or_jar=${5}
evosuite_flag=$( [[ "$6" == "true" ]] && echo true || echo false )
project_id=${7-"none"}
bug_id=${8-"none"}
qualifiers="${target_class%.*}"
tog_oracles_output_dir="${ROOT_DIR}/output/${tog}-oracles/${qualifiers//.//}"
evosuite_output_dir="${ROOT_DIR}/output/evosuite-tests/${qualifiers//.//}"

# setup sdkman
source "${UTILS_DIR}/init_sdkman.sh" "${SDKMAN_DIR}"

# switch to Java 17
sdk use java "${JAVA17}"

# Setup experiments
bash "${UTILS_DIR}/experiment_setup.sh"

# Generate oracles using TOG
bash ./generator/toga_input.sh "${target_class}" "${src_dir}" "${project_id}" "${bug_id}"