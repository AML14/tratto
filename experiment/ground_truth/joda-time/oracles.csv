Package,Class,Method,Oracle,Oracle type,Info from source,Info from docs
org.joda.time.convert,IntervalConverter,"boolean isReadableInterval(Object object, Chronology chrono)",object != null;,PRE,False,True
org.joda.time.convert,IntervalConverter,"void setInto(ReadWritableInterval writableInterval, Object object, Chronology chrono);",writableInterval != null;,PRE,False,True
org.joda.time.convert,IntervalConverter,"void setInto(ReadWritableInterval writableInterval, Object object, Chronology chrono);",object != null;,PRE,False,True
org.joda.time.field,LenientDateTimeField,"public static DateTimeField getInstance(DateTimeField field, Chronology base) ",field == null ? methodResultID == null : true;,PRE,True,True
org.joda.time.field,LenientDateTimeField,"public static DateTimeField getInstance(DateTimeField field, Chronology base) ",base  != null;,PRE,True,True
org.joda.time.chrono,LenientChronology,public static LenientChronology getInstance(Chronology base) ,true ? methodResultID != null : true;,POST,False,True
org.joda.time.chrono,LenientChronology,public boolean equals(Object obj),this == obj ? methodResultID == true : methodResultID == false;,POST,True,True
org.joda.time.tz,ZoneInfoProvider,public DateTimeZone getZone(String id),id == null ? methodResultID == null : true;,PRE,True,False
org.joda.time.base,BaseDateTime,protected Chronology checkChronology(Chronology chronology),true ? methodResultID != null : true;,POST,True,True
org.joda.time.base,BaseDateTime,"protected long checkInstant(long instant, Chronology chronology)",chronology != null;,PRE,False,True
org.joda.time,Weeks,"public static Weeks weeksBetween(ReadableInstant start, ReadableInstant end)",start != null;,PRE,False,True
org.joda.time,Weeks,"public static Weeks weeksBetween(ReadableInstant start, ReadableInstant end)",end != null;,PRE,False,True
org.joda.time,Weeks,"public static Weeks weeksBetween(ReadableInstant start, ReadableInstant end)",start == null || end == null;,EXCEPT,True,True
org.joda.time,Weeks,"public static Weeks weeksBetween(ReadablePartial start, ReadablePartial end)",start != null;,PRE,False,True
org.joda.time,Weeks,"public static Weeks weeksBetween(ReadablePartial start, ReadablePartial end)",end != null;,PRE,False,True
org.joda.time,Weeks,"public static Weeks weeksBetween(ReadablePartial start, ReadablePartial end)",start == null || end == null;,EXCEPT,True,True
org.joda.time,Weeks,public static Weeks weeksIn(ReadableInterval interval),interval == null ? methodResultID == Weeks.ZERO : true;,PRE,True,True
org.joda.time,Weeks,public static Weeks weeksIn(ReadableInterval interval),interval.getStart() == null || interval.getEnd() == null;,EXCEPT,True,True
org.joda.time,Weeks,public static Weeks standardWeeksIn(ReadablePeriod period) ,period == null ? methodResultID == 0 : true;,PRE,True,True
org.joda.time,Weeks,public static Weeks parseWeeks(String periodStr),periodStr == null ? methodResultID == Weeks.ZERO : true;,PRE,True,True
org.joda.time,Weeks,public Weeks plus(int weeks),weeks == 0 ? methodResultID == this : true;,PRE,True,False
org.joda.time,Weeks,public Weeks plus(Weeks weeks) ,weeks == null ? methodResultID == this : true;,PRE,True,False
org.joda.time,Weeks,public Weeks minus(Weeks weeks),weeks == null ? methodResultID == this : true;,PRE,True,False
org.joda.time,Weeks,public Weeks dividedBy(int divisor),divisor == 1 ? methodResultID == this : true;,PRE,True,False
org.joda.time,Weeks,public Weeks dividedBy(int divisor),divisor == 0,EXCEPT,False,True
org.joda.time,PeriodType,public static synchronized PeriodType forFields(DurationFieldType[] types) ,types == null || types.length == 0,EXCEPT,True,False
org.joda.time,PeriodType,public boolean isSupported(DurationFieldType type),this.indexOf(type) >= 0 ? methodResultID == true : methodResultID == false;,POST,True,True
org.joda.time,PeriodType,public String toString(),"methodResultID == ""PeriodType["" + this.getName() + ""]"" == true : false;",POST,True,False
org.joda.time,PeriodType,"boolean addIndexedField(ReadablePeriod period, int index, int[] values, int valueToAdd) ",valueToAdd == 0 ? methodResultID == false : true;,PRE,True,False
org.joda.time,PeriodType,public boolean equals(Object obj),this == obj ? methodResultID == true : true;,PRE,True,False
org.joda.time,LocalTime,public static LocalTime now(),true ? methodResultID != null : true;,POST,False,True
org.joda.time,LocalTime,public static LocalTime now(DateTimeZone zone),zone != null;,PRE,False,True
org.joda.time,LocalTime,public static LocalTime now(DateTimeZone zone),zone == null;,EXCEPT,True,False
org.joda.time,LocalTime,public static LocalTime now(DateTimeZone zone),true ? methodResultID != null : true;,POST,False,True
org.joda.time,LocalTime,public static LocalTime now(Chronology chronology),chronology != null;,PRE,False,True
org.joda.time,LocalTime,public static LocalTime now(Chronology chronology),chronology == null;,EXCEPT,True,False
org.joda.time,LocalTime,public static LocalTime now(Chronology chronology),true ? methodResultID != null : true;,POST,False,True
org.joda.time,LocalTime,public static LocalTime parse(String str),str != null;,PRE,True,False
org.joda.time,LocalTime,public static LocalTime parse(String str),true ? methodResultID != null : true;,POST,False,True
org.joda.time,LocalTime,"public static LocalTime parse(String str, DateTimeFormatter formatter)",str != null;,PRE,False,True
org.joda.time,LocalTime,"public static LocalTime parse(String str, DateTimeFormatter formatter)",formatter != null;,PRE,False,True
org.joda.time,LocalTime,"public static LocalTime parse(String str, DateTimeFormatter formatter)",true ? methodResultID != null : true;,POST,True,False
org.joda.time,LocalTime,public static LocalTime fromMillisOfDay(long millisOfDay),true ? methodResultID != null : true;,POST,False,True
org.joda.time,LocalTime,"public static LocalTime fromMillisOfDay(long millisOfDay, Chronology chrono)",true ? methodResultID != null : true;,POST,False,True
org.joda.time,LocalTime,public static LocalTime fromCalendarFields(Calendar calendar),calendar == null;,EXCEPT,False,True
org.joda.time,LocalTime,public static LocalTime fromDateFields(Date date),date == null;,EXCEPT,True,True
org.joda.time,LocalTime,"public LocalTime(int hourOfDay, int minuteOfHour)",hourOfDay >= 0 && hourOfDay <= 23;,PRE,False,True
org.joda.time,LocalTime,"public LocalTime(int hourOfDay, int minuteOfHour)",minuteOfHour >= 0 && minuteOfHour <= 59;,PRE,False,True
org.joda.time,LocalTime,"public LocalTime(int hourOfDay, int minuteOfHour, int secondOfMinute)",hourOfDay >= 0 && hourOfDay <= 23;,PRE,False,True
org.joda.time,LocalTime,"public LocalTime(int hourOfDay, int minuteOfHour, int secondOfMinute)",minuteOfHour >= 0 && minuteOfHour <= 59;,PRE,False,True
org.joda.time,LocalTime,"public LocalTime(int hourOfDay, int minuteOfHour, int secondOfMinute)",secondOfMinute >= 0 && secondOfMinute <= 59;,PRE,False,True
org.joda.time,LocalTime,"public LocalTime(int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)",hourOfDay >= 0 && hourOfDay <= 23;,PRE,False,True
org.joda.time,LocalTime,"public LocalTime(int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)",minuteOfHour >= 0 && minuteOfHour <= 59;,PRE,False,True
org.joda.time,LocalTime,"public LocalTime(int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)",secondOfMinute >= 0 && secondOfMinute <= 59;,PRE,False,True
org.joda.time,LocalTime,"public LocalTime(int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)",millisOfSecond >= 0 && millisOfSecond <= 999;,PRE,False,True
org.joda.time,LocalTime,private Object readResolve(),true ? methodResultID != null : true;,POST,False,True
org.joda.time,LocalTime,public int size(),methodResultID == 4 ? true : false;,POST,True,True
org.joda.time,LocalTime,public int getValue(int index),index >=0 && index <= 3;,PRE,False,True
org.joda.time,LocalTime,public int get(DateTimeFieldType fieldType),fieldType != null;,PRE,False,True
org.joda.time,LocalTime,public int get(DateTimeFieldType fieldType),fieldType == null;,EXCEPT,False,True
org.joda.time,LocalTime,public int get(DateTimeFieldType fieldType),this.isSupported(fieldType) == false;,EXCEPT,True,False
org.joda.time,LocalTime,public boolean isSupported(DateTimeFieldType type),type == null ? methodResultID == false : true;,PRE,True,False
org.joda.time,LocalTime,public boolean isSupported(DurationFieldType type),type == null ? methodResultID == false : true;,PRE,True,False
org.joda.time,LocalTime,public boolean equals(Object partial),this == partial ? methodResultID == true : true;,PRE,True,False
org.joda.time,LocalTime,public int compareTo(ReadablePartial partial),this == partial ? methodResultID == 0 : true;,PRE,True,True
org.joda.time,LocalTime,public int compareTo(ReadablePartial partial),partial == null;,EXCEPT,False,True
org.joda.time,LocalTime,public LocalTime withFields(ReadablePartial partial),partial == null ? methodResultID == this : true;,POST,True,True
org.joda.time,LocalTime,"public LocalTime withField(DateTimeFieldType fieldType, int value)",fieldType != null;,PRE,False,True
org.joda.time,LocalTime,"public LocalTime withField(DateTimeFieldType fieldType, int value)",fieldType == null;,EXCEPT,False,True
org.joda.time,LocalTime,"public LocalTime withFieldAdded(DurationFieldType fieldType, int amount)",fieldType == null;,EXCEPT,True,False
org.joda.time,LocalTime,"public LocalTime withFieldAdded(DurationFieldType fieldType, int amount)",fieldType != null;,PRE,False,True
org.joda.time,LocalTime,"public LocalTime withFieldAdded(DurationFieldType fieldType, int amount)",amount == 0 ? methodResultID == this : true;,POST,True,True
org.joda.time,LocalTime,"public LocalTime withPeriodAdded(ReadablePeriod period, int scalar)",period == null || scalar == 0 ? methodResultID == this : true;,POST,True,False
org.joda.time,LocalTime,public LocalTime plusHours(int hours),hours == 0 ? methodResultID == this : true;,PRE,True,False
org.joda.time,LocalTime,public LocalTime plusMinutes(int minutes),minutes == 0 ? methodResultID == this : true;,PRE,True,False
org.joda.time,LocalTime,public LocalTime plusSeconds(int seconds),seconds == 0 ? methodResultID == this : true;,PRE,True,False
org.joda.time,LocalTime,public LocalTime plusMillis(int millis),millis == 0 ? methodResultID == this : true;,PRE,True,False
org.joda.time,LocalTime,public LocalTime minusHours(int hours),hours == 0 ? methodResultID == this : true;,PRE,True,False
org.joda.time,LocalTime,public LocalTime minusMinutes(int minutes) ,minutes == 0 ? methodResultID == this : true;,PRE,True,False
org.joda.time,LocalTime,public LocalTime minusSeconds(int seconds),seconds == 0 ? methodResultID == this : true;,PRE,True,False
org.joda.time,LocalTime,public LocalTime minusMillis(int millis),millis == 0 ? methodResultID == this : true;,PRE,True,False
org.joda.time,LocalTime,public Property property(DateTimeFieldType fieldType),fieldType == null;,EXCEPT,False,True
org.joda.time,LocalTime,public Property property(DateTimeFieldType fieldType),this.isSupportd(fieldType) == null;,EXCEPT,True,True
org.joda.time,LocalTime,public String toString(String pattern),true ? methodResultID != null : true;,POST,False,True
org.joda.time,LocalTime,"public String toString(String pattern, Locale locale) throws IllegalArgumentException",true ? methodResultID != null : true;,POST,False,True
org.joda.time.format,InternalPrinterDateTimePrinter,public boolean equals(Object obj),obj == this || ((obj instanceof InternalPrinterDateTimePrinter) == false) ? methodResultID == false : true;,POST,False,True