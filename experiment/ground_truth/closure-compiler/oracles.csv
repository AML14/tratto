Package,Class,Method,Oracle,Oracle type,Info from source,Info from docs
com.google.javascript.jscomp,PolymerPass,"PolymerPass(AbstractCompiler compiler, Integer polymerVersion, PolymerExportPolicy polymerExportPolicy, boolean propertyRenamingEnabled)",polymerVersion != null && polymerVersion != 1 && polymerVersion != 2;,PRE,True,FALSE
com.google.javascript.jscomp,PolymerPass,"PolymerPass(AbstractCompiler compiler, Integer polymerVersion, PolymerExportPolicy polymerExportPolicy, boolean propertyRenamingEnabled)",polymerVersion == null || polymerVersion == 1 || polymerVersion == 2;,EXCEPT,True,FALSE
com.google.javascript.rhino,TokenUtil,public static boolean isJSSpace(int c),true ? methodResultID == ((c <= 127 && c == 0x20 || c == 0x9 || c == 0xC || c == 0xB) || (c > 127 && (c == 0xA0 || Character.getType((char) c) == Character.SPACE_SEPARATOR))) : true;,POST,True,FALSE
com.google.javascript.rhino,TokenUtil,public static boolean isJSFormatChar(int c),true ? methodResultID == (c > 127 && Character.getType(c) == Character.FORMAT) : true;,POST,True,FALSE
com.google.javascript.rhino,TokenUtil,public static boolean isWhitespace(int c),true ? methodResultID == Character.isWhitespace(c) : true;,POST,True,FALSE
com.google.javascript.rhino,TypeDeclarationsIR,"public static Node functionType(Node returnType, LinkedHashMap<String, Node> requiredParams, LinkedHashMap<String, Node> optionalParams, String restName, Node restType)",requiredParams != null;,PRE,True,FALSE
com.google.javascript.rhino,TypeDeclarationsIR,"public static Node functionType(Node returnType, LinkedHashMap<String, Node> requiredParams, LinkedHashMap<String, Node> optionalParams, String restName, Node restType)",optionalParams != null;,PRE,True,FALSE
com.google.javascript.rhino,TypeDeclarationsIR,"public static Node functionType(Node returnType, LinkedHashMap<String, Node> requiredParams, LinkedHashMap<String, Node> optionalParams, String restName, Node restType)",requiredParams = null || optionalParams == null;,EXCEPT,True,FALSE
com.google.javascript.rhino,TypeDeclarationsIR,public static Node unionType(Iterable<Node> options),Iterables.isEmpty(options) == false,EXCEPT,True,FALSE