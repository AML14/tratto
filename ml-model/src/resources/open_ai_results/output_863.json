"output=[{'tag': '@throws IllegalArgumentException (optional) if the map limits the values\\n in some way and the value was invalid', 'alternatives': ['@throws IllegalArgumentException (optional) if the map imposes restrictions on the values and the provided value was invalid', '@throws IllegalArgumentException if the value was invalid and the map imposes limitations on the values in some way', '@throws IllegalArgumentException if the value was found to be invalid due to certain limitations set by the map']},\n {'tag': '@param value the value to find the key for', 'alternatives': ['@param value the value for which to search the corresponding key', '@param value the value we want to find the key for', '@param value the value that we want to find the corresponding key of']},\n {'tag': '@return the mapped key, or <code>null</code> if not found', 'alternatives': ['@return the key that is mapped to the provided value, or <code>null</code> if no mapping is found', '@return the key associated with the given value, or <code>null</code> if it is not found', '@return the key that corresponds to the given value, or <code>null</code> if no matching key is found']},\n {'tag': '@throws ClassCastException (optional) if the map limits the type of the\\n value and the specified value is inappropriate', 'alternatives': ['@throws ClassCastException (optional) if the map restricts the type of the value and the given value is not suitable', '@throws ClassCastException if the map imposes restrictions on the type of the value and the provided value is unsuitable', '@throws ClassCastException if the map limits the acceptable type of the value and the specified value is inappropriate']},\n {'tag': '@param value the value to find the key-value pair for', 'alternatives': ['@param value the value for which to locate the corresponding key-value pair', '@param value the value we want to search the key-value pair for', '@param value the value that we want to find the associated key-value pair of']},\n {'tag': '@return the key that was removed, <code>null</code> if nothing removed', 'alternatives': ['@return the key that has been deleted, or <code>null</code> if no deletion occurred', '@return the key that was eliminated, or <code>null</code> if no elimination occurred', '@return the key that got removed, or <code>null</code> if nothing was removed']},\n {'tag': '@throws ClassCastException (optional) if the map limits the type of the\\n value and the specified value is inappropriate', 'alternatives': ['@throws ClassCastException (optional) if the map restricts the type of the value and the given value is not suitable', '@throws ClassCastException if the map imposes restrictions on the type of the value and the provided value is unsuitable', '@throws ClassCastException if the map limits the acceptable type of the value and the specified value is inappropriate']},\n {'tag': '@throws UnsupportedOperationException if this method is not supported\\n by the implementation', 'alternatives': ['@throws UnsupportedOperationException if the implementation does not support this method', '@throws UnsupportedOperationException if the implementation does not provide support for this method', '@throws UnsupportedOperationException if this method is not supported by the underlying implementation']},\n {'tag': '@return an inverted bidirectional map', 'alternatives': ['@return a bidirectional map with the keys and values inverted', '@return a map with the keys and values swapped in a bidirectional manner', '@return a bidirectional map with the key-value pairs inverted']},\n {'tag': '@return a set view of the values contained in this map', 'alternatives': ['@return a view of the set that contains the values stored in this map', '@return a set that represents the values contained in this map', '@return a set that presents a view of the values contained in this map']},\n {'tag': '@param o1 the first object to be equated.', 'alternatives': ['@param o1 the first object to be compared for equality', '@param o1 the first object to be checked for equivalence', '@param o1 the first object to be examined for equality']},\n {'tag': '@param o2 the second object to be equated.', 'alternatives': ['@param o2 the second object to compare for equality', '@param o2 the second object under consideration for equivalence', '@param o2 the second object to be checked for equality']},\n {'tag': '@param o the object to calculate the hash for.', 'alternatives': ['@param o the object for which to compute the hash', '@param o the object that the hash value needs to be calculated for', '@param o the object for which the hash needs to be computed']},\n {'tag': '@return the hash of the object.', 'alternatives': ['@return the computed hash value of the object', '@return the hash value calculated for the object', '@return the resulting hash code of the object']},\n {'tag': '@param object the object to search for', 'alternatives': ['@param object the object to look for', '@param object the object that needs to be searched', '@param object the object for which to perform a search']},\n {'tag': '@return the number of occurrences of the object, zero if not found', 'alternatives': ['@return the count of occurrences of the object, or zero if it is not present', '@return the number of times the object appears, or zero if it is not found', '@return the frequency of the object in the collection, or zero if it is not found']},\n {'tag': '@param object the object to update', 'alternatives': ['@param object the object to modify', '@param object the object that needs to be updated', '@param object the object that requires updating']},\n {'tag': '@param count the number of occurrences of the object', 'alternatives': ['@param count the count of occurrences of the object', '@param count the number of times the object appears', '@param count the frequency of the object']},\n {'tag': '@return the number of occurrences of the object before this operation, zero\\n  if the object was not contained in the multiset', 'alternatives': ['@return the count of occurrences of the object prior to this operation, or zero if the object was not present in the multiset', '@return the number of times the object occurred in the multiset before this operation, or zero if it was not present', '@return the frequency of the object in the multiset before this operation, or zero if it was not contained']},\n {'tag': '@param object the object to add', 'alternatives': ['@param object the object to insert', '@param object the object that needs to be added', '@param object the object to include']},\n {'tag': '@return <code>true</code> always, as the size of the MultiSet is increased\\n  in any case', 'alternatives': ['@return <code>true</code> always, since the size of the MultiSet is increased no matter what', '@return <code>true</code> always, regardless of any circumstance, as the MultiSet size is increased', '@return <code>true</code> always, as the MultiSet size is guaranteed to increase irrespective of the conditions']},\n {'tag': '@param object the object to add', 'alternatives': ['@param object the object to append', '@param object the object that needs to be included', '@param object the object to incorporate']},\n {'tag': '@param occurrences the number of occurrences to add, may be zero,\\n  in which case no change is made to the multiset', 'alternatives': ['@param occurrences the count of occurrences to be added, which can be zero; if zero, the multiset remains unchanged', '@param occurrences the number of times to add the object, which can be zero; if zero, there will be no modification to the multiset', '@param occurrences the frequency of the object to be included, can be zero; if zero, there will be no alteration to the multiset']},\n {'tag': '@return the number of occurrences of the object in the multiset before\\n  this operation; possibly zero', 'alternatives': ['@return the count of occurrences of the object in the multiset prior to this operation, possibly zero', '@return the number of times the object occurred in the multiset before this operation, possibly zero', '@return the frequency of the object in the multiset before this operation, which could be zero']},\n {'tag': '@param object the object to remove', 'alternatives': ['@param object the object to delete', '@param object the object that needs to be removed', '@param object the object to eliminate']}]\r\n\r\nPlease let me know if you need anything else."