"[\n    {\n        'tag': '@return G-Test statistic',\n        'alternatives': [\n            '@return G-Test result',\n            '@return G-Test value',\n            '@return Result of the G-Test'\n        ]\n    },\n    {\n        'tag': '@throws DimensionMismatchException the the lengths of the arrays do not\\nmatch or their common length is less than 2',\n        'alternatives': [\n            '@throws DimensionMismatchException if the arrays have different lengths or their common length is less than 2',\n            '@throws DimensionMismatchException when the arrays do not match in length or have a common length smaller than 2',\n            '@throws DimensionMismatchException if the lengths of the arrays do not match or if their common length is less than 2'\n        ]\n    },\n    {\n        'tag': '@throws NotPositiveException if any entry in {@code observed1} or\\n{@code observed2} is negative',\n        'alternatives': [\n            '@throws NotPositiveException if any element in {@code observed1} or\\n{@code observed2} is negative',\n            '@throws NotPositiveException when any of the entries in {@code observed1} or\\n{@code observed2} is negative',\n            '@throws NotPositiveException if there is any negative entry in either {@code observed1} or\\n{@code observed2}'\n        ]\n    },\n    {\n        'tag': '@throws ZeroException if either all counts of\\n{@code observed1} or {@code observed2} are zero, or if the count\\nat the same index is zero for both arrays.',\n        'alternatives': [\n            '@throws ZeroException if all counts in either {@code observed1} or {@code observed2} are zero, or if the count\\nat the same index is zero for both arrays.',\n            '@throws ZeroException when either all counts of {@code observed1} or {@code observed2} are zero, or if the count at the same index is zero for both arrays.',\n            '@throws ZeroException if all counts of either {@code observed1} or {@code observed2} are zero, or if the count\\nat the same index is zero for both arrays.'\n        ]\n    },\n    {\n        'tag': '@param k11 number of times the two events occurred together (AB)',\n        'alternatives': [\n            '@param k11 count of occurrences where the two events happened together (AB)',\n            '@param k11 number of times the two events (AB) happened simultaneously',\n            '@param k11 the count of cases where the two events (AB) occurred together'\n        ]\n    },\n    {\n        'tag': '@param k12 number of times the second event occurred WITHOUT the\\nfirst event (notA,B)',\n        'alternatives': [\n            '@param k12 count of occurrences where the second event happened without the first event (notA,B)',\n            '@param k12 number of times the second event (notA,B) occurred independently from the first event',\n            '@param k12 the count of cases where the second event (notA,B) happened without the occurrence of the first event'\n        ]\n    },\n    {\n        'tag': '@param k21 number of times the first event occurred WITHOUT the\\nsecond event (A, notB)',\n        'alternatives': [\n            '@param k21 count of occurrences where the first event happened without the second event (A, notB)',\n            '@param k21 number of times the first event (A, notB) occurred independently from the second event',\n            '@param k21 the count of cases where the first event (A, notB) happened without the occurrence of the second event'\n        ]\n    },\n    {\n        'tag': '@param k22 number of times something else occurred (i.e. was neither\\nof these events (notA, notB)',\n        'alternatives': [\n            '@param k22 count of occurrences where something else happened (neither notA nor notB)',\n            '@param k22 number of times an event occurred that is neither notA nor notB',\n            '@param k22 the count of cases where an event happened that is different from notA and notB'\n        ]\n    },\n    {\n        'tag': '@return root log-likelihood ratio',\n        'alternatives': [\n            '@return square root of log-likelihood ratio',\n            '@return result of the log-likelihood ratio with square root',\n            '@return the square root of the log-likelihood ratio'\n        ]\n    },\n    {\n        'tag': '@param observed1 array of observed frequency counts of the first data set',\n        'alternatives': [\n            '@param observed1 array containing the observed frequency counts of the first data set',\n            '@param observed1 an array that holds the observed frequency counts of the first data set',\n            '@param observed1 the array of observed frequency counts for the first data set'\n        ]\n    },\n    {\n        'tag': '@param observed2 array of observed frequency counts of the second data\\nset',\n        'alternatives': [\n            '@param observed2 array containing the observed frequency counts of the second data set',\n            '@param observed2 an array that holds the observed frequency counts of the second data set',\n            '@param observed2 the array of observed frequency counts for the second data set'\n        ]\n    },\n    {\n        'tag': '@return p-value',\n        'alternatives': [\n            '@return probability value',\n            '@return significance level score',\n            '@return the value corresponding to the probability (p-value)'\n        ]\n    },\n    {\n        'tag': '@throws NotPositiveException if any of the entries in {@code observed1} or\\n{@code observed2} are negative',\n        'alternatives': [\n            '@throws NotPositiveException if any element in {@code observed1} or\\n{@code observed2} is negative',\n            '@throws NotPositiveException when any of the entries in {@code observed1} or\\n{@code observed2} is negative',\n            '@throws NotPositiveException if there is any negative entry in either {@code observed1} or\\n{@code observed2}'\n        ]\n    },\n    {\n        'tag': '@throws ZeroException if either all counts of {@code observed1} or\\n{@code observed2} are zero, or if the count at some index is\\nzero for both arrays',\n        'alternatives': [\n            '@throws ZeroException if all counts in either {@code observed1} or {@code observed2} are zero, or if the count at some index is\\nzero for both arrays',\n            '@throws ZeroException when either all counts of {@code observed1} or {@code observed2} are zero, or if the count at some index is\\nzero for both arrays',\n            '@throws ZeroException if all counts of either {@code observed1} or {@code observed2} are zero, or if the count at some index is\\nzero for both arrays'\n        ]\n    },\n    {\n        'tag': '@throws MaxCountExceededException if an error occurs computing the\\np-value.',\n        'alternatives': [\n            '@throws MaxCountExceededException if there is an error during the computation of the p-value.',\n            '@throws MaxCountExceededException when the computation of the p-value exceeds the maximum count.',\n            '@throws MaxCountExceededException if an error is encountered while calculating the p-value.'\n        ]\n    },\n    {\n        'tag': '@param observed1 array of observed frequency counts of the first data set',\n        'alternatives': [\n            '@param observed1 array containing the observed frequency counts of the first data set',\n            '@param observed1 an array that holds the observed frequency counts of the first data set',\n            '@param observed1 the array of observed frequency counts for the first data set'\n        ]\n    },\n    {\n        'tag': '@param observed2 array of observed frequency counts of the second data\\nset',\n        'alternatives': [\n            '@param observed2 array containing the observed frequency counts of the second data set',\n            '@param observed2 an array that holds the observed frequency counts of the second data set',\n            '@param observed2 the array of observed frequency counts for the second data set'\n        ]\n    },\n    {\n        'tag': '@param alpha significance level of the test',\n        'alternatives': [\n            '@param alpha level of significance for the test',\n            '@param alpha significance threshold',\n            '@param alpha the significance level of the test'\n        ]\n    },\n    {\n        'tag': '@return true iff null hypothesis can be rejected with confidence 1 -\\nalpha',\n        'alternatives': [\n            '@return true if the null hypothesis can be rejected with confidence 1 -\\nalpha',\n            '@return true if the rejection of the null hypothesis is possible with a confidence level of 1 -\\nalpha',\n            '@return true if the null hypothesis can be rejected with a confidence level of 1 -\\nalpha'\n        ]\n    },\n    {\n        'tag': '@throws DimensionMismatchException the the length of the arrays does not\\nmatch',\n        'alternatives': [\n            '@throws DimensionMismatchException if the arrays have different lengths',\n            '@throws DimensionMismatchException when the lengths of the arrays do not match',\n            '@throws DimensionMismatchException if the length of the arrays is not the same'\n        ]\n    },\n    {\n        'tag': '@throws NotPositiveException if any of the entries in {@code observed1} or\\n{@code observed2} are negative',\n        'alternatives': [\n            '@throws NotPositiveException if any element in {@code observed1} or\\n{@code observed2} is negative',\n            '@throws NotPositiveException when any of the entries in {@code observed1} or\\n{@code observed2} is negative',\n            '@throws NotPositiveException if there is any negative entry in either {@code observed1} or\\n{@code observed2}'\n        ]\n    },\n    {\n        'tag': '@throws ZeroException if either all counts of {@code observed1} or\\n{@code observed2} are zero, or if the count at some index is\\nzero for both arrays',\n        'alternatives': [\n            '@throws ZeroException if all counts in either {@code observed1} or {@code observed2} are zero, or if the count at some index is\\nzero for both arrays',\n            '@throws ZeroException when either all counts of {@code observed1} or {@code observed2} are zero, or if the count at some index is\\nzero for both arrays',\n            '@throws ZeroException if all counts of either {@code observed1} or {@code observed2} are zero, or if the count at some index is\\nzero for both arrays'\n        ]\n    },\n    {\n        'tag': '@throws OutOfRangeException if {@code alpha} is not in the range\\n(0, 0.5]',\n        'alternatives': [\n            '@throws OutOfRangeException if {@code alpha} is outside the valid range of (0, 0.5]',\n            '@throws OutOfRangeException when {@code alpha} is not within the range of (0, 0.5]',\n            '@throws OutOfRangeException if the value of {@code alpha} is not within the valid range of (0, 0.5]'\n        ]\n    },\n    {\n        'tag': '@throws MaxCountExceededException if an error occurs performing the test',\n        'alternatives': [\n            '@throws MaxCountExceededException if there is an error during the test execution',\n            '@throws MaxCountExceededException when the test execution exceeds the maximum count',\n            '@throws MaxCountExceededException if an error is encountered while performing the test'\n        ]\n    },\n    {\n        'tag': '@param x first sample',\n        'alternatives': [\n            '@param x the initial sample',\n            '@param x the first set of data',\n            '@param x the first data sample'\n        ]\n    }\n]"