"output = [\n  {\n    'tag': '@param <I> the input type',\n    'alternatives': [\n      '@param <I> the type of the input',\n      '@param <I> the type of the input data',\n      '@param <I> the type of the input parameter',\n      '@param <I> the type for the input',\n      '@param <I> the type expected for the input'\n    ]\n  },\n  {\n    'tag': '@param <O> the output type',\n    'alternatives': [\n      '@param <O> the type of the output',\n      '@param <O> the type of the output data',\n      '@param <O> the type of the result',\n      '@param <O> the type for the output',\n      '@param <O> the type expected for the output'\n    ]\n  },\n  {\n    'tag': '@throws IllegalArgumentException if {@code expectedSize} is negative',\n    'alternatives': [\n      '@throws IllegalArgumentException when {@code expectedSize} is a negative value',\n      '@throws IllegalArgumentException if the value of {@code expectedSize} is negative',\n      '@throws IllegalArgumentException in case of a negative {@code expectedSize}',\n      '@throws IllegalArgumentException if the provided {@code expectedSize} is negative',\n      '@throws IllegalArgumentException if the {@code expectedSize} parameter is negative'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if {@code elements} or any of its contents is\\n     null',\n    'alternatives': [\n      '@throws NullPointerException when {@code elements} or any of its contents is null',\n      '@throws NullPointerException if {@code elements} or any element inside it is null',\n      '@throws NullPointerException if any element inside {@code elements} is null',\n      '@throws NullPointerException in case {@code elements} or any of its contents are null',\n      '@throws NullPointerException if either {@code elements} or any of its contents is null'\n    ]\n  },\n  {\n    'tag': '@throws UnsupportedOperationException always',\n    'alternatives': [\n      '@throws UnsupportedOperationException under all circumstances',\n      '@throws UnsupportedOperationException in every situation',\n      '@throws UnsupportedOperationException at all times',\n      '@throws UnsupportedOperationException under any circumstance',\n      '@throws UnsupportedOperationException without exception'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if {@code comparator} is null',\n    'alternatives': [\n      '@throws NullPointerException when {@code comparator} is null',\n      '@throws NullPointerException if the value of {@code comparator} is null',\n      '@throws NullPointerException in case {@code comparator} is null',\n      '@throws NullPointerException if the provided {@code comparator} is null',\n      '@throws NullPointerException if the {@code comparator} parameter is null'\n    ]\n  },\n  {\n    'tag': '@throws IllegalArgumentException if {@code map} is not empty',\n    'alternatives': [\n      '@throws IllegalArgumentException when {@code map} is not empty',\n      '@throws IllegalArgumentException if {@code map} contains any elements',\n      '@throws IllegalArgumentException in case {@code map} is not empty',\n      '@throws IllegalArgumentException if the provided {@code map} is not empty',\n      '@throws IllegalArgumentException if the {@code map} parameter is not empty'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if {@code sets}, any one of the {@code sets},\\n    or any element of a provided set is null',\n    'alternatives': [\n      '@throws NullPointerException when {@code sets}, any of the {@code sets}, or any element of a given set is null',\n      '@throws NullPointerException if {@code sets}, any of the {@code sets}, or any element in a provided set is null',\n      '@throws NullPointerException in case either {@code sets}, any of the {@code sets}, or any element in a provided set is null',\n      '@throws NullPointerException if either {@code sets}, any of the {@code sets}, or any element of a provided set is null',\n      '@throws NullPointerException if the {@code sets}, any of the {@code sets}, or any element in a provided set is null'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if {@code set} is or contains {@code null}',\n    'alternatives': [\n      '@throws NullPointerException when {@code set} is null or contains {@code null}',\n      '@throws NullPointerException if {@code set} is null or if it contains {@code null}',\n      '@throws NullPointerException in case {@code set} is null or contains {@code null}',\n      '@throws NullPointerException if either {@code set} is null or it contains {@code null}',\n      '@throws NullPointerException if the {@code set} parameter is null or contains {@code null}'\n    ]\n  },\n  {\n    'tag': '@throws IllegalArgumentException if {@code expectedRows} or {@code\\n    expectedCellsPerRow} is negative',\n    'alternatives': [\n      '@throws IllegalArgumentException when either {@code expectedRows} or {@code expectedCellsPerRow} is negative',\n      '@throws IllegalArgumentException if {@code expectedRows} or {@code expectedCellsPerRow} has a negative value',\n      '@throws IllegalArgumentException in case either {@code expectedRows} or {@code expectedCellsPerRow} is negative',\n      '@throws IllegalArgumentException if either {@code expectedRows} or {@code expectedCellsPerRow} is a negative number',\n      '@throws IllegalArgumentException if the {@code expectedRows} or {@code expectedCellsPerRow} parameter is negative'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if {@code reference} is null',\n    'alternatives': [\n      '@throws NullPointerException when {@code reference} is null',\n      '@throws NullPointerException if the value of {@code reference} is null',\n      '@throws NullPointerException in case {@code reference} is null',\n      '@throws NullPointerException if the provided {@code reference} is null',\n      '@throws NullPointerException if the {@code reference} parameter is null'\n    ]\n  },\n  {\n    'tag': '@throws IllegalArgumentException if {@code array} is empty',\n    'alternatives': [\n      '@throws IllegalArgumentException when {@code array} is empty',\n      '@throws IllegalArgumentException if {@code array} contains no elements',\n      '@throws IllegalArgumentException in case {@code array} is empty',\n      '@throws IllegalArgumentException if the provided {@code array} is empty',\n      '@throws IllegalArgumentException if the {@code array} parameter is empty'\n    ]\n  },\n  {\n    'tag': '@param array a <i>nonempty</i> array of {@code int} values',\n    'alternatives': [\n      '@param array an array of {@code int} values that is <i>not empty</i>',\n      '@param array a nonempty array of {@code int} values',\n      '@param array an array of {@code int} values with no empty elements',\n      '@param array a <i>nonempty</i> array containing {@code int} values',\n      '@param array a <i>nonempty</i> array that holds {@code int} values'\n    ]\n  },\n  {\n    'tag': '@throws IllegalArgumentException if {@code minLength} or {@code padding} is\\n    negative',\n    'alternatives': [\n      '@throws IllegalArgumentException when either {@code minLength} or {@code padding} is negative',\n      '@throws IllegalArgumentException if {@code minLength} or {@code padding} has a negative value',\n      '@throws IllegalArgumentException in case either {@code minLength} or {@code padding} is negative',\n      '@throws IllegalArgumentException if either {@code minLength} or {@code padding} is a negative number',\n      '@throws IllegalArgumentException if the {@code minLength} or {@code padding} parameter is negative'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if {@code collection} or any of its elements\\n    is null',\n    'alternatives': [\n      '@throws NullPointerException when {@code collection} or any of its elements is null',\n      '@throws NullPointerException if {@code collection} or any element inside it is null',\n      '@throws NullPointerException if any element inside {@code collection} is null',\n      '@throws NullPointerException in case {@code collection} or any of its elements are null',\n      '@throws NullPointerException if either {@code collection} or any of its elements is null'\n    ]\n  },\n  {\n    'tag': '@throws IllegalArgumentException if {@code expectedKeys} or {@code\\n     expectedValuesPerKey} is negative',\n    'alternatives': [\n      '@throws IllegalArgumentException when either {@code expectedKeys} or {@code expectedValuesPerKey} is negative',\n      '@throws IllegalArgumentException if {@code expectedKeys} or {@code expectedValuesPerKey} has a negative value',\n      '@throws IllegalArgumentException in case either {@code expectedKeys} or {@code expectedValuesPerKey} is negative',\n      '@throws IllegalArgumentException if either {@code expectedKeys} or {@code expectedValuesPerKey} is a negative number',\n      '@throws IllegalArgumentException if the {@code expectedKeys} or {@code expectedValuesPerKey} parameter is negative'\n    ]\n  }\n]"