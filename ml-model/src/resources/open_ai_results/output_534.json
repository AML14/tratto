"[\n  {\n    'tag': '@param dest SynchronizedSummaryStatistics to copy to',\n    'alternatives': [\n      '@param dest SynchronizedSummaryStatistics to copy',\n      '@param dest the destination SynchronizedSummaryStatistics for copying',\n      '@param dest the SynchronizedSummaryStatistics to be copied',\n      '@param dest SynchronizedSummaryStatistics to clone',\n      '@param dest the SynchronizedSummaryStatistics to duplicate'\n    ]\n  },\n  {\n    'tag': '@param original the {@code SynchronizedSummaryStatistics} instance to copy',\n    'alternatives': [\n      '@param original the instance of {@code SynchronizedSummaryStatistics} to be copied',\n      '@param original the {@code SynchronizedSummaryStatistics} instance that will be copied',\n      '@param original the instance of {@code SynchronizedSummaryStatistics} to duplicate',\n      '@param original the {@code SynchronizedSummaryStatistics} instance to be cloned',\n      '@param original the instance of {@code SynchronizedSummaryStatistics} to be replicated'\n    ]\n  },\n  {\n    'tag': '@param values input array',\n    'alternatives': [\n      '@param values array of input',\n      '@param values array passed as input',\n      '@param values input values array',\n      '@param values array of input values',\n      '@param values the input array'\n    ]\n  },\n  {\n    'tag': '@return the value of the statistic applied to the input array',\n    'alternatives': [\n      '@return the result of applying the statistic to the input array',\n      '@return the statistic value obtained from the input array',\n      '@return the computed statistic value using the input array',\n      '@return the value obtained by applying the statistic to the input array',\n      '@return the value resulted from applying the statistic to the input array'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values input array',\n      '@param values the array as input',\n      '@param values array as input',\n      '@param values input values',\n      '@param values the provided array'\n    ]\n  },\n  {\n    'tag': '@param begin the index of the first element to include',\n    'alternatives': [\n      '@param begin start index of the first element to include',\n      '@param begin the index of the initial element to include',\n      '@param begin the index where the inclusion of elements starts',\n      '@param begin the starting index for the inclusion of elements',\n      '@param begin index specifying the beginning element to include'\n    ]\n  },\n  {\n    'tag': '@param length the number of elements to include',\n    'alternatives': [\n      '@param length the count of elements to include',\n      '@param length the number of elements to be included',\n      '@param length the quantity of elements to include',\n      '@param length the size of the range of elements to include',\n      '@param length the total number of elements to include'\n    ]\n  },\n  {\n    'tag': '@return the value of the statistic applied to the included array entries',\n    'alternatives': [\n      '@return the statistic value obtained from the included array entries',\n      '@return the value resulting from applying the statistic to included array entries',\n      '@return the computed statistic value using the included array entries',\n      '@return the result of applying the statistic to the included array entries',\n      '@return the value obtained by applying the statistic to the included array entries'\n    ]\n  },\n  {\n    'tag': '@return a copy of the statistic',\n    'alternatives': [\n      '@return a duplicated instance of the statistic',\n      '@return a cloned copy of the statistic',\n      '@return a replicated version of the statistic',\n      '@return a duplicate of the statistic',\n      '@return a copy of the computed statistic'\n    ]\n  },\n  {\n    'tag': '@param p the percentile value to compute',\n    'alternatives': [\n      '@param p the value representing the percentile to calculate',\n      '@param p the value used for computing the percentile',\n      '@param p the value that specifies the percentile to be calculated',\n      '@param p the percentile value for the computation',\n      '@param p the value indicating the percentile to be computed'\n    ]\n  },\n  {\n    'tag': '@return the value of the statistic applied to the stored data',\n    'alternatives': [\n      '@return the statistic value obtained from the stored data',\n      '@return the value resulting from applying the statistic to the stored data',\n      '@return the computed statistic value using the stored data',\n      '@return the result of applying the statistic to the stored data',\n      '@return the value obtained by applying the statistic to the stored data'\n    ]\n  },\n  {\n    'tag': '@param values input array of values',\n    'alternatives': [\n      '@param values array of input values',\n      '@param values the input values array',\n      '@param values input values provided',\n      '@param values array containing input values',\n      '@param values array containing the given values'\n    ]\n  },\n  {\n    'tag': '@param p the percentile value to compute',\n    'alternatives': [\n      '@param p the value representing the percentile to calculate',\n      '@param p the value used for computing the percentile',\n      '@param p the value that specifies the percentile to be calculated',\n      '@param p the percentile value for the computation',\n      '@param p the value indicating the percentile to be computed'\n    ]\n  },\n  {\n    'tag': '@return the percentile value or Double.NaN if the array is empty',\n    'alternatives': [\n      '@return the value of the percentile or Double.NaN if the array is empty',\n      '@return the computed percentile value or Double.NaN if the array has no elements',\n      '@return the percentile value obtained or Double.NaN if the array is empty',\n      '@return the result of calculating the percentile or Double.NaN if the array is empty',\n      '@return the value representing the percentile or Double.NaN when the array is empty'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values input array',\n      '@param values the array as input',\n      '@param values provided array',\n      '@param values input values',\n      '@param values the given array'\n    ]\n  },\n  {\n    'tag': '@param start index of the first array element to include',\n    'alternatives': [\n      '@param start initial index of the first array element to include',\n      '@param start the index from which to begin including array elements',\n      '@param start the starting point for array element inclusion',\n      '@param start the index specifying the beginning array element to include',\n      '@param start index indicating the first array element to be included'\n    ]\n  },\n  {\n    'tag': '@param length the number of elements to include',\n    'alternatives': [\n      '@param length the count of elements to include',\n      '@param length the number of elements to be included',\n      '@param length the quantity of elements to include',\n      '@param length the size of the range of elements to include',\n      '@param length the total number of elements to include'\n    ]\n  },\n  {\n    'tag': '@return the percentile value',\n    'alternatives': [\n      '@return the value of the percentile',\n      '@return the calculated value for the percentile',\n      '@return the resulting percentile value',\n      '@return the value representing the computed percentile',\n      '@return the computed percentile'\n    ]\n  },\n  {\n    'tag': '@throws MathIllegalArgumentException if the parameters are not valid',\n    'alternatives': [\n      '@throws MathIllegalArgumentException when the parameters are invalid',\n      '@throws MathIllegalArgumentException if the provided arguments are not valid',\n      '@throws MathIllegalArgumentException if the arguments fail to meet the validity criteria',\n      '@throws MathIllegalArgumentException if the parameters do not comply with the requirements',\n      '@throws MathIllegalArgumentException when the arguments do not satisfy the validity conditions'\n    ]\n  },\n  {\n    'tag': '@param values array of input values',\n    'alternatives': [\n      '@param values input array',\n      '@param values the provided array',\n      '@param values array provided by the user',\n      '@param values input array of data',\n      '@param values array containing the given values'\n    ]\n  },\n  {\n    'tag': '@param p the percentile to compute',\n    'alternatives': [\n      '@param p the percentile value to calculate',\n      '@param p the value for computing the percentile',\n      '@param p the value indicating the percentile to be computed',\n      '@param p the specified percentile for the computation',\n      '@param p the value representing the percentile to be calculated'\n    ]\n  },\n  {\n    'tag': '@param begin the first (0-based) element to include in the computation',\n    'alternatives': [\n      '@param begin the initial element to include (0-based) for the computation',\n      '@param begin the starting (0-based) array element for computation inclusion',\n      '@param begin the index of the first (0-based) element to be included in the computation',\n      '@param begin the (0-based) index indicating the beginning element to include in the computation',\n      '@param begin the (0-based) index of the first element to include in the computation'\n    ]\n  },\n  {\n    'tag': '@param length the number of array elements to include',\n    'alternatives': [\n      '@param length the count of array elements to include',\n      '@param length the number of elements to be included in the array',\n      '@param length the quantity of array elements to include',\n      '@param length the size of the range of array elements to include',\n      '@param length the total number of elements to be included in the array'\n    ]\n  },\n  {\n    'tag': '@return the percentile value',\n    'alternatives': [\n      '@return the value of the percentile',\n      '@return the calculated value for the percentile',\n      '@return the resulting percentile value',\n      '@return the value representing the computed percentile',\n      '@return the computed percentile'\n    ]\n  },\n  {\n    'tag': '@throws MathIllegalArgumentException if the parameters are not valid or the\\ninput array is null',\n    'alternatives': [\n      '@throws MathIllegalArgumentException when the arguments are invalid or the\\ninput array is null',\n      '@throws MathIllegalArgumentException if the provided arguments are not valid or the\\ninput array is null',\n      '@throws MathIllegalArgumentException if the arguments fail to meet the validity criteria or the\\ninput array is null',\n      '@throws MathIllegalArgumentException if the parameters do not comply with the requirements or the\\ninput array is null',\n      '@throws MathIllegalArgumentException when the arguments do not satisfy the validity conditions or the\\ninput array is null'\n    ]\n  }\n]"