"output = [\n  {\n    'tag': '@param primary array containing the current value of the primary state vector',\n    'alternatives': [\n      '@param primary array containing the current value of the primary state vector',\n      '@param primary array holding the current value of the primary state vector',\n      '@param primary array that contains the current value of the primary state vector'\n    ]\n  },\n  {\n    'tag': '@param primaryDot array containing the derivative of the primary state vector',\n    'alternatives': [\n      '@param primaryDot array containing the derivative of the primary state vector',\n      '@param primaryDot array holding the derivative of the primary state vector',\n      '@param primaryDot array that contains the derivative of the primary state vector'\n    ]\n  },\n  {\n    'tag': '@param secondary array containing the current value of the secondary state vector',\n    'alternatives': [\n      '@param secondary array containing the current value of the secondary state vector',\n      '@param secondary array holding the current value of the secondary state vector',\n      '@param secondary array that contains the current value of the secondary state vector'\n    ]\n  },\n  {\n    'tag': '@return derivative of the secondary state vector',\n    'alternatives': [\n      '@return derivative of the secondary state vector',\n      '@return the derivative of the secondary state vector',\n      '@return secondary state vector derivative'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n      '@throws MaxCountExceededException when the number of functions evaluations is exceeded',\n      '@throws MaxCountExceededException if the count of function evaluations exceeds the maximum'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if arrays dimensions do not match equations settings',\n    'alternatives': [\n      '@throws DimensionMismatchException if arrays dimensions do not match equations settings',\n      '@throws DimensionMismatchException when arrays dimensions do not align with equations settings',\n      '@throws DimensionMismatchException if dimensions of arrays do not match equation settings'\n    ]\n  },\n  {\n    'tag': '@param t current value of the independent <I>time</I> variable',\n    'alternatives': [\n      '@param t current value of the independent <I>time</I> variable',\n      '@param t current value of the independent time variable',\n      '@param t current value of the time variable'\n    ]\n  },\n  {\n    'tag': '@param y array containing the current value of the main state vector',\n    'alternatives': [\n      '@param y array containing the current value of the main state vector',\n      '@param y array holding the current value of the main state vector',\n      '@param y array that contains the current value of the main state vector'\n    ]\n  },\n  {\n    'tag': '@param yDot array containing the current value of the time derivative of the main state vector',\n    'alternatives': [\n      '@param yDot array containing the current value of the time derivative of the main state vector',\n      '@param yDot array holding the current value of the time derivative of the main state vector',\n      '@param yDot array that contains the current value of the time derivative of the main state vector'\n    ]\n  },\n  {\n    'tag': '@param dFdY placeholder array where to put the jacobian matrix of the ODE w.r.t. the main state vector',\n    'alternatives': [\n      '@param dFdY placeholder array where to put the jacobian matrix of the ODE w.r.t. the main state vector',\n      '@param dFdY placeholder array to store the jacobian matrix of the ODE with respect to the main state vector',\n      '@param dFdY placeholder array for the jacobian matrix of the ODE in relation to the main state vector'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n      '@throws MaxCountExceededException when the number of functions evaluations surpasses the limit',\n      '@throws MaxCountExceededException if the count of function evaluations exceeds the maximum'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if arrays dimensions do not match equations settings',\n    'alternatives': [\n      '@throws DimensionMismatchException if arrays dimensions do not match equations settings',\n      '@throws DimensionMismatchException when arrays dimensions do not align with equations settings',\n      '@throws DimensionMismatchException if dimensions of arrays do not match equation settings'\n    ]\n  },\n  {\n    'tag': '@return dimension of the secondary state parameters',\n    'alternatives': [\n      '@return dimension of the secondary state parameters',\n      '@return the dimension of the secondary state parameters',\n      '@return the secondary state parameters dimension'\n    ]\n  },\n  {\n    'tag': '@param t current value of the independent <I>time</I> variable',\n    'alternatives': [\n      '@param t current value of the independent <I>time</I> variable',\n      '@param t current value of the independent time variable',\n      '@param t current value of the time variable'\n    ]\n  },\n  {\n    'tag': '@param primary array containing the current value of the primary state vector',\n    'alternatives': [\n      '@param primary array containing the current value of the primary state vector',\n      '@param primary array holding the current value of the primary state vector',\n      '@param primary array that contains the current value of the primary state vector'\n    ]\n  },\n  {\n    'tag': '@param primaryDot array containing the derivative of the primary state vector',\n    'alternatives': [\n      '@param primaryDot array containing the derivative of the primary state vector',\n      '@param primaryDot array holding the derivative of the primary state vector',\n      '@param primaryDot array that contains the derivative of the primary state vector'\n    ]\n  },\n  {\n    'tag': '@param secondary array containing the current value of the secondary state vector',\n    'alternatives': [\n      '@param secondary array containing the current value of the secondary state vector',\n      '@param secondary array holding the current value of the secondary state vector',\n      '@param secondary array that contains the current value of the secondary state vector'\n    ]\n  },\n  {\n    'tag': '@param secondaryDot placeholder array where to put the derivative of the secondary state vector',\n    'alternatives': [\n      '@param secondaryDot placeholder array where to put the derivative of the secondary state vector',\n      '@param secondaryDot placeholder array to store the derivative of the secondary state vector',\n      '@param secondaryDot placeholder array for the derivative of the secondary state vector'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n      '@throws MaxCountExceededException when the number of functions evaluations surpasses the limit',\n      '@throws MaxCountExceededException if the count of function evaluations exceeds the maximum'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if arrays dimensions do not match equations settings',\n    'alternatives': [\n      '@throws DimensionMismatchException if arrays dimensions do not match equations settings',\n      '@throws DimensionMismatchException when arrays dimensions do not align with equations settings',\n      '@throws DimensionMismatchException if dimensions of arrays do not match equation settings'\n    ]\n  },\n  {\n    'tag': '@return name of the method',\n    'alternatives': [\n      '@return name of the method',\n      '@return the name of the method',\n      '@return method name'\n    ]\n  },\n  {\n    'tag': '@param handler handler for the accepted steps',\n    'alternatives': [\n      '@param handler handler for the accepted steps',\n      '@param handler for the accepted steps',\n      '@param accepted steps handler'\n    ]\n  },\n  {\n    'tag': '@return an unmodifiable collection of the added events handlers',\n    'alternatives': [\n      '@return an unmodifiable collection of the added events handlers',\n      '@return an unmodifiable collection of the added event handlers',\n      '@return the added events handlers in an unmodifiable collection'\n    ]\n  },\n  {\n    'tag': '@param handler event handler',\n    'alternatives': [\n      '@param handler event handler',\n      '@param event handler',\n      '@param handler for the event'\n    ]\n  },\n  {\n    'tag': '@param maxCheckInterval maximal time interval between switching\\nfunction checks (this interval prevents missing sign changes in\\ncase the integration steps becomes very large)',\n    'alternatives': [\n      '@param maxCheckInterval maximal time interval between switching\\nfunction checks (this interval prevents missing sign changes in\\ncase the integration steps becomes very large)',\n      '@param maxCheckInterval maximum time interval between switching\\nfunction checks (to prevent missing sign changes in\\ncase the integration steps become very large)',\n      '@param maxCheckInterval the maximum time interval between switching\\nfunction checks (to avoid missing sign changes in\\ncase the integration steps become very large)'\n    ]\n  }\n]"