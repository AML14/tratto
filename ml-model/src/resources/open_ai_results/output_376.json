"[\n  {\n    \"tag\": \"@throws MathIllegalStateException if data has already been added\\n (i.e if n > 0)\",\n    \"alternatives\": [\n      \"@throws MathIllegalStateException if data has previously been included\\n (i.e if n > 0)\",\n      \"@throws MathIllegalStateException if data has been added before\\n (i.e if n > 0)\",\n      \"@throws MathIllegalStateException if data has already been inserted\\n (i.e if n > 0)\",\n      \"@throws MathIllegalStateException if data has been previously included\\n (i.e if n > 0)\",\n      \"@throws MathIllegalStateException if data has been added already\\n (i.e if n > 0)\"\n    ]\n  },\n  {\n    \"tag\": \"@return the StorelessUnivariateStatistic implementing the log sum\",\n    \"alternatives\": [\n      \"@return the StorelessUnivariateStatistic that implements the logarithmic sum\",\n      \"@return the StorelessUnivariateStatistic which represents the log sum implementation\",\n      \"@return the implementation of StorelessUnivariateStatistic for log sum\",\n      \"@return the log sum implementation of StorelessUnivariateStatistic\",\n      \"@return the StorelessUnivariateStatistic that calculates the log sum\"\n    ]\n  },\n  {\n    \"tag\": \"@param source GeometricMean to copy\",\n    \"alternatives\": [\n      \"@param source GeometricMean instance to duplicate\",\n      \"@param source GeometricMean object to replicate\",\n      \"@param GeometricMean source to be cloned\",\n      \"@param GeometricMean source to be copied\",\n      \"@param source GeometricMean to be replicated\"\n    ]\n  },\n  {\n    \"tag\": \"@param dest GeometricMean to copy to\",\n    \"alternatives\": [\n      \"@param dest GeometricMean instance to copy to\",\n      \"@param dest GeometricMean object to be duplicated\",\n      \"@param GeometricMean destination to be cloned\",\n      \"@param GeometricMean destination to receive the copy\",\n      \"@param destination GeometricMean to be replicated to\"\n    ]\n  },\n  {\n    \"tag\": \"@throws MathIllegalStateException if data has been added to this statistic\",\n    \"alternatives\": [\n      \"@throws MathIllegalStateException if data has been included in this statistic\",\n      \"@throws MathIllegalStateException if data has already been inserted into this statistic\",\n      \"@throws MathIllegalStateException if data has been added to this statistical calculation\",\n      \"@throws MathIllegalStateException if data has previously been included in this statistic\",\n      \"@throws MathIllegalStateException if data has been added to this statistical summary\"\n    ]\n  },\n  {\n    \"tag\": \"@param original the {@code GeometricMean} instance to copy\",\n    \"alternatives\": [\n      \"@param original the instance of {@code GeometricMean} to be duplicated\",\n      \"@param original the {@code GeometricMean} object to replicate\",\n      \"@param original the {@code GeometricMean} instance to be cloned\",\n      \"@param original the {@code GeometricMean} object to copy\",\n      \"@param original the {@code GeometricMean} to be replicated\"\n    ]\n  },\n  {\n    \"tag\": \"@param sumOfLogs sum of logs instance to use for computation\",\n    \"alternatives\": [\n      \"@param sumOfLogs instance of the sum of logarithms used for computation\",\n      \"@param sumOfLogs object representing the sum of logarithms for calculation\",\n      \"@param sumOfLogs instance to be utilized for computing\",\n      \"@param sumOfLogs object to use in the computation process\",\n      \"@param sumOfLogs the sum of logarithms to be used in calculations\"\n    ]\n  },\n  {\n    \"tag\": \"@param values the input array\",\n    \"alternatives\": [\n      \"@param values the array of inputs\",\n      \"@param values the array used as input\",\n      \"@param values the input data array\",\n      \"@param values the array that serves as input\",\n      \"@param values the array of data to be processed\"\n    ]\n  },\n  {\n    \"tag\": \"@return the standard deviation of the values or Double.NaN if length = 0\",\n    \"alternatives\": [\n      \"@return the standard deviation of the provided values or Double.NaN if length is 0\",\n      \"@return the standard deviation calculated from the values or Double.NaN if length is 0\",\n      \"@return the deviation from the mean of the values or Double.NaN if length is 0\",\n      \"@return the standard deviation of the given values or Double.NaN if length is 0\",\n      \"@return the standard deviation derived from the values or Double.NaN if length is 0\"\n    ]\n  },\n  {\n    \"tag\": \"@param values the input array\",\n    \"alternatives\": [\n      \"@param values the array of inputs\",\n      \"@param values the array used as input\",\n      \"@param values the input data array\",\n      \"@param values the array that serves as input\",\n      \"@param values the array of data to be processed\"\n    ]\n  },\n  {\n    \"tag\": \"@param begin index of the first array element to include\",\n    \"alternatives\": [\n      \"@param begin starting index of the array element to be included\",\n      \"@param begin index of the first element in the array to incorporate\",\n      \"@param begin position in the array indicating the first element to consider\",\n      \"@param begin index of the initial value in the array to be taken into account\",\n      \"@param begin location in the array denoting the first element to include\"\n    ]\n  },\n  {\n    \"tag\": \"@param length the number of elements to include\",\n    \"alternatives\": [\n      \"@param length number of elements to be incorporated\",\n      \"@param length quantity of elements to include\",\n      \"@param length total count of elements to take into consideration\",\n      \"@param length the size of the section to be included\",\n      \"@param length the number of elements to encompass\"\n    ]\n  },\n  {\n    \"tag\": \"@return the standard deviation of the values or Double.NaN if length = 0\",\n    \"alternatives\": [\n      \"@return the standard deviation of the provided values or Double.NaN if the length is 0\",\n      \"@return the standard deviation calculated from the values or Double.NaN if the length is 0\",\n      \"@return the deviation from the mean of the values or Double.NaN if the length is 0\",\n      \"@return the standard deviation of the given values or Double.NaN if the length is 0\",\n      \"@return the standard deviation derived from the values or Double.NaN if the length is 0\"\n    ]\n  },\n  {\n    \"tag\": \"@param values the input array\",\n    \"alternatives\": [\n      \"@param values the array of inputs\",\n      \"@param values the array used as input\",\n      \"@param values the input data array\",\n      \"@param values the array that serves as input\",\n      \"@param values the array of data to be processed\"\n    ]\n  },\n  {\n    \"tag\": \"@param mean the precomputed mean value\",\n    \"alternatives\": [\n      \"@param mean the previously calculated mean value\",\n      \"@param mean the mean value that was computed beforehand\",\n      \"@param mean the pre-calculated average value\",\n      \"@param mean the mean value that has been pre-computed\",\n      \"@param mean the mean value calculated in advance\"\n    ]\n  },\n  {\n    \"tag\": \"@param begin index of the first array element to include\",\n    \"alternatives\": [\n      \"@param begin starting index of the array element to be included\",\n      \"@param begin index of the first element in the array to incorporate\",\n      \"@param begin position in the array indicating the first element to consider\",\n      \"@param begin index of the initial value in the array to be taken into account\",\n      \"@param begin location in the array denoting the first element to include\"\n    ]\n  },\n  {\n    \"tag\": \"@param length the number of elements to include\",\n    \"alternatives\": [\n      \"@param length number of elements to be incorporated\",\n      \"@param length quantity of elements to include\",\n      \"@param length total count of elements to take into consideration\",\n      \"@param length the size of the section to be included\",\n      \"@param length the number of elements to encompass\"\n    ]\n  },\n  {\n    \"tag\": \"@return the standard deviation of the values or Double.NaN if length = 0\",\n    \"alternatives\": [\n      \"@return the standard deviation of the provided values or Double.NaN if length is equal to 0\",\n      \"@return the standard deviation calculated from the values or Double.NaN if length equals 0\",\n      \"@return the deviation from the mean of the values or Double.NaN if length is 0\",\n      \"@return the standard deviation of the given values or Double.NaN if the length is 0\",\n      \"@return the standard deviation derived from the values or Double.NaN if the length is 0\"\n    ]\n  },\n  {\n    \"tag\": \"@param values the input array\",\n    \"alternatives\": [\n      \"@param values the array of inputs\",\n      \"@param values the array used as input\",\n      \"@param values the input data array\",\n      \"@param values the array that serves as input\",\n      \"@param values the array of data to be processed\"\n    ]\n  },\n  {\n    \"tag\": \"@param mean the precomputed mean value\",\n    \"alternatives\": [\n      \"@param mean the previously calculated mean value\",\n      \"@param mean the mean value that was computed beforehand\",\n      \"@param mean the pre-calculated average value\",\n      \"@param mean the mean value that has been pre-computed\",\n      \"@param mean the mean value calculated in advance\"\n    ]\n  },\n  {\n    \"tag\": \"@return the standard deviation of the values or Double.NaN if length = 0\",\n    \"alternatives\": [\n      \"@return the standard deviation of the provided values or Double.NaN if length equals 0\",\n      \"@return the standard deviation calculated from the values or Double.NaN if the length is 0\",\n      \"@return the deviation from the mean of the values or Double.NaN if the length is 0\",\n      \"@return the standard deviation of the given values or Double.NaN if length is 0\",\n      \"@return the standard deviation derived from the values or Double.NaN if length is 0\"\n    ]\n  },\n  {\n    \"tag\": \"@return Returns the isBiasCorrected.\",\n    \"alternatives\": [\n      \"@return Returns the isBiasCorrected value.\",\n      \"@return Retrieves the value of isBiasCorrected.\",\n      \"@return Gets the current isBiasCorrected status.\",\n      \"@return Obtains the state of isBiasCorrected.\",\n      \"@return Retrieves the isBiasCorrected property.\"\n    ]\n  },\n  {\n    \"tag\": \"@param isBiasCorrected The isBiasCorrected to set.\",\n    \"alternatives\": [\n      \"@param isBiasCorrected Set the value of isBiasCorrected.\",\n      \"@param isBiasCorrected Define the isBiasCorrected property.\",\n      \"@param isBiasCorrected Assign a value to isBiasCorrected.\",\n      \"@param isBiasCorrected Specify the isBiasCorrected value to be set.\",\n      \"@param isBiasCorrected Update the isBiasCorrected property.\"\n    ]\n  },\n  {\n    \"tag\": \"@param source StandardDeviation to copy\",\n    \"alternatives\": [\n      \"@param source StandardDeviation instance to duplicate\",\n      \"@param source StandardDeviation object to replicate\",\n      \"@param StandardDeviation source to be cloned\",\n      \"@param StandardDeviation source to be copied\",\n      \"@param source StandardDeviation to be replicated\"\n    ]\n  },\n  {\n    \"tag\": \"@param dest StandardDeviation to copy to\",\n    \"alternatives\": [\n      \"@param dest StandardDeviation instance to copy to\",\n      \"@param dest StandardDeviation object to be duplicated\",\n      \"@param StandardDeviation destination to be cloned\",\n      \"@param StandardDeviation destination to receive the copy\",\n      \"@param destination StandardDeviation to be replicated to\"\n    ]\n  }\n]"