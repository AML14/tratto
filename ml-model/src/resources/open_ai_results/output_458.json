"output=[\n  { 'tag': '@return {@code true} if this map contains a mapping for the specified\\n        key.',\n    'alternatives': ['@return {@code true} if this map has a mapping for the specific\\n        key.',\n                     '@return {@code true} if this map holds a mapping for the given\\n        key.',\n                     '@return {@code true} if this map includes a mapping for the provided\\n        key.',\n                     '@return {@code true} if this map stores a mapping for the indicated\\n        key.']},\n  { 'tag': '@throws ClassCastException if the key is of an inappropriate type for\\n        this map (optional).',\n    'alternatives': ['@throws ClassCastException if the key has an unsuitable type for\\n        this map (optional).',\n                     '@throws ClassCastException if the key is of a type not suitable for\\n        this map (optional).',\n                     '@throws ClassCastException if the key does not have a valid type for\\n        this map (optional).',\n                     '@throws ClassCastException if the key's type is not appropriate for\\n        this map (optional).']},\n  { 'tag': '@param value value whose presence in this map is to be tested.',\n    'alternatives': ['@param value the value to check for its presence in this map.',\n                     '@param value the value that needs to be checked if it exists in\\n        this map.',\n                     '@param value the value that will be examined for its existence in\\n        this map.',\n                     '@param value the specific value that should be tested for presence\\n        in this map.']},\n  { 'tag': '@return {@code true} if this map maps one or more keys to the\\n        specified value.',\n    'alternatives': ['@return {@code true} if this map associates one or more keys with the\\n        specified value.',\n                     '@return {@code true} if this map links one or more keys to the\\n        specified value.',\n                     '@return {@code true} if this map connects one or more keys to the\\n        specified value.',\n                     '@return {@code true} if this map relates one or more keys to the\\n        specified value.']},\n  { 'tag': '@throws ClassCastException if the value is of an inappropriate type for\\n        this map (optional).',\n    'alternatives': ['@throws ClassCastException if the value has an unsuitable type for\\n        this map (optional).',\n                     '@throws ClassCastException if the value is of a type not suitable for\\n        this map (optional).',\n                     '@throws ClassCastException if the value does not have a valid type for\\n        this map (optional).',\n                     '@throws ClassCastException if the value's type is not appropriate for\\n        this map (optional).']},\n  { 'tag': '@return a set view of the mappings contained in this map.',\n    'alternatives': ['@return a set representation of the mappings stored in this map.',\n                     '@return a set that displays the mappings contained in this map.',\n                     '@return a set perspective of the mappings held within this map.',\n                     '@return a set snapshot of the mappings present in this map.']},\n  { 'tag': '@param key key whose associated value is to be returned.',\n    'alternatives': ['@param key the key for which the associated value should be returned.',\n                     '@param key the key that is linked to the value to be returned.',\n                     '@param key the key that corresponds to the value to be retrieved.',\n                     '@param key the specific key whose associated value is needed.']},\n  { 'tag': '@throws ClassCastException if the key is of an inappropriate type for\\n        this map (optional).',\n    'alternatives': ['@throws ClassCastException if the key has an unsuitable type for\\n        this map (optional).',\n                     '@throws ClassCastException if the key is of a type not suitable for\\n        this map (optional).',\n                     '@throws ClassCastException if the key does not have a valid type for\\n        this map (optional).',\n                     '@throws ClassCastException if the key's type is not appropriate for\\n        this map (optional).']},\n  { 'tag': '@return {@code true} if this map contains no key-value mappings.',\n    'alternatives': ['@return {@code true} if this map has no key-value mappings.',\n                     '@return {@code true} if this map has no mappings between keys and\\n        values.',\n                     '@return {@code true} if this map does not contain any key-value\\n        mappings.',\n                     '@return {@code true} if this map does not associate any keys with\\n        values.']},\n  { 'tag': '@return a set view of the keys contained in this map.',\n    'alternatives': ['@return a set representation of the keys stored in this map.',\n                     '@return a set that displays the keys contained in this map.',\n                     '@return a set perspective of the keys held within this map.',\n                     '@return a set snapshot of the keys present in this map.']},\n  { 'tag': '@param key key with which the specified value is to be associated.',\n    'alternatives': ['@param key the key with which the given value will be associated.',\n                     '@param key the key that will be linked to the specified value.',\n                     '@param key the key that should be associated with the provided\\n        value.',\n                     '@param key the specific key that needs to be associated with the\\n        given value.']},\n  { 'tag': '@param value value to be associated with the specified key.',\n    'alternatives': ['@param value the value that will be associated with the specified\\n        key.',\n                     '@param value the value that should be linked to the indicated key.',\n                     '@param value the value that needs to be associated with the provided\\n        key.',\n                     '@param value the specific value that should be associated with the\\n        given key.']},\n  { 'tag': '@return previous value associated with specified key, or {@code null}\\n        if there was no mapping for key.  A {@code null} return can\\n        also indicate that the map previously associated {@code null}\\n        with the specified key, if the implementation supports\\n        {@code null} values.',\n    'alternatives': ['@return the previously associated value with the given key, or\\n        {@code null} if there was no mapping for the key.  A {@code null}\\n        return can also mean that the map previously associated\\n        {@code null} with the specified key, if the implementation\\n        allows for {@code null} values.',\n                     '@return the value that was previously linked to the specified key, or\\n        {@code null} if there was no mapping for the key.  A {@code null}\\n        return can also indicate that the map previously associated\\n        {@code null} with the given key, if the implementation supports\\n        {@code null} values.',\n                     '@return the value that was previously associated with the indicated\\n        key, or {@code null} if there was no mapping for the key.  A\\n        {@code null} return can also mean that the map previously\\n        associated {@code null} with the specified key, if the\\n        implementation allows for {@code null} values.',\n                     '@return the previous value that was associated with the provided key,\\n        or {@code null} if there was no mapping for the key.  A {@code null}\\n        return can also indicate that the map previously associated\\n        {@code null} with the given key, if the implementation supports\\n        {@code null} values.']},\n  { 'tag': '@throws UnsupportedOperationException if no MapMutator has been specified',\n    'alternatives': ['@throws UnsupportedOperationException if there is no specified\\n        MapMutator.',\n                     '@throws UnsupportedOperationException if a MapMutator has not been\\n        specified.',\n                     '@throws UnsupportedOperationException if there is no MapMutator\\n        provided.',\n                     '@throws UnsupportedOperationException if a MapMutator was not\\n        specified.',\n                     '@throws UnsupportedOperationException if no MapMutator is being\\n        used.']},\n  { 'tag': '@throws ClassCastException if the class of the specified key or value\\n           prevents it from being stored in this map.',\n    'alternatives': ['@throws ClassCastException if the specified key or value cannot be\\n           stored in this map due to its class.',\n                     '@throws ClassCastException if the class of the given key or value\\n           prevents it from being stored in this map.',\n                     '@throws ClassCastException if the class of the provided key or\\n           value does not allow it to be stored in this map.',\n                     '@throws ClassCastException if the type of the specified key or value\\n           prevents it from being stored in this map.',\n                     '@throws ClassCastException if the specified key or value has a class\\n           that prevents it from being stored in this map.']},\n  { 'tag': '@throws IllegalArgumentException if some aspect of this key or value\\n           prevents it from being stored in this map.',\n    'alternatives': ['@throws IllegalArgumentException if there is some aspect of the key\\n           or value that prevents it from being stored in this map.',\n                     '@throws IllegalArgumentException if either the key or the value has\\n           some aspect that prevents it from being stored in this map.',\n                     '@throws IllegalArgumentException if there is some characteristic of\\n           this key or value that prevents it from being stored in this map.',\n                     '@throws IllegalArgumentException if the key or value has some aspect\\n           that prevents it from being stored in this map.',\n                     '@throws IllegalArgumentException if there is some particularity of the\\n           key or the value that prevents it from being stored in this map.']},\n  { 'tag': '@throws NullPointerException this map does not permit {@code null}\\n           keys or values, and the specified key or value is\\n           {@code null}.',\n    'alternatives': ['@throws NullPointerException if this map does not allow {@code null}\\n           keys or values, and the given key or value is {@code null}.',\n                     '@throws NullPointerException if {@code null} keys or values are not\\n           allowed in this map, and the specified key or value is\\n           {@code null}.',\n                     '@throws NullPointerException if this map does not support {@code null}\\n           keys or values, and the provided key or value is\\n           {@code null}.',\n                     '@throws NullPointerException if {@code null} keys or values are not\\n           permitted by this map, and the indicated key or value is\\n           {@code null}.',\n                     '@throws NullPointerException if this map does not allow {@code null}\\n           keys or values, and the specified key or value is\\n           {@code null}.']},\n  { 'tag': '@param map Mappings to be stored in this map.',\n    'alternatives': ['@param map the mappings that will be stored in this map.',\n                     '@param map the mappings to be added to this map.',\n                     '@param map the mappings that need to be stored in this map.',\n                     '@param map the provided mappings to be stored in this map.']},\n  { 'tag': '@throws UnsupportedOperationException if the {@code putAll} method is\\n        not supported by this map.',\n    'alternatives': ['@throws UnsupportedOperationException if this map does not support\\n        the {@code putAll} method.',\n                     '@throws UnsupportedOperationException if the {@code putAll} method is\\n        not permitted by this map.',\n                     '@throws UnsupportedOperationException if the {@code putAll} method is\\n        not allowed in this map.',\n                     '@throws UnsupportedOperationException if this map does not allow for\\n        the {@code putAll} method.',\n                     '@throws UnsupportedOperationException if the {@code putAll} method is\\n        not enabled in this map.']},\n  { 'tag': '@throws ClassCastException if the class of a key or value in the\\n        specified map prevents it from being stored in this map.',\n    'alternatives': ['@throws ClassCastException if the key or value of any element in the\\n        specified map cannot be stored in this map due to its class.',\n                     '@throws ClassCastException if the class of a key or value in the\\n        given map prevents it from being stored in this map.',\n                     '@throws ClassCastException if the type of any key or value in the\\n        provided map prevents it from being stored in this map.',\n                     '@throws ClassCastException if the key or value of any entry in the\\n        indicated map cannot be stored in this map due to its class.',\n                     '@throws ClassCastException if the class of any key or value in the\\n        specified map prevents it from being stored in this map.']},\n  { 'tag': '@throws IllegalArgumentException some aspect of a key or value in the\\n        specified map prevents it from being stored in this map.',\n    'alternatives': ['@throws IllegalArgumentException if there is some aspect of a key\\n        or value in the given map preventing it from being stored in\\n        this map.',\n                     '@throws IllegalArgumentException if there is some characteristic of a\\n        key or value in the provided map that prevents it from being\\n        stored in this map.',\n                     '@throws IllegalArgumentException if a key or value in the indicated\\n        map has some aspect preventing it from being stored in this\\n        map.',\n                    "