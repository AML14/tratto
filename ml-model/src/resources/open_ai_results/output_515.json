"output = [\n  {\n    'tag': '@param yDotK slopes at the intermediate points',\n    'alternatives': [\n      '@param yDotK gradients at the intermediate points',\n      '@param yDotK derivatives at the intermediate points',\n      '@param yDotK rates at the intermediate points',\n      '@param yDotK changes at the intermediate points',\n      '@param yDotK variations at the intermediate points'\n    ]\n  },\n  {\n    'tag': '@param globalPreviousState start of the global step',\n    'alternatives': [\n      '@param globalPreviousState initial state',\n      '@param globalPreviousState previous state',\n      '@param globalPreviousState beginning of the global step',\n      '@param globalPreviousState state at the beginning',\n      '@param globalPreviousState initial condition'\n    ]\n  },\n  {\n    'tag': '@param globalCurrentState end of the global step',\n    'alternatives': [\n      '@param globalCurrentState final state',\n      '@param globalCurrentState state at the end',\n      '@param globalCurrentState result of the integration',\n      '@param globalCurrentState state at the completion',\n      '@param globalCurrentState outcome at the end'\n    ]\n  },\n  {\n    'tag': '@param mapper equations mapper for the all equations',\n    'alternatives': [\n      '@param mapper mapper for the equations',\n      '@param mapper equation mapper',\n      '@param mapper mapping for the equations',\n      '@param mapper equation converter',\n      '@param mapper equations transformer'\n    ]\n  },\n  {\n    'tag': '@return external weights for the high order method from Butcher array',\n    'alternatives': [\n      '@return external coefficients for the high order method from Butcher array',\n      '@return external factors for the high order method from Butcher array',\n      '@return external multipliers for the high order method from Butcher array',\n      '@return external scalars for the high order method from Butcher array',\n      '@return external parameters for the high order method from Butcher array'\n    ]\n  },\n  {\n    'tag': '@param equations differential equations to integrate',\n    'alternatives': [\n      '@param equations equations to be integrated differentially',\n      '@param equations equations to be subject to differential integration',\n      '@param equations equations for differential integration',\n      '@param equations differential equations for integration',\n      '@param equations equations requiring differential integration'\n    ]\n  },\n  {\n    'tag': '@param t0 initial time',\n    'alternatives': [\n      '@param t0 starting time',\n      '@param t0 time at the beginning',\n      '@param t0 initial timestamp',\n      '@param t0 time at the start',\n      '@param t0 reference time'\n    ]\n  },\n  {\n    'tag': '@param y0 initial value of the state vector at t0',\n    'alternatives': [\n      '@param y0 initial state value at t0',\n      '@param y0 starting state vector at t0',\n      '@param y0 value of the state vector at the beginning',\n      '@param y0 state vector at the initial time',\n      '@param y0 initial condition of the state vector at t0'\n    ]\n  },\n  {\n    'tag': '@param t target time for the integration\\n(can be set to a value smaller than {@code t0} for backward integration)',\n    'alternatives': [\n      '@param t integration target time\\n(can be smaller than {@code t0} for backward integration)',\n      '@param t time to which integration is performed\\n(can be less than {@code t0} for backward integration)',\n      '@param t desired time for the integration\\n(can be lower than {@code t0} for backward integration)',\n      '@param t time point to reach during the integration\\n(can be less than {@code t0} for backward integration)',\n      '@param t time expected to be achieved by the integration\\n(can be smaller than {@code t0} for backward integration)'\n    ]\n  },\n  {\n    'tag': '@return state vector at {@code t}',\n    'alternatives': [\n      '@return state array at {@code t}',\n      '@return vector of states at {@code t}',\n      '@return state values at {@code t}',\n      '@return state components at {@code t}',\n      '@return state variables at {@code t}'\n    ]\n  },\n  {\n    'tag': '@param field field to which the time and state vector elements belong',\n    'alternatives': [\n      '@param field field containing the time and state vector elements',\n      '@param field field of the time and state vector elements',\n      '@param field field associated with the time and state vector elements',\n      '@param field field for the time and state vector elements',\n      '@param field field that holds the time and state vector elements'\n    ]\n  },\n  {\n    'tag': '@param name name of the method',\n    'alternatives': [\n      '@param name method name',\n      '@param name identifier of the method',\n      '@param name method identifier',\n      '@param name method designation',\n      '@param name method title'\n    ]\n  },\n  {\n    'tag': '@param step integration step',\n    'alternatives': [\n      '@param step time step',\n      '@param step integration interval',\n      '@param step size of the integration step',\n      '@param step increment for the integration',\n      '@param step step length for the integration'\n    ]\n  },\n  {\n    'tag': '@param minStep minimal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n    'alternatives': [\n      '@param minStep minimum step (sign is unimportant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe less than this',\n      '@param minStep smallest step (sign does not matter, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n      '@param minStep minimum integration step (sign does not matter, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n      '@param minStep lower limit of the step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n      '@param minStep smallest allowed step (sign is negligible, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this'\n    ]\n  },\n  {\n    'tag': '@param maxStep maximal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n    'alternatives': [\n      '@param maxStep maximum step (sign is not important, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n      '@param maxStep largest step (sign does not matter, regardless of\\nintegration direction, forward or backward), the last step can\\nbe less than this',\n      '@param maxStep maximum integration step (sign does not matter, regardless of\\nintegration direction, forward or backward), the last step can\\nbe less than this',\n      '@param maxStep upper limit of the step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe less than this',\n      '@param maxStep largest allowable step (sign is negligible, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this'\n    ]\n  },\n  {\n    'tag': '@param scalAbsoluteTolerance allowed absolute error',\n    'alternatives': [\n      '@param scalAbsoluteTolerance permitted absolute error',\n      '@param scalAbsoluteTolerance acceptable absolute error',\n      '@param scalAbsoluteTolerance authorized absolute error',\n      '@param scalAbsoluteTolerance admissible absolute error',\n      '@param scalAbsoluteTolerance valid absolute error'\n    ]\n  },\n  {\n    'tag': '@param scalRelativeTolerance allowed relative error',\n    'alternatives': [\n      '@param scalRelativeTolerance permitted relative error',\n      '@param scalRelativeTolerance acceptable relative error',\n      '@param scalRelativeTolerance authorized relative error',\n      '@param scalRelativeTolerance admissible relative error',\n      '@param scalRelativeTolerance valid relative error'\n    ]\n  },\n  {\n    'tag': '@param vecAbsoluteTolerance allowed absolute error',\n    'alternatives': [\n      '@param vecAbsoluteTolerance permitted absolute error',\n      '@param vecAbsoluteTolerance acceptable absolute error',\n      '@param vecAbsoluteTolerance authorized absolute error',\n      '@param vecAbsoluteTolerance admissible absolute error',\n      '@param vecAbsoluteTolerance valid absolute error'\n    ]\n  },\n  {\n    'tag': '@param vecRelativeTolerance allowed relative error',\n    'alternatives': [\n      '@param vecRelativeTolerance permitted relative error',\n      '@param vecRelativeTolerance acceptable relative error',\n      '@param vecRelativeTolerance authorized relative error',\n      '@param vecRelativeTolerance admissible relative error',\n      '@param vecRelativeTolerance valid relative error'\n    ]\n  },\n  {\n    'tag': '@param interpolator interpolator to copy from. The copy is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n    'alternatives': [\n      '@param interpolator interpolator to duplicate from. The duplicate is a deep\\ncopy: its arrays are distinct from the original arrays of the\\ninstance',\n      '@param interpolator interpolator to replicate from. The replication is a deep\\ncopy: its arrays are separate from the original arrays of the\\ninstance',\n      '@param interpolator interpolator to mirror from. The mirrored version is a deep\\ncopy: its arrays are unconnected from the original arrays of the\\ninstance',\n      '@param interpolator interpolator to reproduce from. The reproduction is a deep\\ncopy: its arrays are detached from the original arrays of the\\ninstance',\n      '@param interpolator interpolator to clone from. The cloned version is a deep\\ncopy: its arrays are detached from the original arrays of the\\ninstance'\n    ]\n  },\n  {\n    'tag': '@param field field to which the time and state vector elements belong',\n    'alternatives': [\n      '@param field field containing the time and state vector elements',\n      '@param field field of the time and state vector elements',\n      '@param field field associated with the time and state vector elements',\n      '@param field field for the time and state vector elements',\n      '@param field field that holds the time and state vector elements'\n    ]\n  },\n  {\n    'tag': '@param forward integration direction indicator',\n    'alternatives': [\n      '@param forward indicator for integration direction',\n      '@param forward direction flag for integration',\n      '@param forward indicator for the integration direction',\n      '@param forward flag to specify integration direction',\n      '@param forward direction marker for integration'\n    ]\n  },\n  {\n    'tag': '@param yDotK slopes at the intermediate points',\n    'alternatives': [\n      '@param yDotK gradients at the intermediate points',\n      '@param yDotK derivatives at the intermediate points',\n      '@param yDotK rates at the intermediate points',\n      '@param yDotK changes at the intermediate points',\n      '@param yDotK variations at the intermediate points'\n    ]\n  }\n]"