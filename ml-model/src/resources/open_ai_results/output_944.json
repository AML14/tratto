"output = [\n  {\n    'tag': '@param tolerance tolerance below which points close to a cut hyperplane\\nare considered to belong to the hyperplane itself',\n    'alternatives': [\n      '@param tolerance tolerance beneath which points close to a severing hyperplane\\nare deemed to be part of the hyperplane itself',\n      '@param tolerance tolerance below which points near a dividing hyperplane\\nare treated as part of the hyperplane itself',\n      '@param tolerance tolerance below which points close to a partitioning hyperplane\\nare regarded as belonging to the hyperplane itself',\n      '@param tolerance tolerance below which points that are near a dividing hyperplane\\nare considered to be part of the hyperplane itself',\n      '@param tolerance tolerance below which points that are close to a dividing hyperplane\\nare treated as belonging to the hyperplane itself'\n    ]\n  },\n  {\n    'tag': '@return the tree cell to which the point belongs',\n    'alternatives': [\n      '@return the tree cell that the point belongs to',\n      '@return the cell in the tree to which the point belongs',\n      '@return the tree cell that contains the point',\n      '@return the cell in the tree that the point belongs to',\n      '@return the tree cell to which the point is assigned'\n    ]\n  },\n  {\n    'tag': '@param filename file name to appear in printed messages',\n    'alternatives': [\n      '@param filename name of the file to display in printed messages',\n      '@param filename name of the file to be shown in printed messages',\n      '@param filename name of the file to appear in printed messages',\n      '@param filename name of the file to be displayed in printed messages',\n      '@param filename name of the file that will be shown in printed messages'\n    ]\n  },\n  {\n    'tag': '@param is input stream from which to read classfile bytes to process',\n    'alternatives': [\n      '@param is input stream to read classfile bytes from for processing',\n      '@param is input stream used to read classfile bytes for processing',\n      '@param is input stream to be used for reading classfile bytes to process',\n      '@param is input stream for reading classfile bytes to process',\n      '@param is input stream that is used for reading classfile bytes for processing'\n    ]\n  },\n  {\n    'tag': '@param is input stream from which to read a class',\n    'alternatives': [\n      '@param is input stream to read a class from',\n      '@param is input stream used to read a class',\n      '@param is input stream to be used for reading a class',\n      '@param is input stream for reading a class',\n      '@param is input stream that is used for reading a class'\n    ]\n  },\n  {\n    'tag': '@return array of three version numbers',\n    'alternatives': [\n      '@return array containing three version numbers',\n      '@return an array of three version numbers',\n      '@return an array with three version numbers',\n      '@return array that holds three version numbers',\n      '@return an array consisting of three version numbers'\n    ]\n  },\n  {\n    'tag': '@param <A> type of first argument',\n    'alternatives': [\n      '@param <A> type of initial argument',\n      '@param <A> type of first parameter',\n      '@param <A> type of the first argument',\n      '@param <A> type for the first argument',\n      '@param <A> type of the initial argument'\n    ]\n  },\n  {\n    'tag': '@param <B> type of second argument',\n    'alternatives': [\n      '@param <B> type of subsequent argument',\n      '@param <B> type of second parameter',\n      '@param <B> type of the second argument',\n      '@param <B> type for the second argument',\n      '@param <B> type of the subsequent argument'\n    ]\n  },\n  {\n    'tag': '@param a first argument',\n    'alternatives': [\n      '@param a initial argument',\n      '@param a primary parameter',\n      '@param a the first argument',\n      '@param a the initial argument',\n      '@param a the primary parameter'\n    ]\n  },\n  {\n    'tag': '@param b second argument',\n    'alternatives': [\n      '@param b subsequent argument',\n      '@param b secondary parameter',\n      '@param b the second argument',\n      '@param b the subsequent argument',\n      '@param b the secondary parameter'\n    ]\n  },\n  {\n    'tag': '@return a WeakIdentityPair of (a, b)',\n    'alternatives': [\n      '@return a WeakIdentityPair containing (a, b)',\n      '@return a WeakIdentityPair consisting of (a, b)',\n      '@return a WeakIdentityPair with (a, b)',\n      '@return a WeakIdentityPair that has (a, b)',\n      '@return a WeakIdentityPair holding (a, b)'\n    ]\n  },\n  {\n    'tag': '@param root the root document',\n    'alternatives': [\n      '@param root the document root',\n      '@param root the main document',\n      '@param root the starting document',\n      '@param root the initial document',\n      '@param root the primary document'\n    ]\n  },\n  {\n    'tag': '@return true if processing completed without an error',\n    'alternatives': [\n      '@return true if processing finished with no error',\n      '@return true if processing was completed without any error',\n      '@return true if processing was done without any error',\n      '@return true if processing was performed without any error',\n      '@return true if processing ended without any error'\n    ]\n  },\n  {\n    'tag': '@param option the command-line option',\n    'alternatives': [\n      '@param option the option specified on the command line',\n      '@param option the option from the command line',\n      '@param option the command-line argument',\n      '@param option the given command-line option',\n      '@param option the provided command-line option'\n    ]\n  },\n  {\n    'tag': '@return the number of command-line arguments needed when using the option',\n    'alternatives': [\n      '@return the count of command-line arguments required for the option',\n      '@return the total of command-line arguments necessary when using the option',\n      '@return the quantity of command-line arguments that are needed when using the option',\n      '@return the number of command-line arguments that should be provided when using the option',\n      '@return the value of command-line arguments required when using the option'\n    ]\n  },\n  {\n    'tag': '@param options the command-line options to be checked: an array of 1- or 2-element arrays',\n    'alternatives': [\n      '@param options the command-line options that need to be verified: an array of arrays containing 1 or 2 elements',\n      '@param options the command-line options that should be validated: an array of arrays with 1 or 2 elements',\n      '@param options the command-line options to check: an array of arrays consisting of 1 or 2 elements',\n      '@param options the command-line options to be examined: an array of arrays comprising 1 or 2 elements',\n      '@param options the command-line options to verify: an array of arrays containing 1 or 2 elements'\n    ]\n  },\n  {\n    'tag': '@param reporter where to report errors',\n    'alternatives': [\n      '@param reporter location for error reporting',\n      '@param reporter place to report errors',\n      '@param reporter where errors should be reported',\n      '@param reporter where to report any errors',\n      '@param reporter where errors are reported'\n    ]\n  },\n  {\n    'tag': '@return true iff the command-line options are valid',\n    'alternatives': [\n      '@return true if and only if the command-line options are valid',\n      '@return true if the command-line options are considered valid',\n      '@return true if the command-line options are deemed valid',\n      '@return true if the command-line options are regarded as valid',\n      '@return true if the command-line options are seen as valid'\n    ]\n  },\n  {\n    'tag': '@param options the command-line options to parse: a list of 1- or 2-element arrays',\n    'alternatives': [\n      '@param options the command-line options to be parsed: a list of arrays with 1 or 2 elements',\n      '@param options the command-line options that need parsing: a list of arrays containing 1 or 2 elements',\n      '@param options the command-line options to process: a list of arrays comprising 1 or 2 elements',\n      '@param options the command-line options to be analyzed: a list of arrays consisting of 1 or 2 elements',\n      '@param options the command-line options to decode: a list of arrays containing 1 or 2 elements'\n    ]\n  },\n  {\n    'tag': '@throws Exception if there is trouble',\n    'alternatives': [\n      '@throws Exception if an issue arises',\n      '@throws Exception in case of trouble',\n      '@throws Exception if any difficulty occurs',\n      '@throws Exception if problems occur',\n      '@throws Exception if there are any issues'\n    ]\n  },\n  {\n    'tag': '@return the user-visible doclet output',\n    'alternatives': [\n      '@return the doclet output that is visible to the user',\n      '@return the doclet output displayed to the user',\n      '@return the output of the doclet that is visible to the user',\n      '@return the visible doclet output presented to the user',\n      '@return the output of the doclet which is visible to the user'\n    ]\n  },\n  {\n    'tag': '@throws Exception if there is trouble',\n    'alternatives': [\n      '@throws Exception if an issue arises',\n      '@throws Exception in case of trouble',\n      '@throws Exception if any difficulty occurs',\n      '@throws Exception if problems occur',\n      '@throws Exception if there are any issues'\n    ]\n  },\n  {\n    'tag': '@return the HTML documentation for the underlying options instance',\n    'alternatives': [\n      '@return the HTML documentation of the options instance underneath',\n      '@return the HTML documentation for the options instance below',\n      '@return the underlying options instance\\'s HTML documentation',\n      '@return the HTML documentation for the options that are underneath',\n      '@return the HTML documentation that corresponds to the underlying options instance'\n    ]\n  },\n  {\n    'tag': '@param padding the padding to add in the Javadoc output',\n    'alternatives': [\n      '@param padding the additional space to include in the Javadoc output',\n      '@param padding the extra padding to append in the Javadoc output',\n      '@param padding the margin to insert in the Javadoc output',\n      '@param padding the spacing to place in the Javadoc output',\n      '@param padding the padding to include in the Javadoc output'\n    ]\n  },\n  {\n    'tag': '@return the HTML documentation for the underlying options instance',\n    'alternatives': [\n      '@return the HTML documentation of the options instance underneath',\n      '@return the HTML documentation for the options instance below',\n      '@return the underlying options instance\\'s HTML documentation',\n      '@return the HTML documentation for the options that are underneath',\n      '@return the HTML documentation that corresponds to the underlying options instance'\n    ]\n  }\n]"