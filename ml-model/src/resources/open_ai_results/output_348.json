"output = [\n  {\n    'tag': '@return true if the map contains the key',\n    'alternatives': [\n      '@return true if the map has the key',\n      '@return true if the key is present in the map',\n      '@return true if the map contains the specified key',\n      '@return true if the key exists in the map',\n      '@return true if the key is found in the map'\n    ]\n  },\n  {\n    'tag': '@param value the value to search for',\n    'alternatives': [\n      '@param value the value to look for',\n      '@param value the value to find',\n      '@param value the value to search',\n      '@param value the value to seek',\n      '@param value the value to locate'\n    ]\n  },\n  {\n    'tag': '@return true if the map contains the value',\n    'alternatives': [\n      '@return true if the map has the value',\n      '@return true if the value is present in the map',\n      '@return true if the map contains the specified value',\n      '@return true if the value exists in the map',\n      '@return true if the value is found in the map'\n    ]\n  },\n  {\n    'tag': '@param key the key',\n    'alternatives': [\n      '@param key the input key',\n      '@param key the provided key',\n      '@param key the specified key',\n      '@param key the given key',\n      '@param key the target key'\n    ]\n  },\n  {\n    'tag': '@return the mapped value, null if no match',\n    'alternatives': [\n      '@return the corresponding value, or null if no match',\n      '@return the assigned value, null if no match',\n      '@return the associated value, or null if no match',\n      '@return the value mapped to the key, or null if no match',\n      '@return the value assigned to the key, or null if no match'\n    ]\n  },\n  {\n    'tag': '@return the value previously mapped to this key, null if none',\n    'alternatives': [\n      '@return the previously assigned value to this key, or null if none',\n      '@return the previously associated value with this key, or null if none',\n      '@return the previous value mapped to this key, or null if none',\n      '@return the value that was previously mapped to this key, or null if none',\n      '@return the value that was previously assigned to this key, or null if none'\n    ]\n  },\n  {\n    'tag': '@param key the mapping to remove',\n    'alternatives': [\n      '@param key the key to remove from the mapping',\n      '@param key the key to delete from the mapping',\n      '@param key the key to eliminate from the mapping',\n      '@param key the key to exclude from the mapping',\n      '@param key the key to erase from the mapping'\n    ]\n  },\n  {\n    'tag': '@return the value mapped to the removed key, null if key not in map',\n    'alternatives': [\n      '@return the value associated with the removed key, or null if key not in map',\n      '@return the assigned value of the removed key, or null if key not in map',\n      '@return the mapped value of the removed key, or null if key not in map',\n      '@return the value that was mapped to the removed key, or null if key not in map',\n      '@return the value previously assigned to the removed key, or null if key not in map'\n    ]\n  },\n  {\n    'tag': '@return a map iterator',\n    'alternatives': [\n      '@return an iterator for the map',\n      '@return an iterator to loop through the map',\n      '@return an iterator to iterate over the map',\n      '@return an iterator that traverses the map',\n      '@return an iterator to access the map elements'\n    ]\n  },\n  {\n    'tag': \"@return a set view of this map's entries\",\n    'alternatives': [\n      \"@return a set that provides a view of this map's entries\",\n      \"@return a set containing the entries of this map\",\n      \"@return a set representing the entries of this map\",\n      \"@return a set that displays the entries of this map\",\n      \"@return a set with a view of this map's entries\"\n    ]\n  },\n  {\n    'tag': \"@return a set view of this map's keys\",\n    'alternatives': [\n      \"@return a set that provides a view of this map's keys\",\n      \"@return a set containing the keys of this map\",\n      \"@return a set representing the keys of this map\",\n      \"@return a set that displays the keys of this map\",\n      \"@return a set with a view of this map's keys\"\n    ]\n  },\n  {\n    'tag': \"@return a set view of this map's values\",\n    'alternatives': [\n      \"@return a set that provides a view of this map's values\",\n      \"@return a set containing the values of this map\",\n      \"@return a set representing the values of this map\",\n      \"@return a set that displays the values of this map\",\n      \"@return a set with a view of this map's values\"\n    ]\n  },\n  {\n    'tag': '@param ref the reference to purge',\n    'alternatives': [\n      '@param ref the reference to clean',\n      '@param ref the reference to remove',\n      '@param ref the reference to eliminate',\n      '@param ref the reference to clear',\n      '@param ref the reference to dispose'\n    ]\n  },\n  {\n    'tag': '@param key the key',\n    'alternatives': [\n      '@param key the input key',\n      '@param key the provided key',\n      '@param key the specified key',\n      '@param key the given key',\n      '@param key the target key'\n    ]\n  },\n  {\n    'tag': '@return the entry, null if no match',\n    'alternatives': [\n      '@return the entry, or null if no match found',\n      '@return the matched entry, or null if no match',\n      '@return the found entry, or null if no match',\n      '@return the entry object, null if no match',\n      '@return the entry item, null if no match'\n    ]\n  },\n  {\n    'tag': '@param key the key to get a hash code for, may be null',\n    'alternatives': [\n      '@param key the key to obtain a hash code for, may be null',\n      '@param key the key to calculate a hash code for, may be null',\n      '@param key the key to generate a hash code for, may be null',\n      '@param key the key to derive a hash code for, may be null',\n      '@param key the key to compute a hash code for, may be null'\n    ]\n  },\n  {\n    'tag': '@param value the value to get a hash code for, may be null',\n    'alternatives': [\n      '@param value the value to obtain a hash code for, may be null',\n      '@param value the value to calculate a hash code for, may be null',\n      '@param value the value to generate a hash code for, may be null',\n      '@param value the value to derive a hash code for, may be null',\n      '@param value the value to compute a hash code for, may be null'\n    ]\n  },\n  {\n    'tag': '@return the hash code, as per the MapEntry specification',\n    'alternatives': [\n      '@return the hash code, following the MapEntry specification',\n      '@return the defined hash code, according to the MapEntry specification',\n      '@return the hash code value, as specified by the MapEntry',\n      '@return the determined hash code, based on the MapEntry specification',\n      '@return the hash code, as stated in the MapEntry specification'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key to compare passed in from outside',\n    'alternatives': [\n      '@param key1 the initial key to compare received externally',\n      '@param key1 the provided first key for external comparison',\n      '@param key1 the external first key to compare against',\n      '@param key1 the key from outside to compare as the first',\n      '@param key1 the first key received externally to compare'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key extracted from the entry via &#60;code&#62;entry.key&#60;/code&#62;',\n    'alternatives': [\n      '@param key2 the second key obtained from the entry through &#60;code&#62;entry.key&#60;/code&#62;',\n      '@param key2 the extracted second key from the entry using &#60;code&#62;entry.key&#60;/code&#62;',\n      '@param key2 the second key derived from the entry via &#60;code&#62;entry.key&#60;/code&#62;',\n      '@param key2 the key obtained from the entry through &#60;code&#62;entry.key&#60;/code&#62; as the second key',\n      '@param key2 the second key extracted from the entry using &#60;code&#62;entry.key&#60;/code&#62;'\n    ]\n  },\n  {\n    'tag': '@return true if equal',\n    'alternatives': [\n      '@return true if they are equal',\n      '@return true if they are the same',\n      '@return true if they have the same value',\n      '@return true if they match',\n      '@return true if they are identical'\n    ]\n  },\n  {\n    'tag': '@param next the next entry in sequence',\n    'alternatives': [\n      '@param next the subsequent entry in order',\n      '@param next the following entry in the sequence',\n      '@param next the entry that comes next in the sequence',\n      '@param next the entry that follows in the order',\n      '@param next the entry that appears after in the sequence'\n    ]\n  },\n  {\n    'tag': '@param hashCode the hash code to use',\n    'alternatives': [\n      '@param hashCode the hash code to utilize',\n      '@param hashCode the hash code to employ',\n      '@param hashCode the hash code to apply',\n      '@param hashCode the hash code to utilize',\n      '@param hashCode the hash code to make use of'\n    ]\n  },\n  {\n    'tag': '@param key the key to store',\n    'alternatives': [\n      '@param key the key to save',\n      '@param key the key to keep',\n      '@param key the key to hold',\n      '@param key the key to retain',\n      '@param key the key to preserve'\n    ]\n  },\n  {\n    'tag': '@param value the value to store',\n    'alternatives': [\n      '@param value the value to save',\n      '@param value the value to keep',\n      '@param value the value to hold',\n      '@param value the value to retain',\n      '@param value the value to preserve'\n    ]\n  }\n]"