"[\n  {\n    'tag': '@return a new rotation which is the composition of r by the instance',\n    'alternatives': [\n      '@return a new rotatory transformation obtained by composing r and the current instance',\n      '@return a fresh rotation resulting from the composition of r and the current instance',\n      '@return a newly created rotation that is the combination of r and the current instance',\n      '@return the result of composing r and the instance, which is a new rotation',\n      '@return a new rotation formed by the composition of r and the current instance'\n    ]\n  },\n  {\n    'tag': '@param r rotation to apply the rotation to',\n    'alternatives': [\n      '@param r rotation to be used as the target of the current rotation operation',\n      '@param r rotation that will receive the applied transformation',\n      '@param r the rotation that the current rotation should be applied to',\n      '@param r rotation to which the current rotation operation is applied',\n      '@param r the rotation to which the current rotation is applied'\n    ]\n  },\n  {\n    'tag': '@param convention convention to use for the semantics of the angle',\n    'alternatives': [\n      '@param convention the agreed-upon standard for interpreting the angle',\n      '@param convention the chosen convention for understanding the angle',\n      '@param convention the rule set to be followed when interpreting the angle',\n      '@param convention the convention that governs the meaning of the angle',\n      '@param convention the adopted convention for understanding the angle'\n    ]\n  },\n  {\n    'tag': '@return a new rotation which is the composition of r by the instance using vector operator convention',\n    'alternatives': [\n      '@return a newly created rotation that is the result of composing r and the instance according to the vector operator convention',\n      '@return a fresh rotation obtained by combining r and the current instance with the vector operator convention',\n      '@return a new rotation formed by composing r and the current instance following the vector operator convention',\n      '@return the result of the composition of r and the instance using the vector operator convention, which is a new rotation',\n      '@return a new rotation that is the composition of r and the instance, employing the vector operator convention'\n    ]\n  },\n  {\n    'tag': '@param r1 rotation to apply',\n    'alternatives': [\n      '@param r1 the rotation to be applied',\n      '@param r1 the rotation that should receive the applied transformation',\n      '@param r1 the rotation to which the transformation is applied',\n      '@param r1 the target rotation for the applied operation',\n      '@param r1 the rotation on which the applied transformation is performed'\n    ]\n  },\n  {\n    'tag': '@param rInner rotation to apply the rotation to',\n    'alternatives': [\n      '@param rInner the rotation to which the rotation should be applied',\n      '@param rInner the rotation that will receive the applied rotation',\n      '@param rInner the rotation to which the applied rotation is performed',\n      '@param rInner the target rotation for the applied operation',\n      '@param rInner the rotation on which the rotation is performed'\n    ]\n  },\n  {\n    'tag': '@param <T> the type of the field elements',\n    'alternatives': [\n      '@param <T> the type of the elements in the field',\n      '@param <T> the type of the field components',\n      '@param <T> the type of elements in the field',\n      '@param <T> the field element type',\n      '@param <T> the data type of the field elements'\n    ]\n  },\n  {\n    'tag': '@return a new rotation which is the composition of r by the inverse of the instance',\n    'alternatives': [\n      '@return a new rotation that is formed by the composition of r and the inverse of the current instance',\n      '@return a fresh rotation obtained by combining r and the inverse of the current instance',\n      '@return a newly created rotation resulting from the composition of r and the inverse of the instance',\n      '@return the result of composing r by the inverse of the current instance, which is a new rotation',\n      '@return a new rotation obtained by composing r with the inverse of the instance'\n    ]\n  },\n  {\n    'tag': '@param rOuter rotation to apply the rotation to',\n    'alternatives': [\n      '@param rOuter the rotation to which the rotation should be applied',\n      '@param rOuter the rotation that will receive the applied rotation',\n      '@param rOuter the rotation to which the applied rotation is performed',\n      '@param rOuter the target rotation for the applied operation',\n      '@param rOuter the rotation on which the rotation is performed'\n    ]\n  }\n]"