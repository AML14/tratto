"output = [\n  {\n    'tag': '@param a the array to canonicalize',\n    'alternatives': [\n      '@param a the array to standardize',\n      '@param a the array to make canonical',\n      '@param a the array to regularize',\n      '@param a the array to convert to a canonical form',\n      '@param a the array to normalize'\n    ]\n  },\n  {\n    'tag': '@return a canonical representation for the long[] array',\n    'alternatives': [\n      '@return a standard representation for the long[] array',\n      '@return a normalized representation for the long[] array',\n      '@return a consistent representation for the long[] array',\n      '@return a regularized representation for the long[] array',\n      '@return a concise representation for the long[] array'\n    ]\n  },\n  {\n    'tag': '@param d the value to intern',\n    'alternatives': [\n      '@param d the value to intern',\n      '@param d the value to intern into memory',\n      '@param d the value to place into the intern pool',\n      '@param d the value to store as an intern',\n      '@param d the value to make interned'\n    ]\n  },\n  {\n    'tag': '@return an interned Double with value d',\n    'alternatives': [\n      '@return an interned Double with the given value',\n      '@return an interned Double object containing the value d',\n      '@return a Double object with value d that is interned',\n      '@return an interned instance of Double with value d',\n      '@return an interned Double having the value d'\n    ]\n  },\n  {\n    'tag': '@param s the string to parse',\n    'alternatives': [\n      '@param s the string to interpret',\n      '@param s the string to analyze',\n      '@param s the string to process',\n      '@param s the string to convert',\n      '@param s the string to transform'\n    ]\n  },\n  {\n    'tag': '@return an interned Double parsed from s',\n    'alternatives': [\n      '@return an interned Double extracted from s',\n      '@return an interned Double obtained from parsing s',\n      '@return an interned Double created by parsing s',\n      '@return an interned Double generated from s',\n      '@return an interned Double derived from s'\n    ]\n  },\n  {\n    'tag': '@param a the array to canonicalize',\n    'alternatives': [\n      '@param a the array to standardize',\n      '@param a the array to make canonical',\n      '@param a the array to regularize',\n      '@param a the array to convert to a canonical form',\n      '@param a the array to normalize'\n    ]\n  },\n  {\n    'tag': '@return a canonical representation for the double[] array',\n    'alternatives': [\n      '@return a standard representation for the double[] array',\n      '@return a normalized representation for the double[] array',\n      '@return a consistent representation for the double[] array',\n      '@return a regularized representation for the double[] array',\n      '@return a concise representation for the double[] array'\n    ]\n  },\n  {\n    'tag': '@param a the array to canonicalize',\n    'alternatives': [\n      '@param a the array to standardize',\n      '@param a the array to make canonical',\n      '@param a the array to regularize',\n      '@param a the array to convert to a canonical form',\n      '@param a the array to normalize'\n    ]\n  },\n  {\n    'tag': '@return a canonical representation for the String[] array',\n    'alternatives': [\n      '@return a standard representation for the String[] array',\n      '@return a normalized representation for the String[] array',\n      '@return a consistent representation for the String[] array',\n      '@return a regularized representation for the String[] array',\n      '@return a concise representation for the String[] array'\n    ]\n  },\n  {\n    'tag': '@param a the array to canonicalize',\n    'alternatives': [\n      '@param a the array to standardize',\n      '@param a the array to make canonical',\n      '@param a the array to regularize',\n      '@param a the array to convert to a canonical form',\n      '@param a the array to normalize'\n    ]\n  },\n  {\n    'tag': '@return a canonical representation for the Object[] array',\n    'alternatives': [\n      '@return a standard representation for the Object[] array',\n      '@return a normalized representation for the Object[] array',\n      '@return a consistent representation for the Object[] array',\n      '@return a regularized representation for the Object[] array',\n      '@return a concise representation for the Object[] array'\n    ]\n  },\n  {\n    'tag': '@param a an Object to canonicalize',\n    'alternatives': [\n      '@param a an Object to standardize',\n      '@param a an Object to make canonical',\n      '@param a an Object to regularize',\n      '@param a an Object to convert to a canonical form',\n      '@param a an Object to normalize'\n    ]\n  },\n  {\n    'tag': '@return a canonical version of a',\n    'alternatives': [\n      '@return a standard version of a',\n      '@return a normalized version of a',\n      '@return a consistent version of a',\n      '@return a regularized version of a',\n      '@return a concise version of a'\n    ]\n  },\n  {\n    'tag': '@param seq the sequence whose subsequence should be interned',\n    'alternatives': [\n      '@param seq the sequence from which to intern a subsequence',\n      '@param seq the original sequence from which to intern a subsequence',\n      '@param seq the sequence that contains the subsequence to be interned',\n      '@param seq the source sequence for the subsequence to be interned',\n      '@param seq the sequence that includes the subsequence to be interned'\n    ]\n  },\n  {\n    'tag': '@param start the index of the start of the subsequence to be interned',\n    'alternatives': [\n      '@param start the starting index of the subsequence to be interned',\n      '@param start the beginning index of the subsequence to be interned',\n      '@param start the position of the start of the subsequence to be interned',\n      '@param start the offset of the start of the subsequence to be interned',\n      '@param start the location of the start of the subsequence to be interned'\n    ]\n  },\n  {\n    'tag': '@param end the index of the end of the subsequence to be interned',\n    'alternatives': [\n      '@param end the ending index of the subsequence to be interned',\n      '@param end the final index of the subsequence to be interned',\n      '@param end the position of the end of the subsequence to be interned',\n      '@param end the offset of the end of the subsequence to be interned',\n      '@param end the location of the end of the subsequence to be interned'\n    ]\n  },\n  {\n    'tag': '@return a subsequence of seq from start to end that is interned',\n    'alternatives': [\n      '@return an interned subsequence of seq ranging from start to end',\n      '@return a subsequence of seq that is interned and spans from start to end',\n      '@return a segment of seq from start to end that is interned',\n      '@return a range of seq that is interned and covers from start to end',\n      '@return an interned portion of seq that ranges from start to end'\n    ]\n  },\n  {\n    'tag': '@param seq the sequence whose subsequence should be interned',\n    'alternatives': [\n      '@param seq the sequence from which to intern a subsequence',\n      '@param seq the original sequence from which to intern a subsequence',\n      '@param seq the sequence that contains the subsequence to be interned',\n      '@param seq the source sequence for the subsequence to be interned',\n      '@param seq the sequence that includes the subsequence to be interned'\n    ]\n  },\n  {\n    'tag': '@param start the index of the start of the subsequence to be interned',\n    'alternatives': [\n      '@param start the starting index of the subsequence to be interned',\n      '@param start the beginning index of the subsequence to be interned',\n      '@param start the position of the start of the subsequence to be interned',\n      '@param start the offset of the start of the subsequence to be interned',\n      '@param start the location of the start of the subsequence to be interned'\n    ]\n  },\n  {\n    'tag': '@param end the index of the end of the subsequence to be interned',\n    'alternatives': [\n      '@param end the ending index of the subsequence to be interned',\n      '@param end the final index of the subsequence to be interned',\n      '@param end the position of the end of the subsequence to be interned',\n      '@param end the offset of the end of the subsequence to be interned',\n      '@param end the location of the end of the subsequence to be interned'\n    ]\n  },\n  {\n    'tag': '@return a subsequence of seq from start to end that is interned',\n    'alternatives': [\n      '@return an interned subsequence of seq ranging from start to end',\n      '@return a subsequence of seq that is interned and spans from start to end',\n      '@return a segment of seq from start to end that is interned',\n      '@return a range of seq that is interned and covers from start to end',\n      '@return an interned portion of seq that ranges from start to end'\n    ]\n  },\n  {\n    'tag': '@param seq the sequence whose subsequence should be interned',\n    'alternatives': [\n      '@param seq the sequence from which to intern a subsequence',\n      '@param seq the original sequence from which to intern a subsequence',\n      '@param seq the sequence that contains the subsequence to be interned',\n      '@param seq the source sequence for the subsequence to be interned',\n      '@param seq the sequence that includes the subsequence to be interned'\n    ]\n  },\n  {\n    'tag': '@param start the index of the start of the subsequence to be interned',\n    'alternatives': [\n      '@param start the starting index of the subsequence to be interned',\n      '@param start the beginning index of the subsequence to be interned',\n      '@param start the position of the start of the subsequence to be interned',\n      '@param start the offset of the start of the subsequence to be interned',\n      '@param start the location of the start of the subsequence to be interned'\n    ]\n  },\n  {\n    'tag': '@param end the index of the end of the subsequence to be interned',\n    'alternatives': [\n      '@param end the ending index of the subsequence to be interned',\n      '@param end the final index of the subsequence to be interned',\n      '@param end the position of the end of the subsequence to be interned',\n      '@param end the offset of the end of the subsequence to be interned',\n      '@param end the location of the end of the subsequence to be interned'\n    ]\n  },\n  {\n    'tag': '@return a subsequence of seq from start to end that is interned',\n    'alternatives': [\n      '@return an interned subsequence of seq ranging from start to end',\n      '@return a subsequence of seq that is interned and spans from start to end',\n      '@return a segment of seq from start to end that is interned',\n      '@return a range of seq that is interned and covers from start to end',\n      '@return an interned portion of seq that ranges from start to end'\n    ]\n  }\n]"