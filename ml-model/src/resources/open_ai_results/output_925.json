"output=[\n  {\n    'tag': '@param off offset from which to start writing characters',\n    'alternatives': [\n      '@param off start position from which to write characters',\n      '@param off starting point for writing characters',\n      '@param off the offset to begin writing characters'\n    ]\n  },\n  {\n    'tag': '@param len number of characters to write',\n    'alternatives': [\n      '@param len quantity of characters to be written',\n      '@param len the count of characters to write',\n      '@param len the number of characters to be written'\n    ]\n  },\n  {\n    'tag': '@param out an output stream',\n    'alternatives': [\n      '@param out a stream for output',\n      '@param out output stream',\n      '@param out the stream for output'\n    ]\n  },\n  {\n    'tag': '@param out an output stream',\n    'alternatives': [\n      '@param out a stream for output',\n      '@param out output stream',\n      '@param out the stream for output'\n    ]\n  },\n  {\n    'tag': '@param autoFlush if true, the println() methods will flush the output buffer',\n    'alternatives': [\n      '@param autoFlush flushing the output buffer if true for the println() methods',\n      '@param autoFlush if true, the output buffer will be flushed by println() methods',\n      '@param autoFlush when set to true, the output buffer will be flushed by the println() methods'\n    ]\n  },\n  {\n    'tag': '@param out a Writer',\n    'alternatives': [\n      '@param out a Writer object',\n      '@param out a class implementing the Writer interface',\n      '@param out Writer instance'\n    ]\n  },\n  {\n    'tag': '@param out a writer',\n    'alternatives': [\n      '@param out writer object',\n      '@param out instance of writer',\n      '@param out a writing object'\n    ]\n  },\n  {\n    'tag': '@param autoFlush if true, the println() methods will flush the output buffer',\n    'alternatives': [\n      '@param autoFlush flushing the output buffer if true for the println() methods',\n      '@param autoFlush if true, the output buffer will be flushed by println() methods',\n      '@param autoFlush when set to true, the output buffer will be flushed by the println() methods'\n    ]\n  },\n  {\n    'tag': '@param key key with which the specified value is to be associated.',\n    'alternatives': [\n      '@param key the key to associate with the specified value',\n      '@param key the key for which the value will be associated',\n      '@param key key that will be associated with the specified value'\n    ]\n  },\n  {\n    'tag': '@param value value to be associated with the specified key.',\n    'alternatives': [\n      '@param value the value to associate with the specified key',\n      '@param value the value that will be associated with the key',\n      '@param value value that will be associated with the specified key'\n    ]\n  },\n  {\n    'tag': '@return previous value associated with specified key, or <code>null</code>\\n       if there was no mapping for key.  A <code>null</code> return can\\n       also indicate that the HashMap previously associated\\n       <code>null</code> with the specified key.',\n    'alternatives': [\n      '@return the previous value associated with the specified key, or <code>null</code> if there was no mapping for the key. A <code>null</code> return can also mean that the HashMap previously linked <code>null</code> with the specified key.',\n      '@return the value previously associated with the specified key, or <code>null</code> if there was no mapping for the key. A <code>null</code> return can also indicate that the HashMap previously associated <code>null</code> with the specified key.',\n      '@return the previous value associated with the specified key, or <code>null</code> if there was no mapping for the key. A <code>null</code> return can also mean that the HashMap previously had <code>null</code> linked to the specified key.'\n    ]\n  },\n  {\n    'tag': '@param newCapacity the new capacity, MUST be a power of two;\\n       must be greater than current capacity unless current\\n       capacity is MAXIMUM_CAPACITY (in which case value\\n       is irrelevant).',\n    'alternatives': [\n      '@param newCapacity new capacity, MUST be a power of two;\\n       must be greater than the current capacity unless current\\n       capacity is MAXIMUM_CAPACITY (in which case the value\\n       is irrelevant).',\n      '@param newCapacity the new capacity, which MUST be a power of two;\\n       unless the current capacity is MAXIMUM_CAPACITY (in which case the value\\n       is irrelevant), it must be greater than the current capacity.',\n      '@param newCapacity the new capacity, MUST be a power of two;\\n       except if the current capacity is MAXIMUM_CAPACITY (in which case value\\n       is irrelevant), it must be greater than the current capacity.'\n    ]\n  },\n  {\n    'tag': '@param m mappings to be stored in this map.',\n    'alternatives': [\n      '@param m mappings to store in this map.',\n      '@param m the mappings that will be stored in this map.',\n      '@param m the mappings that need to be stored in this map.'\n    ]\n  },\n  {\n    'tag': '@param key key whose mapping is to be removed from the map.',\n    'alternatives': [\n      '@param key the key to remove its mapping from the map.',\n      '@param key the key whose mapping will be removed from the map.',\n      '@param key the key that needs to be removed from the map.'\n    ]\n  },\n  {\n    'tag': '@return previous value associated with specified key, or <code>null</code>\\n       if there was no mapping for key.  A <code>null</code> return can\\n       also indicate that the map previously associated <code>null</code>\\n       with the specified key.',\n    'alternatives': [\n      '@return the previous value associated with the specified key, or <code>null</code> if there was no mapping for the key. A <code>null</code> return can also mean that the map previously linked <code>null</code> with the specified key.',\n      '@return the value previously associated with the specified key, or <code>null</code> if there was no mapping for the key. A <code>null</code> return can also indicate that the map previously associated <code>null</code> with the specified key.',\n      '@return the previous value associated with the specified key, or <code>null</code> if there was no mapping for the key. A <code>null</code> return can also mean that the map previously had <code>null</code> linked to the specified key.'\n    ]\n  },\n  {\n    'tag': '@param initialCapacity the initial capacity of the\\n     <code>WeakIdentityHashMap</code>',\n    'alternatives': [\n      '@param initialCapacity the starting capacity of the\\n     <code>WeakIdentityHashMap</code>',\n      '@param initialCapacity the capacity to start with for the\\n     <code>WeakIdentityHashMap</code>',\n      '@param initialCapacity the initial size of the\\n     <code>WeakIdentityHashMap</code>'\n    ]\n  },\n  {\n    'tag': '@param loadFactor the load factor of the\\n     <code>WeakIdentityHashMap</code>',\n    'alternatives': [\n      '@param loadFactor the load factor of\\n     <code>WeakIdentityHashMap</code>',\n      '@param loadFactor the ratio of items to the total capacity of\\n     <code>WeakIdentityHashMap</code>',\n      '@param loadFactor the ratio of elements to the total capacity of\\n     <code>WeakIdentityHashMap</code>'\n    ]\n  },\n  {\n    'tag': '@param initialCapacity the initial capacity of the\\n     <code>WeakIdentityHashMap</code>',\n    'alternatives': [\n      '@param initialCapacity the starting capacity of the\\n     <code>WeakIdentityHashMap</code>',\n      '@param initialCapacity the capacity to start with for the\\n     <code>WeakIdentityHashMap</code>',\n      '@param initialCapacity the initial size of the\\n     <code>WeakIdentityHashMap</code>'\n    ]\n  },\n  {\n    'tag': '@param t the map whose mappings are to be placed in this map.',\n    'alternatives': [\n      '@param t the map from which the mappings will be added to this map.',\n      '@param t the map that will be the source of mappings for this map.',\n      '@param t the map to take the mappings from and put into this map.'\n    ]\n  },\n  {\n    'tag': '@return the iterator',\n    'alternatives': [\n      '@return an iterator',\n      '@return an instance of iterator',\n      '@return an object representing the iterator'\n    ]\n  },\n  {\n    'tag': '@param iter the iterator to wrap.',\n    'alternatives': [\n      '@param iter the iterator being wrapped.',\n      '@param iter iterator object to be wrapped.',\n      '@param iter an instance of iterator to wrap.'\n    ]\n  },\n  {\n    'tag': '@param args command-line arguments; see documentation',\n    'alternatives': [\n      '@param args arguments passed through the command-line; refer to the documentation',\n      '@param args command-line arguments provided; please consult the documentation',\n      '@param args the command-line arguments; consult the documentation for more details'\n    ]\n  },\n  {\n    'tag': '@throws IOException if there is a problem reading a file',\n    'alternatives': [\n      '@throws IOException if an issue occurs while reading a file',\n      '@throws IOException if there is any problem encountered during file reading',\n      '@throws IOException when encountering an error while reading a file'\n    ]\n  },\n  {\n    'tag': '@param reader where to read the entry from',\n    'alternatives': [\n      '@param reader the source from which the entry will be read',\n      '@param reader the location to read the entry from',\n      '@param reader the object to read the entry from'\n    ]\n  },\n  {\n    'tag': '@return the next entry, or null',\n    'alternatives': [\n      '@return the subsequent entry, or null',\n      '@return the following entry, or null',\n      '@return the next record, or null'\n    ]\n  }\n]"