"output = [\n  {\n    'tag': '@param <K> the key type',\n    'alternatives': [\n      '@param <K> the type of the key',\n      '@param <K> the type of key',\n      '@param <K> type of the key',\n      '@param <K> the key data type',\n      '@param <K> the type of the key parameter'\n    ]\n  },\n  {\n    'tag': '@param <V> the value type',\n    'alternatives': [\n      '@param <V> the type of the value',\n      '@param <V> the type of value',\n      '@param <V> type of the value',\n      '@param <V> the value data type',\n      '@param <V> the type of the value parameter'\n    ]\n  },\n  {\n    'tag': '@param map the {@link MultiValuedMap} to use',\n    'alternatives': [\n      '@param map the {@link MultiValuedMap} to utilize',\n      '@param map the {@link MultiValuedMap} that should be used',\n      '@param map the {@link MultiValuedMap} for utilization',\n      '@param map the {@link MultiValuedMap} to be employed',\n      '@param map the {@link MultiValuedMap} to apply'\n    ]\n  },\n  {\n    'tag': '@param key the key to look up',\n    'alternatives': [\n      '@param key the key to search for',\n      '@param key the key for searching',\n      '@param key the key to find',\n      '@param key the key to seek',\n      '@param key the key for lookup'\n    ]\n  },\n  {\n    'tag': '@return a new <code>ListValuedMap</code>',\n    'alternatives': [\n      '@return a fresh <code>ListValuedMap</code>',\n      '@return a newly created <code>ListValuedMap</code>',\n      '@return a brand-new <code>ListValuedMap</code>',\n      '@return a new instance of <code>ListValuedMap</code>',\n      '@return a newly generated <code>ListValuedMap</code>'\n    ]\n  },\n  {\n    'tag': '@return a new {@link SetValuedMap}',\n    'alternatives': [\n      '@return a fresh {@link SetValuedMap}',\n      '@return a newly created {@link SetValuedMap}',\n      '@return a brand-new {@link SetValuedMap}',\n      '@return a new instance of {@link SetValuedMap}',\n      '@return a newly generated {@link SetValuedMap}'\n    ]\n  },\n  {\n    'tag': '@return an unmodifiable {@link MultiValuedMap} backed by the provided map',\n    'alternatives': [\n      '@return an immutable {@link MultiValuedMap} supported by the given map',\n      '@return a read-only {@link MultiValuedMap} based on the provided map',\n      '@return a non-modifiable {@link MultiValuedMap} that uses the given map as its backend',\n      '@return an unchangeable {@link MultiValuedMap} relying on the provided map',\n      '@return a fixed {@link MultiValuedMap} with the provided map as its underlying data structure'\n    ]\n  },\n  {\n    'tag': '@return a transformed <code>MultiValuedMap</code> backed by the given map',\n    'alternatives': [\n      '@return a modified <code>MultiValuedMap</code> supported by the provided map',\n      '@return a converted <code>MultiValuedMap</code> that uses the given map as its backend',\n      '@return a changed <code>MultiValuedMap</code> relying on the given map',\n      '@return a revised <code>MultiValuedMap</code> with the given map as its underlying data structure',\n      '@return a transformed <code>MultiValuedMap</code> based on the provided map'\n    ]\n  },\n  {\n    'tag': '@return <code>true</code> if the collection is full',\n    'alternatives': [\n      '@return <code>true</code> if the collection is at maximum capacity',\n      '@return <code>true</code> if the collection has reached its capacity',\n      '@return <code>true</code> if the collection is complete',\n      '@return <code>true</code> if the collection is filled',\n      '@return <code>true</code> if the collection is saturated'\n    ]\n  }\n]\n"