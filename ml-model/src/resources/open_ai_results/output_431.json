"[\n  {\n    \"tag\": \"@return the elements matching the predicate (new list)\",\n    \"alternatives\": [\n      \"@return a list containing the elements that satisfy the predicate (new list)\",\n      \"@return the list of elements that fulfill the given predicate (new list)\",\n      \"@return a new list with the elements that match the predicate\",\n      \"@return a list of elements that meet the condition specified by the predicate (new list)\",\n      \"@return a newly created list with the elements that match the given predicate\"\n    ]\n  },\n  {\n    \"tag\": \"@param <E> the element type\",\n    \"alternatives\": [\n      \"@param <E> the type of the elements\",\n      \"@param <E> the type of objects in the collection\",\n      \"@param <E> specifies the type of elements\",\n      \"@param <E> indicates the type of the elements\",\n      \"@param <E> defines the element's data type\"\n    ]\n  },\n  {\n    \"tag\": \"@param predicate the predicate to use, may be null\",\n    \"alternatives\": [\n      \"@param predicate a condition that can be null\",\n      \"@param predicate the condition to apply (nullable)\",\n      \"@param predicate specifies the condition to be checked, can be null\",\n      \"@param predicate denotes the predicate to be used, can be null\",\n      \"@param predicate represents the condition to be evaluated, may be null\"\n    ]\n  },\n  {\n    \"tag\": \"@return the elements <b>not</b> matching the predicate (new list)\",\n    \"alternatives\": [\n      \"@return a list of elements that do <b>not</b> satisfy the provided predicate (new list)\",\n      \"@return a new list with the elements that do <b>not</b> match the given predicate\",\n      \"@return the list containing elements that fail the predicate (new list)\",\n      \"@return a list of elements that don't meet the condition specified by the predicate (new list)\",\n      \"@return a newly created list with the elements that don't match the given predicate\"\n    ]\n  },\n  {\n    \"tag\": \"@param list1 the first list, may be null\",\n    \"alternatives\": [\n      \"@param list1 the initial list, possibly null\",\n      \"@param list1 denotes the first list, can be null\",\n      \"@param list1 represents the primary list, may be null\",\n      \"@param list1 refers to the first list, possibly null\",\n      \"@param list1 specifies the initial list, which can be null\"\n    ]\n  },\n  {\n    \"tag\": \"@param list2 the second list, may be null\",\n    \"alternatives\": [\n      \"@param list2 the additional list, maybe null\",\n      \"@param list2 refers to the second list, possibly null\",\n      \"@param list2 represents the secondary list, may be null\",\n      \"@param list2 denotes the second list, can be null\",\n      \"@param list2 specifies the additional list, which can be null\"\n    ]\n  },\n  {\n    \"tag\": \"@param list the list to generate the hashCode for, may be null\",\n    \"alternatives\": [\n      \"@param list the list used to compute the hashCode, possibly null\",\n      \"@param list denotes the list from which to create the hashCode, can be null\",\n      \"@param list represents the list for which the hashCode is calculated, may be null\",\n      \"@param list specifies the list for which the hashCode is generated, which can be null\",\n      \"@param list refers to the list that is used to generate the hashCode, possibly null\"\n    ]\n  },\n  {\n    \"tag\": \"@return the hash code\",\n    \"alternatives\": [\n      \"@return the calculated hash code\",\n      \"@return the computed hash code\",\n      \"@return the resulting hash code\",\n      \"@return the generated hash code\",\n      \"@return the hash code value\"\n    ]\n  },\n  {\n    \"tag\": \"@param <E> the element type\",\n    \"alternatives\": [\n      \"@param <E> the type of the elements\",\n      \"@param <E> the type of objects in the collection\",\n      \"@param <E> specifies the type of elements\",\n      \"@param <E> indicates the type of the elements\",\n      \"@param <E> defines the element's data type\"\n    ]\n  },\n  {\n    \"tag\": \"@param collection the collection whose contents are the target of the #retailAll operation\",\n    \"alternatives\": [\n      \"@param collection the collection containing the elements to be updated with #retailAll\",\n      \"@param collection refers to the collection that is the target of the #retailAll operation\",\n      \"@param collection specifies the collection whose contents are affected by #retailAll\",\n      \"@param collection denotes the collection on which #retailAll operation is performed\",\n      \"@param collection represents the collection to be modified by #retailAll operation\"\n    ]\n  },\n  {\n    \"tag\": \"@param retain the collection containing the elements to be retained in the returned collection\",\n    \"alternatives\": [\n      \"@param retain the collection with the elements that should be preserved in the final collection\",\n      \"@param retain denotes the collection that contains the elements to be kept in the resulting collection\",\n      \"@param retain represents the collection which contains the elements to be maintained in the returned collection\",\n      \"@param retain specifies the collection that holds the elements that should remain in the return collection\",\n      \"@param retain refers to the collection that includes the elements to be retained in the resulting collection\"\n    ]\n  },\n  {\n    \"tag\": \"@return a <code>List</code> containing all the elements of <code>c</code>\\nthat occur at least once in <code>retain</code>.\",\n    \"alternatives\": [\n      \"@return a <code>List</code> containing elements from <code>c</code> that are present in <code>retain</code>.\",\n      \"@return a <code>List</code> with all the elements of <code>c</code> that exist in <code>retain</code> at least once.\",\n      \"@return a <code>List</code> including all the elements from <code>c</code> that are found at least once in <code>retain</code>.\",\n      \"@return a <code>List</code> that consists of the elements of <code>c</code> that occur at least once in <code>retain</code>.\",\n      \"@return a <code>List</code> that contains all the elements of <code>c</code> that appear at least once in <code>retain</code>.\"\n    ]\n  },\n  {\n    \"tag\": \"@param <E> the element type\",\n    \"alternatives\": [\n      \"@param <E> the type of the elements\",\n      \"@param <E> the type of objects in the collection\",\n      \"@param <E> specifies the type of elements\",\n      \"@param <E> indicates the type of the elements\",\n      \"@param <E> defines the element's data type\"\n    ]\n  },\n  {\n    \"tag\": \"@param collection the collection from which items are removed (in the returned collection)\",\n    \"alternatives\": [\n      \"@param collection the collection that serves as the source of elements to be removed (in the returned collection)\",\n      \"@param collection refers to the collection from which items are extracted (in the returned collection)\",\n      \"@param collection denotes the collection that provides the items to be taken out (in the returned collection)\",\n      \"@param collection represents the collection from which items are deleted (in the returned collection)\",\n      \"@param collection specifies the collection from which items are eliminated (in the returned collection)\"\n    ]\n  },\n  {\n    \"tag\": \"@param remove the items to be removed from the returned <code>collection</code>\",\n    \"alternatives\": [\n      \"@param remove the elements that will be deleted from the resulting <code>collection</code>\",\n      \"@param remove denotes the items that should be excluded from the returned <code>collection</code>\",\n      \"@param remove represents the elements to be taken out from the returned <code>collection</code>\",\n      \"@param remove specifies the items that need to be removed from the <code>collection</code> that will be returned\",\n      \"@param remove refers to the elements that are not included in the returned <code>collection</code>\"\n    ]\n  },\n  {\n    \"tag\": \"@return a <code>List</code> containing all the elements of <code>c</code> except\\nany elements that also occur in <code>remove</code>.\",\n    \"alternatives\": [\n      \"@return a <code>List</code> that includes all the elements of <code>c</code> excluding those that are present in <code>remove</code>.\",\n      \"@return a <code>List</code> consisting of all the elements from <code>c</code> except for the ones that appear in <code>remove</code>.\",\n      \"@return a <code>List</code> that contains all the elements of <code>c</code>, excluding those that occur in <code>remove</code>.\",\n      \"@return a <code>List</code> with all the elements of <code>c</code> except for the ones found in <code>remove</code>.\",\n      \"@return a <code>List</code> including all the elements of <code>c</code> except for those that exist in <code>remove</code>.\"\n    ]\n  },\n  {\n    \"tag\": \"@param <E> the element type\",\n    \"alternatives\": [\n      \"@param <E> the type of the elements\",\n      \"@param <E> the type of objects in the collection\",\n      \"@param <E> specifies the type of elements\",\n      \"@param <E> indicates the type of the elements\",\n      \"@param <E> defines the element's data type\"\n    ]\n  },\n  {\n    \"tag\": \"@return a synchronized list backed by the given list\",\n    \"alternatives\": [\n      \"@return a thread-safe list that is supported by the provided list\",\n      \"@return a synchronized list that shares the underlying list\",\n      \"@return a list that ensures thread safety and uses the given list as support\",\n      \"@return a concurrent list that is based on the given list\",\n      \"@return a list that guarantees synchronization and is backed by the provided list\"\n    ]\n  },\n  {\n    \"tag\": \"@param <E> the element type\",\n    \"alternatives\": [\n      \"@param <E> the type of the elements\",\n      \"@param <E> the type of objects in the collection\",\n      \"@param <E> specifies the type of elements\",\n      \"@param <E> indicates the type of the elements\",\n      \"@param <E> defines the element's data type\"\n    ]\n  },\n  {\n    \"tag\": \"@return an unmodifiable list backed by the given list\",\n    \"alternatives\": [\n      \"@return an immutable list that is based on the provided list\",\n      \"@return a read-only list that is supported by the given list\",\n      \"@return a list that cannot be modified and uses the given list as support\",\n      \"@return a list that guarantees immutability and is backed by the provided list\",\n      \"@return a list that is not modifiable and shares the underlying list\"\n    ]\n  },\n  {\n    \"tag\": \"@param <E> the element type\",\n    \"alternatives\": [\n      \"@param <E> the type of the elements\",\n      \"@param <E> the type of objects in the collection\",\n      \"@param <E> specifies the type of elements\",\n      \"@param <E> indicates the type of the elements\",\n      \"@param <E> defines the element's data type\"\n    ]\n  },\n  {\n    \"tag\": \"@return a predicated list backed by the given list\",\n    \"alternatives\": [\n      \"@return a list that is filtered based on a condition and uses the given list as support\",\n      \"@return a list that is constrained by a predicate and is supported by the provided list\",\n      \"@return a list that is bound by a condition and shares the underlying list\",\n      \"@return a restricted list that applies a predicate to the elements and is backed by the given list\",\n      \"@return a list that is limited by a predicate and is backed by the provided list\"\n    ]\n  },\n  {\n    \"tag\": \"@param <E> the element type\",\n    \"alternatives\": [\n      \"@param <E> the type of the elements\",\n      \"@param <E> the type of objects in the collection\",\n      \"@param <E> specifies the type of elements\",\n      \"@param <E> indicates the type of the elements\",\n      \"@param <E> defines the element's data type\"\n    ]\n  },\n  {\n    \"tag\": \"@return a transformed list backed by the given list\",\n    \"alternatives\": [\n      \"@return a list that is modified according to a transformation and uses the given list as support\",\n      \"@return a list that is altered by a mapping function and is supported by the provided list\",\n      \"@return a list that is changed based on a conversion and shares the underlying list\",\n      \"@return a modified list that applies a transformation to the elements and is backed by the given list\",\n      \"@return a list that is transformed by a function and is backed by the provided list\"\n    ]\n  },\n  {\n    \"tag\": \"@param <E> the element type\",\n    \"alternatives\": [\n      \"@param <E> the type of the elements\",\n      \"@param <E> the type of objects in the collection\",\n      \"@param <E> specifies the type of elements\",\n      \"@param <E> indicates the type of the elements\",\n      \"@param <E> defines the element's data type\"\n    ]\n  }\n]"