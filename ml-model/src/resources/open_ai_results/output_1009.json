"[\n  {\n    \"tag\": \"@throws NullPointerException if <code>array</code> is <code>null</code>\",\n    \"alternatives\": [\n      \"@throws NullPointerException if <code>array</code> is <code>null</code>\",\n      \"@throws NullPointerException if <code>array</code> is <code>null</code>\",\n      \"@throws NullPointerException if <code>array</code> is <code>null</code>\",\n      \"@throws NullPointerException if <code>array</code> is <code>null</code>\",\n      \"@throws NullPointerException if <code>array</code> is <code>null</code>\"\n    ]\n  },\n  {\n    \"tag\": \"@param factory the factory to call, not null\",\n    \"alternatives\": [\n      \"@param factory the factory to invoke, not null\",\n      \"@param factory the factory to invoke, must not be null\",\n      \"@param factory the callable factory, not null\",\n      \"@param factory the callable factory to invoke, not null\",\n      \"@param factory the factory to call, must not be null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the factory is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the factory is null\",\n      \"@throws NullPointerException if the factory is null\",\n      \"@throws NullPointerException if the factory is null\",\n      \"@throws NullPointerException if the factory is null\",\n      \"@throws NullPointerException if the factory is null\"\n    ]\n  },\n  {\n    \"tag\": \"@param factory the factory to call, not null\",\n    \"alternatives\": [\n      \"@param factory the factory to invoke, not null\",\n      \"@param factory the factory to invoke, must not be null\",\n      \"@param factory the callable factory, not null\",\n      \"@param factory the callable factory to invoke, not null\",\n      \"@param factory the factory to call, must not be null\"\n    ]\n  },\n  {\n    \"tag\": \"@return the transformed result\",\n    \"alternatives\": [\n      \"@return the converted result\",\n      \"@return the modified output\",\n      \"@return the transformed outcome\",\n      \"@return the result after transformation\",\n      \"@return the result obtained after conversion\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the specified initial size\\n is negative\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the initial size specified\\n is negative\",\n      \"@throws IllegalArgumentException if the specified initial size\\n is less than zero\",\n      \"@throws IllegalArgumentException if the given initial size\\n is negative\",\n      \"@throws IllegalArgumentException if the specified size at the start\\n is negative\",\n      \"@throws IllegalArgumentException if the initial size\\n is negative\"\n    ]\n  },\n  {\n    \"tag\": \"@return true if the stack is currently empty\",\n    \"alternatives\": [\n      \"@return true if the stack is presently empty\",\n      \"@return true if the stack is currently without any elements\",\n      \"@return true if the stack is currently devoid of any items\",\n      \"@return true if the stack is empty at the moment\",\n      \"@return true if the stack is currently without any contents\"\n    ]\n  },\n  {\n    \"tag\": \"@throws EmptyStackException if the stack is empty\",\n    \"alternatives\": [\n      \"@throws EmptyStackException in case the stack is empty\",\n      \"@throws EmptyStackException when the stack is devoid of elements\",\n      \"@throws EmptyStackException if there are no items in the stack\",\n      \"@throws EmptyStackException if the stack does not have any elements\",\n      \"@throws EmptyStackException if the stack is void of any items\"\n    ]\n  },\n  {\n    \"tag\": \"@throws EmptyStackException if the stack is empty\",\n    \"alternatives\": [\n      \"@throws EmptyStackException in case the stack is empty\",\n      \"@throws EmptyStackException when the stack is devoid of elements\",\n      \"@throws EmptyStackException if there are no items in the stack\",\n      \"@throws EmptyStackException if the stack does not have any elements\",\n      \"@throws EmptyStackException if the stack is void of any items\"\n    ]\n  },\n  {\n    \"tag\": \"@return the item just pushed\",\n    \"alternatives\": [\n      \"@return the recently pushed item\",\n      \"@return the element that was just added\",\n      \"@return the most recently inserted item\",\n      \"@return the item that was just pushed onto the stack\",\n      \"@return the item that was added to the stack most recently\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if set is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if set is null\",\n      \"@throws NullPointerException if set is null\",\n      \"@throws NullPointerException if set is null\",\n      \"@throws NullPointerException if set is null\",\n      \"@throws NullPointerException if set is null\"\n    ]\n  },\n  {\n    \"tag\": \"@param set the set to decorate, must not be null\",\n    \"alternatives\": [\n      \"@param set the set to enhance, must not be null\",\n      \"@param set the set to augment, must not be null\",\n      \"@param set the set to modify, must not be null\",\n      \"@param set the set to embellish, must not be null\",\n      \"@param set the set to decorate, must not be null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the key is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the value is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the key is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key parameter is null\",\n      \"@throws NullPointerException if the key supplied is null\",\n      \"@throws NullPointerException if null is passed as the key\",\n      \"@throws NullPointerException if the key variable is null\"\n    ]\n  },\n  {\n    \"tag\": \"@return the value to which this map maps the specified key,\\n or null if the map contains no mapping for this key\",\n    \"alternatives\": [\n      \"@return the mapped value corresponding to the given key, or null\\n if the map does not hold a mapping for this key\",\n      \"@return the value associated with the specified key, or null if\\n no mapping exists for this key in the map\",\n      \"@return the value associated with the given key, or null if\\n there is no mapping for this key in the map\",\n      \"@return the value to which the specified key is mapped, or\\n null if no mapping is present for this key in the map\",\n      \"@return the value mapped to the provided key, or null if\\n the map does not contain any mapping for this key\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the key is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the key is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\",\n      \"@throws NullPointerException if the key is null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the value is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\"\n    ]\n  },\n  {\n    \"tag\": \"@return the key to which this map maps the specified value,\\n or null if the map contains no mapping for this value.\",\n    \"alternatives\": [\n      \"@return the key associated with the provided value, or null if\\n the map does not contain any mapping for this value\",\n      \"@return the key that is mapped to the given value, or null if\\n no mapping exists for this value in the map\",\n      \"@return the key associated with the specified value, or null if\\n no mapping exists in the map for this value\",\n      \"@return the key to which the specified value is mapped, or null\\n if no mapping is present for this value in the map\",\n      \"@return the key mapped to the provided value, or null if\\n the map does not contain any mapping for this value\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the value is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\",\n      \"@throws NullPointerException if the value is null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NoSuchElementException if this map is empty\",\n    \"alternatives\": [\n      \"@throws NoSuchElementException if the map is empty\",\n      \"@throws NoSuchElementException if there are no entries in the map\",\n      \"@throws NoSuchElementException if the map does not contain any elements\",\n      \"@throws NoSuchElementException if the map lacks any key-value pairs\",\n      \"@throws NoSuchElementException if there are no items in the map\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NoSuchElementException if this map is empty\",\n    \"alternatives\": [\n      \"@throws NoSuchElementException if the map is empty\",\n      \"@throws NoSuchElementException if there are no entries in the map\",\n      \"@throws NoSuchElementException if the map does not contain any elements\",\n      \"@throws NoSuchElementException if the map lacks any key-value pairs\",\n      \"@throws NoSuchElementException if there are no items in the map\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the iterator is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the iterator is null\",\n      \"@throws NullPointerException if the iterator object is null\",\n      \"@throws NullPointerException if the iterator instance is null\",\n      \"@throws NullPointerException if null is passed as the iterator\",\n      \"@throws NullPointerException if a null iterator is provided\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if set is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if set is null\",\n      \"@throws NullPointerException if set is null\",\n      \"@throws NullPointerException if set is null\",\n      \"@throws NullPointerException if set is null\",\n      \"@throws NullPointerException if set is null\"\n    ]\n  }\n]"