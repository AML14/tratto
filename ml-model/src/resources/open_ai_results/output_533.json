"[\n  {\n    \"tag\": \"@return a new list\",\n    \"alternatives\": [\n      \"@return a fresh list\",\n      \"@return a brand new list\",\n      \"@return a newly created list\"\n    ]\n  },\n  {\n    \"tag\": \"@param key the key to retrieve\",\n    \"alternatives\": [\n      \"@param key the key for retrieval\",\n      \"@param key - the key to fetch\",\n      \"@param key - the key for fetching\"\n    ]\n  },\n  {\n    \"tag\": \"@return the <code>Set</code> of values, will return an empty\\n  <code>Set</code> for no mapping\",\n    \"alternatives\": [\n      \"@return the <code>Set</code> containing values, if mapping exists. Otherwise, return an empty\\n  <code>Set</code>.\",\n      \"@return the <code>Set</code> of values associated with the key. If no mapping exists, return an empty\\n  <code>Set</code>.\",\n      \"@return the <code>Set</code> that holds values. Return an empty\\n  <code>Set</code> if there is no mapping.\"\n    ]\n  },\n  {\n    \"tag\": \"@param key the key to remove values from\",\n    \"alternatives\": [\n      \"@param key the key for removing values\",\n      \"@param key - the key to eliminate values from\",\n      \"@param key - the key to delete values associated with\"\n    ]\n  },\n  {\n    \"tag\": \"@return the <code>Set</code> of values removed, will return an empty,\\n  unmodifiable set for no mapping found.\",\n    \"alternatives\": [\n      \"@return the <code>Set</code> of removed values. If no mapping is found, return an empty, unmodifiable set.\",\n      \"@return the <code>Set</code> containing the values that were removed. For no mapping found, return an empty, unmodifiable set.\",\n      \"@return the <code>Set</code> with the values that have been removed. If no mapping was found, return an empty, unmodifiable set.\"\n    ]\n  },\n  {\n    \"tag\": \"@param prototypeStatistics a {@code SummaryStatistics} serving as a\\n     prototype both for the internal aggregate statistics and for\\n     contributing statistics obtained via the\\n     {@code createContributingStatistics()} method.  Being a prototype\\n     means that other objects are initialized by copying this object's state.\\n     If {@code null}, a new, default statistics object is used.  Any statistic\\n     values in the prototype are propagated to contributing statistics\\n     objects and (once) into these aggregate statistics.\",\n    \"alternatives\": [\n      \"@param prototypeStatistics a {@code SummaryStatistics} acting as a\\n     prototype for the internal aggregate stats and for\\n     contributing stats obtained through the\\n     {@code createContributingStatistics()} method. When {@code null}, a new default stats object is used. Any stat\\n     values in the prototype are passed on to contributing stats\\n     objects and (once) to these aggregate stats.\",\n      \"@param prototypeStatistics a {@code SummaryStatistics} that serves as a\\n     prototype for the internal aggregate statistics and for\\n     contributing statistics obtained via the\\n     {@code createContributingStatistics()} method. If {@code null}, a new, default statistics object is used. Any statistical\\n     values in the prototype are passed on to contributing statistics\\n     objects and (once) to these aggregate statistics.\",\n      \"@param prototypeStatistics a {@code SummaryStatistics} which acts as a\\n     prototype both for the internal aggregate statistics and for\\n     contributing statistics obtained via the\\n     {@code createContributingStatistics()} method.  When {@code null}, a new, default statistics object is utilized.  Any statistic\\n     values in the prototype are propagated to contributing statistics\\n     objects and then to these aggregate statistics.\"\n    ]\n  },\n  {\n    \"tag\": \"@param initialStatistics a {@code SummaryStatistics} to serve as the\\n     internal aggregate statistics object.  If {@code null}, a new, default\\n     statistics object is used.\",\n    \"alternatives\": [\n      \"@param initialStatistics a {@code SummaryStatistics} that acts as the\\n     internal aggregate stats object. When {@code null}, a new default\\n     stats object is employed.\",\n      \"@param initialStatistics a {@code SummaryStatistics} used as the\\n     internal aggregate statistics object. If {@code null}, a new default\\n     statistics object is applied.\",\n      \"@param initialStatistics a {@code SummaryStatistics} serving as the\\n     internal aggregate statistics object.  If {@code null}, a new, default\\n     statistics object is applied.\"\n    ]\n  },\n  {\n    \"tag\": \"@param values input array\",\n    \"alternatives\": [\n      \"@param values - the input array\",\n      \"@param values - the array as input\",\n      \"@param values - the array to be used as input\"\n    ]\n  },\n  {\n    \"tag\": \"@param weights array of weights\",\n    \"alternatives\": [\n      \"@param weights - array of weights\",\n      \"@param weights - the weight array\",\n      \"@param weights - the array of weights\"\n    ]\n  },\n  {\n    \"tag\": \"@return the value of the weighted statistic applied to the input array\",\n    \"alternatives\": [\n      \"@return the result of the weighted statistic calculation on the input array\",\n      \"@return the outcome of applying the weighted statistic to the input array\",\n      \"@return the computed value of the weighted statistic on the input array\"\n    ]\n  },\n  {\n    \"tag\": \"@throws MathIllegalArgumentException if either array is null, lengths\\ndo not match, weights contain NaN, negative or infinite values, or\\nweights does not include at least on positive value\",\n    \"alternatives\": [\n      \"@throws MathIllegalArgumentException when either array is null, lengths\\ndo not match, weights contain NaN, negative or infinite values, or\\nweights does not include at least one positive value\",\n      \"@throws MathIllegalArgumentException if either array is null, lengths\\ndo not match, weights contain NaN, negative or infinite values, or\\nweights does not include at least a single positive value\",\n      \"@throws MathIllegalArgumentException if either array is null, lengths\\ndo not match, weights contain NaN, negative or infinite values, or\\nweights does not include at least one positive value\"\n    ]\n  },\n  {\n    \"tag\": \"@param values the input array\",\n    \"alternatives\": [\n      \"@param values - the array of inputs\",\n      \"@param values - the array used as inputs\",\n      \"@param values - the array that acts as inputs\"\n    ]\n  },\n  {\n    \"tag\": \"@param weights array of weights\",\n    \"alternatives\": [\n      \"@param weights - the weight array\",\n      \"@param weights - array of weights\",\n      \"@param weights - the array containing weights\"\n    ]\n  },\n  {\n    \"tag\": \"@param begin the index of the first element to include\",\n    \"alternatives\": [\n      \"@param begin - the starting index to include\",\n      \"@param begin - the index from where to start\",\n      \"@param begin - the position of the first element to include\"\n    ]\n  },\n  {\n    \"tag\": \"@param length the number of elements to include\",\n    \"alternatives\": [\n      \"@param length - the count of elements to include\",\n      \"@param length - the number of items to include\",\n      \"@param length - the amount of elements to include\"\n    ]\n  },\n  {\n    \"tag\": \"@return the value of the weighted statistic applied to the included array entries\",\n    \"alternatives\": [\n      \"@return the result of the weighted statistic calculation on the included array entries\",\n      \"@return the outcome of applying the weighted statistic to the included array entries\",\n      \"@return the computed value of the weighted statistic on the included array entries\"\n    ]\n  },\n  {\n    \"tag\": \"@throws MathIllegalArgumentException if either array is null, lengths\\ndo not match, indices are invalid, weights contain NaN, negative or\\ninfinite values, or weights does not include at least on positive value\",\n    \"alternatives\": [\n      \"@throws MathIllegalArgumentException when either array is null, lengths\\ndo not match, indices are invalid, weights contain NaN, negative or\\ninfinite values, or weights does not include at least one positive value\",\n      \"@throws MathIllegalArgumentException if either array is null, lengths\\ndo not match, indices are invalid, weights contain NaN, negative or\\ninfinite values, or weights does not include at least a single positive value\",\n      \"@throws MathIllegalArgumentException if either array is null, lengths\\ndo not match, indices are invalid, weights contain NaN, negative or\\ninfinite values, or weights does not include at least one positive value\"\n    ]\n  },\n  {\n    \"tag\": \"@return a copy of this\",\n    \"alternatives\": [\n      \"@return a duplicate of this\",\n      \"@return a replica of this\",\n      \"@return an exact copy of this\"\n    ]\n  },\n  {\n    \"tag\": \"@param source SynchronizedSummaryStatistics to copy\",\n    \"alternatives\": [\n      \"@param source - the SynchronizedSummaryStatistics to duplicate\",\n      \"@param source - the SynchronizedSummaryStatistics to make a copy of\",\n      \"@param source - the SynchronizedSummaryStatistics to replicate\"\n    ]\n  }\n]"