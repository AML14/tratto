"output = [\n  {\n    'tag': '@param factory supplier of new, empty lists that will each hold all values\\n    for a given key',\n    'alternatives': [\n      '@param factory supplier of fresh, empty lists that will each contain all values\\n    for a specified key',\n      '@param factory supplier of new, empty arrays that will each store all values\\n   corresponding to a given key',\n      '@param factory supplier of new, empty containers that will each hold all values\\n    for a given key',\n      '@param factory provider of new, empty lists that will each hold all values\\n    for a given key',\n      '@param factory supplier of new, empty lists that will each contain every value\\n    related to a given key'\n    ]\n  },\n  {\n    'tag': '@param map place to store the mapping from each key to its corresponding\\n    values',\n    'alternatives': [\n      '@param map location to store the correspondence between each key and its respective\\n    values',\n      '@param map container to hold the mapping from each key to its related\\n    values',\n      '@param map destination to store the relationship from every key to its corresponding\\n    values',\n      '@param map place to store the association between each key and its corresponding\\n    values',\n      '@param map location to store the mapping between each key and its associated\\n    values'\n    ]\n  },\n  {\n    'tag': '@param factory supplier of new, empty sets that will each hold all values\\n    for a given key',\n    'alternatives': [\n      '@param factory provider of new, empty sets that will each contain all values\\n    for a specified key',\n      '@param factory supplier of fresh, empty sets that will each store all values\\n   corresponding to a given key',\n      '@param factory supplier of new, empty sets that will each store every value\\n    related to a given key',\n      '@param factory provider of new, empty sets that will each hold all values\\n    for a given key',\n      '@param factory supplier of new, empty sets that will each contain every value\\n    associated with a specified key'\n    ]\n  },\n  {\n    'tag': '@param map place to store the mapping from each key to its corresponding\\n    values',\n    'alternatives': [\n      '@param map location to store the correspondence between each key and its respective\\n    values',\n      '@param map container to hold the mapping from each key to its related\\n    values',\n      '@param map destination to store the relationship from every key to its corresponding\\n    values',\n      '@param map place to store the association between each key and its corresponding\\n    values',\n      '@param map location to store the mapping between each key and its associated\\n    values'\n    ]\n  },\n  {\n    'tag': '@param factory supplier of new, empty sorted sets that will each hold\\n    all values for a given key',\n    'alternatives': [\n      '@param factory supplier of fresh, empty sorted sets that will each contain all values\\n    for a specified key',\n      '@param factory provider of new, empty sorted sets that will each store all values\\n   corresponding to a given key',\n      '@param factory supplier of new, empty sorted sets that will each store every value\\n    related to a given key',\n      '@param factory provider of new, empty sorted sets that will each hold all values\\n    for a given key',\n      '@param factory supplier of new, empty sorted sets that will each contain every value\\n    associated with a specified key'\n    ]\n  },\n  {\n    'tag': '@param source any multimap',\n    'alternatives': [\n      '@param source any multi-valued map',\n      '@param source any mapping with multiple values',\n      '@param source any map that can have multiple values',\n      '@param source a multimap of any type',\n      '@param source a multidimensional map'\n    ]\n  },\n  {\n    'tag': '@param dest the multimap to copy into; usually empty',\n    'alternatives': [\n      '@param dest the target multimap to duplicate into; typically without contents',\n      '@param dest the destination multimap to replicate into; often devoid of elements',\n      '@param dest the multimap to be copied into; generally empty at this point',\n      '@param dest the multimap to clone into; usually with no existing values',\n      '@param dest the multimap to replicate into; typically with no pre-existing entries'\n    ]\n  },\n  {\n    'tag': '@param multimap the multimap to be wrapped in a synchronized view',\n    'alternatives': [\n      '@param multimap the multimap to be encapsulated within a synchronized perspective',\n      '@param multimap the multimap to be enclosed in a synchronized view',\n      '@param multimap the multimap to convert into a synchronized view',\n      '@param multimap the multimap to be transformed into a synchronized representation',\n      '@param multimap the multimap to be encapsulated in a synchronized outlook'\n    ]\n  },\n  {\n    'tag': '@return a synchronized view of the specified multimap',\n    'alternatives': [\n      '@return a synchronized perspective of the provided multimap',\n      '@return a synchronized representation of the given multimap',\n      '@return a synchronized view of the multimap specified',\n      '@return a synchronized outlook of the specified multimap',\n      '@return a synchronized vantage point of the multimap given'\n    ]\n  },\n  {\n    'tag': '@param delegate the multimap for which an unmodifiable view is to be\\n    returned',\n    'alternatives': [\n      '@param delegate the multimap to obtain an unmodifiable view for',\n      '@param delegate the multimap to retrieve an unmodifiable view of',\n      '@param delegate the multimap for which an unmodifiable perspective must be\\n    obtained',\n      '@param delegate the multimap for which an unmodifiable representation needs to be\\n    returned',\n      '@param delegate the multimap to obtain an unmodifiable outlook for'\n    ]\n  },\n  {\n    'tag': '@return an unmodifiable view of the specified multimap',\n    'alternatives': [\n      '@return an unmodifiable perspective of the given multimap',\n      '@return an unmodifiable representation of the specified multimap',\n      '@return an unmodifiable view of the multimap specified',\n      '@return an unmodifiable outlook of the specified multimap',\n      '@return an unmodifiable vantage point of the multimap given'\n    ]\n  },\n  {\n    'tag': '@param multimap the multimap to be wrapped',\n    'alternatives': [\n      '@param multimap the multimap to be enclosed',\n      '@param multimap the multimap to be covered',\n      '@param multimap the multimap to be encapsulated',\n      '@param multimap the multimap to be encompassed',\n      '@param multimap the multimap to be enclosed within'\n    ]\n  },\n  {\n    'tag': '@return a synchronized view of the specified multimap',\n    'alternatives': [\n      '@return a synchronized perspective of the given multimap',\n      '@return a synchronized representation of the specified multimap',\n      '@return a synchronized view of the multimap specified',\n      '@return a synchronized outlook of the specified multimap',\n      '@return a synchronized vantage point of the multimap given'\n    ]\n  },\n  {\n    'tag': '@param delegate the multimap for which an unmodifiable view is to be\\n    returned',\n    'alternatives': [\n      '@param delegate the multimap to obtain an unmodifiable view for',\n      '@param delegate the multimap to retrieve an unmodifiable view of',\n      '@param delegate the multimap for which an unmodifiable perspective must be\\n    obtained',\n      '@param delegate the multimap for which an unmodifiable representation needs to be\\n    returned',\n      '@param delegate the multimap to obtain an unmodifiable outlook for'\n    ]\n  },\n  {\n    'tag': '@return an unmodifiable view of the specified multimap',\n    'alternatives': [\n      '@return an unmodifiable perspective of the given multimap',\n      '@return an unmodifiable representation of the specified multimap',\n      '@return an unmodifiable view of the multimap specified',\n      '@return an unmodifiable outlook of the specified multimap',\n      '@return an unmodifiable vantage point of the multimap given'\n    ]\n  },\n  {\n    'tag': '@param multimap the multimap to be wrapped',\n    'alternatives': [\n      '@param multimap the multimap to be enclosed',\n      '@param multimap the multimap to be covered',\n      '@param multimap the multimap to be encapsulated',\n      '@param multimap the multimap to be encompassed',\n      '@param multimap the multimap to be enclosed within'\n    ]\n  },\n  {\n    'tag': '@return a synchronized view of the specified multimap',\n    'alternatives': [\n      '@return a synchronized perspective of the given multimap',\n      '@return a synchronized representation of the specified multimap',\n      '@return a synchronized view of the multimap specified',\n      '@return a synchronized outlook of the specified multimap',\n      '@return a synchronized vantage point of the multimap given'\n    ]\n  },\n  {\n    'tag': '@param delegate the multimap for which an unmodifiable view is to be\\n    returned',\n    'alternatives': [\n      '@param delegate the multimap to obtain an unmodifiable view for',\n      '@param delegate the multimap to retrieve an unmodifiable view of',\n      '@param delegate the multimap for which an unmodifiable perspective must be\\n    obtained',\n      '@param delegate the multimap for which an unmodifiable representation needs to be\\n    returned',\n      '@param delegate the multimap to obtain an unmodifiable outlook for'\n    ]\n  },\n  {\n    'tag': '@return an unmodifiable view of the specified multimap',\n    'alternatives': [\n      '@return an unmodifiable perspective of the given multimap',\n      '@return an unmodifiable representation of the specified multimap',\n      '@return an unmodifiable view of the multimap specified',\n      '@return an unmodifiable outlook of the specified multimap',\n      '@return an unmodifiable vantage point of the multimap given'\n    ]\n  },\n  {\n    'tag': '@param collection the collection for which to return an unmodifiable view',\n    'alternatives': [\n      '@param collection the collection to provide an unmodifiable view for',\n      '@param collection the collection to obtain an unmodifiable view of',\n      '@param collection the collection to acquire an unmodifiable perspective of',\n      '@param collection the collection to retrieve an unmodifiable representation of',\n      '@param collection the collection to access an unmodifiable outlook of'\n    ]\n  },\n  {\n    'tag': '@return an unmodifiable view of the collection',\n    'alternatives': [\n      '@return an unmodifiable perspective of the collection',\n      '@return an unmodifiable representation of the collection',\n      '@return an unmodifiable view of the collection',\n      '@return an unmodifiable outlook of the collection',\n      '@return an unmodifiable vantage point of the collection'\n    ]\n  }\n]"