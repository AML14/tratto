"output=[\n  {\n    'tag': '@return safety factor',\n    'alternatives': [\n      '@return factor for ensuring safety',\n      '@return factor that ensures safety',\n      '@return factor to guarantee safety',\n      '@return safety coefficient',\n      '@return factor ensuring safety'\n    ]\n  },\n  {\n    'tag': '@param safety safety factor',\n    'alternatives': [\n      '@param safety factor that ensures safety',\n      '@param factor that ensures safety of the process',\n      '@param safety coefficient to guarantee safety',\n      '@param factor for ensuring the safety of the process',\n      '@param safety factor ensuring process safety'\n    ]\n  },\n  {\n    'tag': '@return minimal reduction factor',\n    'alternatives': [\n      '@return factor for minimal reduction',\n      '@return factor that minimizes reduction',\n      '@return factor to achieve minimal reduction',\n      '@return minimal factor for reducing',\n      '@return factor that reduces minimally'\n    ]\n  },\n  {\n    'tag': '@param minReduction minimal reduction factor',\n    'alternatives': [\n      '@param minReduction factor that minimizes reduction',\n      '@param minimal reduction factor minReduction',\n      '@param factor for minimal reduction of minReduction',\n      '@param minReduction factor to achieve minimal reduction',\n      '@param factor that reduces minimally, minReduction'\n    ]\n  },\n  {\n    'tag': '@return maximal growth factor',\n    'alternatives': [\n      '@return factor for maximal growth',\n      '@return factor that maximizes growth',\n      '@return factor to achieve maximal growth',\n      '@return maximal factor for growing',\n      '@return factor that grows maximally'\n    ]\n  },\n  {\n    'tag': '@param maxGrowth maximal growth factor',\n    'alternatives': [\n      '@param maxGrowth factor that maximizes growth',\n      '@param maximal growth factor maxGrowth',\n      '@param factor for maximal growth of maxGrowth',\n      '@param maxGrowth factor to achieve maximal growth',\n      '@param factor that grows maximally, maxGrowth'\n    ]\n  },\n  {\n    'tag': '@param yDotK derivatives computed during the first stages',\n    'alternatives': [\n      '@param yDotK derivatives computed during initial stages',\n      '@param derivatives yDotK computed during the first steps',\n      '@param computed derivatives yDotK during the initial stages',\n      '@param yDotK derivatives calculated during the first iterations',\n      '@param derivatives yDotK calculated during the early stages'\n    ]\n  },\n  {\n    'tag': '@param y0 estimate of the step at the start of the step',\n    'alternatives': [\n      '@param y0 estimated value of the step at the beginning',\n      '@param y0 estimate of the step at the initial point',\n      '@param y0 approximate value at the start of the step',\n      '@param y0 estimation of the step at the starting point',\n      '@param y0 guess of the step at the outset'\n    ]\n  },\n  {\n    'tag': '@param y1 estimate of the step at the end of the step',\n    'alternatives': [\n      '@param y1 estimated value of the step at the conclusion',\n      '@param y1 estimation of the step at the conclusion',\n      '@param y1 approximate value at the end of the step',\n      '@param y1 guess of the step at the termination',\n      '@param y1 estimate of the step at the end point'\n    ]\n  },\n  {\n    'tag': '@param h current step',\n    'alternatives': [\n      '@param h current time step',\n      '@param h current interval size',\n      '@param h current time interval',\n      '@param h present step',\n      '@param h current step size'\n    ]\n  },\n  {\n    'tag': '@return error ratio, greater than 1 if step should be rejected',\n    'alternatives': [\n      '@return error ratio, if it exceeds 1 the step must be rejected',\n      '@return error ratio, if greater than 1 indicates a rejected step',\n      '@return error ratio, if greater than 1 means the step is not accepted',\n      '@return error ratio, step should be rejected if it is higher than 1',\n      '@return error ratio, if above 1 the step should be discarded'\n    ]\n  },\n  {\n    'tag': '@param name name of the method',\n    'alternatives': [\n      '@param name method name',\n      '@param name the name given to the method',\n      '@param method name name',\n      '@param name the name of the procedure',\n      '@param name the designated name of the routine'\n    ]\n  },\n  {\n    'tag': '@param fsal indicate that the method is an <i>fsal</i>',\n    'alternatives': [\n      '@param fsal specify if the method is an <i>fsal</i>',\n      '@param fsal signal whether the method is an <i>fsal</i>',\n      '@param fsal indicate whether the method is an <i>fsal</i>',\n      '@param fsal denotes that the method is an <i>fsal</i>',\n      '@param fsal reveal that the method is an <i>fsal</i>'\n    ]\n  },\n  {\n    'tag': '@param c time steps from Butcher array (without the first zero)',\n    'alternatives': [\n      '@param c time steps from Butcher array (excluding the initial zero)',\n      '@param c time steps from Butcher array (excluding the first zero)',\n      '@param c time steps from Butcher array (omitting the initial zero)',\n      '@param c time steps from Butcher array (without the leading zero)',\n      '@param c time steps from Butcher array (without the first element)'\n    ]\n  },\n  {\n    'tag': '@param a internal weights from Butcher array (without the first empty row)',\n    'alternatives': [\n      '@param a internal weights from Butcher array (excluding the initial empty row)',\n      '@param a internal weights from Butcher array (excluding the first empty row)',\n      '@param a internal weights from Butcher array (omitting the initial empty row)',\n      '@param a internal weights from Butcher array (without the leading empty row)',\n      '@param a internal weights from Butcher array (without the first row)'\n    ]\n  },\n  {\n    'tag': '@param b propagation weights for the high order method from Butcher array',\n    'alternatives': [\n      '@param b propagation weights for the high order method within Butcher array',\n      '@param b propagation weights from Butcher array for high order method',\n      '@param b propagation weights for high order method obtained from Butcher array',\n      '@param b propagation weights for high order method based on Butcher array',\n      '@param b propagation weights for high order method according to Butcher array'\n    ]\n  },\n  {\n    'tag': '@param prototype prototype of the step interpolator to use',\n    'alternatives': [\n      '@param prototype step interpolator prototype to utilize',\n      '@param prototype interpolator prototype of the step to employ',\n      '@param prototype step interpolator to be applied',\n      '@param prototype step interpolator pattern to use',\n      '@param prototype step interpolator template to utilize'\n    ]\n  },\n  {\n    'tag': '@param minStep minimal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n    'alternatives': [\n      '@param minStep smallest step (sign is unimportant, regardless of\\nintegration direction, forward or backward), the final step can\\nbe lower than this',\n      '@param minStep minimum step (sign doesn\\'t matter, irrespective of integration direction, forward or backward), the last step can be shorter than this',\n      '@param minStep smallest permissible step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe tinier than this',\n      '@param minStep minimal step size (sign is unimportant, regardless of\\nintegration direction, forward or backward), the final step can\\nbe shorter than this',\n      '@param minStep smallest allowed step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this'\n    ]\n  },\n  {\n    'tag': '@param maxStep maximal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n    'alternatives': [\n      '@param maxStep largest step (sign is unimportant, regardless of\\nintegration direction, forward or backward), the final step can\\nbe lower than this',\n      '@param maxStep maximum step (sign doesn\\'t matter, irrespective of integration direction, forward or backward), the last step can be shorter than this',\n      '@param maxStep biggest permissible step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe tinier than this',\n      '@param maxStep maximum step size (sign is unimportant, regardless of\\nintegration direction, forward or backward), the final step can\\nbe shorter than this',\n      '@param maxStep largest allowed step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this'\n    ]\n  },\n  {\n    'tag': '@param scalAbsoluteTolerance allowed absolute error',\n    'alternatives': [\n      '@param scalAbsoluteTolerance permissible absolute error',\n      '@param scalAbsoluteTolerance acceptable absolute error',\n      '@param scalAbsoluteTolerance allowed error in absolute terms',\n      '@param scalAbsoluteTolerance tolerable absolute error',\n      '@param scalAbsoluteTolerance admissible absolute error'\n    ]\n  },\n  {\n    'tag': '@param scalRelativeTolerance allowed relative error',\n    'alternatives': [\n      '@param scalRelativeTolerance permissible relative error',\n      '@param scalRelativeTolerance acceptable relative error',\n      '@param scalRelativeTolerance allowed error in relative terms',\n      '@param scalRelativeTolerance tolerable relative error',\n      '@param scalRelativeTolerance admissible relative error'\n    ]\n  },\n  {\n    'tag': '@param name name of the method',\n    'alternatives': [\n      '@param name method name',\n      '@param name the name given to the method',\n      '@param method name name',\n      '@param name the name of the procedure',\n      '@param name the designated name of the routine'\n    ]\n  },\n  {\n    'tag': '@param fsal indicate that the method is an <i>fsal</i>',\n    'alternatives': [\n      '@param fsal specify if the method is an <i>fsal</i>',\n      '@param fsal signal whether the method is an <i>fsal</i>',\n      '@param fsal indicate whether the method is an <i>fsal</i>',\n      '@param fsal denotes that the method is an <i>fsal</i>',\n      '@param fsal reveal that the method is an <i>fsal</i>'\n    ]\n  },\n  {\n    'tag': '@param c time steps from Butcher array (without the first zero)',\n    'alternatives': [\n      '@param c time steps from Butcher array (excluding the initial zero)',\n      '@param c time steps from Butcher array (excluding the first zero)',\n      '@param c time steps from Butcher array (omitting the initial zero)',\n      '@param c time steps from Butcher array (without the leading zero)',\n      '@param c time steps from Butcher array (without the first element)'\n    ]\n  },\n  {\n    'tag': '@param a internal weights from Butcher array (without the first empty row)',\n    'alternatives': [\n      '@param a internal weights from Butcher array (excluding the initial empty row)',\n      '@param a internal weights from Butcher array (excluding the first empty row)',\n      '@param a internal weights from Butcher array (omitting the initial empty row)',\n      '@param a internal weights from Butcher array (without the leading empty row)',\n      '@param a internal weights from Butcher array (without the first row)'\n    ]\n  }\n]"