"output = [\n  {\n    'tag': '@param p1 first point belonging to the line (this can be any point)',\n    'alternatives': [\n      '@param p1 first spatial point that belongs to the line (this can be any point)',\n      '@param p1 first point on the line (this can be any point)',\n      '@param p1 initial point belonging to the line (this can be any point)',\n      '@param p1 first point associated with the line (this can be any point)',\n      '@param p1 the initial point that belongs to the line (this can be any point)'\n    ]\n  },\n  {\n    'tag': '@param p2 second point belonging to the line (this can be any point, different from p1)',\n    'alternatives': [\n      '@param p2 second spatial point that belongs to the line (this can be any point, different from p1)',\n      '@param p2 second point on the line (this can be any point, different from p1)',\n      '@param p2 final point belonging to the line (this can be any point, different from p1)',\n      '@param p2 second point associated with the line (this can be any point, different from p1)',\n      '@param p2 the final point that belongs to the line (this can be any point, different from p1)'\n    ]\n  },\n  {\n    'tag': '@return tolerance below which points are considered identical',\n    'alternatives': [\n      '@return smallest allowable difference between points to be considered identical',\n      '@return threshold at which points are considered identical',\n      '@return maximum allowable difference between points to be considered the same',\n      '@return amount by which points can differ and still be considered identical',\n      '@return smallest acceptable discrepancy between points for them to be deemed identical'\n    ]\n  },\n  {\n    'tag': '@return a new instance, with reversed direction',\n    'alternatives': [\n      '@return a new object, but with the opposite direction',\n      '@return the instance object, but with reversed orientation',\n      '@return a new instance that has the opposite direction',\n      '@return a new object that is the opposite of the original instance in terms of direction',\n      '@return a newly created instance that has the direction reversed'\n    ]\n  },\n  {\n    'tag': '@return normalized direction vector',\n    'alternatives': [\n      '@return direction vector that has been normalized',\n      '@return unit vector representing the direction',\n      '@return direction vector that has been standardized',\n      '@return direction vector that has been normalized in length',\n      '@return unit vector indicating the direction'\n    ]\n  },\n  {\n    'tag': '@return line point closest to the origin',\n    'alternatives': [\n      '@return line point that is nearest to the origin',\n      '@return closest point on the line to the origin',\n      '@return line point that is closest to the origin',\n      '@return point on the line that is nearest to the origin',\n      '@return point on the line that is closest to the origin'\n    ]\n  },\n  {\n    'tag': '@param point point to check',\n    'alternatives': [\n      '@param point point for verification',\n      '@param point point for examination',\n      '@param point point to be checked',\n      '@param point point to validate',\n      '@param point point to verify'\n    ]\n  },\n  {\n    'tag': '@return abscissa of the point',\n    'alternatives': [\n      '@return the horizontal coordinate of the point',\n      '@return the x-coordinate of the point',\n      '@return the abscissa value of the point',\n      '@return the first coordinate of the point',\n      '@return the position of the point on the x-axis'\n    ]\n  },\n  {\n    'tag': '@param abscissa desired abscissa for the point',\n    'alternatives': [\n      '@param abscissa the intended horizontal coordinate for the point',\n      '@param abscissa the desired x-coordinate for the point',\n      '@param abscissa the desired abscissa value for the point',\n      '@param abscissa the desired first coordinate for the point',\n      '@param abscissa the target position on the x-axis for the point'\n    ]\n  },\n  {\n    'tag': '@return one point belonging to the line, at specified abscissa',\n    'alternatives': [\n      '@return a point on the line that has the given abscissa',\n      '@return a point associated with the line, with the specified abscissa',\n      '@return a point from the line, located at the provided abscissa',\n      '@return one of the points on the line, with the abscissa specified',\n      '@return a line point at the specified abscissa value'\n    ]\n  },\n  {\n    'tag': '@param vector n-dimension point of the space',\n    'alternatives': [\n      '@param vector n-dimensional spatial point',\n      '@param vector point in an n-dimensional space',\n      '@param vector point with n dimensions in space',\n      '@param vector point with n components in space',\n      '@param vector n-dimension point in the spatial domain'\n    ]\n  },\n  {\n    'tag': '@return (n-1)-dimension point of the sub-space corresponding to\\nthe specified space point',\n    'alternatives': [\n      '@return sub-space point with (n-1) dimensions, corresponding to\\nthe provided spatial point',\n      '@return point in the sub-space with (n-1) dimensions, associated with\\nthe given space point',\n      '@return point in the sub-space, derived from the specified space point, with (n-1) dimensions',\n      '@return sub-space point with (n-1) dimensions that corresponds to\\nthe specified spatial point',\n      '@return (n-1)-dimensional point in the sub-space that corresponds to\\nthe specified point in the space'\n    ]\n  },\n  {\n    'tag': '@param vector (n-1)-dimension point of the sub-space',\n    'alternatives': [\n      '@param vector (n-1)-dimensional spatial point in the sub-space',\n      '@param vector point with (n-1) dimensions in the sub-space',\n      '@param vector point of the sub-space with (n-1) components',\n      '@param vector point with (n-1) dimensions in the sub-space',\n      '@param vector spatial point in the sub-space, with (n-1) dimensions'\n    ]\n  },\n  {\n    'tag': '@return n-dimension point of the space corresponding to the\\nspecified sub-space point',\n    'alternatives': [\n      '@return the space point with n dimensions that corresponds to the\\ngiven sub-space point',\n      '@return the spatial point in the space, with n dimensions that\\nmatches the provided sub-space point',\n      '@return the point in the space with n dimensions that corresponds\\nto the specified sub-space point',\n      '@return the point in the space with n components that corresponds\\nto the given sub-space point',\n      '@return the n-dimensional point in the space that matches the given\\nsub-space point'\n    ]\n  },\n  {\n    'tag': '@param line line to which instance should be compared',\n    'alternatives': [\n      '@param line the line that the instance is compared to',\n      '@param line the comparison reference for the instance',\n      '@param line the line against which the instance is compared',\n      '@param line the line being used for comparison against the instance',\n      '@param line the reference line for comparing with the instance'\n    ]\n  },\n  {\n    'tag': '@return true if the lines are similar',\n    'alternatives': [\n      '@return true if the lines are equivalent',\n      '@return true if the lines possess similarity',\n      '@return true if the lines have resemblance',\n      '@return true if the lines exhibit likeness',\n      '@return true if the lines show similarity'\n    ]\n  },\n  {\n    'tag': '@param p point to check',\n    'alternatives': [\n      '@param p point for verification',\n      '@param p point for examination',\n      '@param p point to be checked',\n      '@param p point to validate',\n      '@param p point to verify'\n    ]\n  },\n  {\n    'tag': '@return true if p belongs to the line',\n    'alternatives': [\n      '@return true if p is a part of the line',\n      '@return true if p is associated with the line',\n      '@return true if p is included in the line',\n      '@return true if p is connected to the line',\n      '@return true if p falls within the line'\n    ]\n  },\n  {\n    'tag': '@param p to check',\n    'alternatives': [\n      '@param p for verification',\n      '@param p for examination',\n      '@param p to be checked',\n      '@param p to validate',\n      '@param p to verify'\n    ]\n  },\n  {\n    'tag': '@return distance between the instance and the point',\n    'alternatives': [\n      '@return the measure of the distance between the instance and the point',\n      '@return the calculated distance between the instance and the specified point',\n      '@return the amount of separation between the instance and the point',\n      '@return the spatial gap between the instance and the point',\n      '@return the magnitude of the displacement between the instance and the point'\n    ]\n  },\n  {\n    'tag': '@param line line to check against the instance',\n    'alternatives': [\n      '@param line line for comparison against the instance',\n      '@param line line to examine in relation to the instance',\n      '@param line line to be checked against the instance',\n      '@param line line that is compared with the instance',\n      '@param line line used for validating against the instance'\n    ]\n  },\n  {\n    'tag': '@return shortest distance between the instance and the line',\n    'alternatives': [\n      '@return the minimum distance between the instance and the line',\n      '@return the smallest distance separating the instance from the line',\n      '@return the shortest gap between the instance and the line',\n      '@return the closest distance from the instance to the line',\n      '@return the minimal length between the instance and the line'\n    ]\n  },\n  {\n    'tag': '@param line line to check against the instance',\n    'alternatives': [\n      '@param line line for comparison against the instance',\n      '@param line line to examine in relation to the instance',\n      '@param line line to be checked against the instance',\n      '@param line line that is compared with the instance',\n      '@param line line used for validating against the instance'\n    ]\n  },\n  {\n    'tag': '@return point of the instance closest to another line',\n    'alternatives': [\n      '@return the instance point that is nearest to another line',\n      '@return the closest point on the instance to another line',\n      '@return the point on the instance that is closest to another line',\n      '@return the instance point that is adjacent to another line',\n      '@return the point on the instance that is closest in proximity to another line'\n    ]\n  },\n  {\n    'tag': '@param line other line',\n    'alternatives': [\n      '@param line second line',\n      '@param line different line',\n      '@param line alternate line',\n      '@param line additional line',\n      '@param line secondary line'\n    ]\n  }\n]"