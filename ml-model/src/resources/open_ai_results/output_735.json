"output = [\n  {\n    'tag': '@param convergence convergence threshold in the event time search',\n    'alternatives': [\n      '@param convergence threshold for convergence during event time search',\n      '@param convergence threshold used in event time search',\n      '@param convergence threshold to be used in the event time search'\n    ]\n  },\n  {\n    'tag': '@param maxIterationCount upper limit of the iteration count in\\nthe event time search events.',\n    'alternatives': [\n      '@param upper limit of the iteration count in the event time search events maxIterationCount',\n      '@param maximum number of iterations allowed in event time search events',\n      '@param maximum number of iterations for event time search events'\n    ]\n  },\n  {\n    'tag': '@param handler event handler',\n    'alternatives': [\n      '@param event handler to be used',\n      '@param object responsible for handling events',\n      '@param handler for events'\n    ]\n  },\n  {\n    'tag': '@param maxCheckInterval maximal time interval between switching\\nfunction checks (this interval prevents missing sign changes in\\ncase the integration steps becomes very large)',\n    'alternatives': [\n      \"@param the maximum time interval between function checks to prevent missing sign changes in case the integration steps become very large maxCheckInterval\",\n      \"@param maximal interval between function checks to avoid missing sign changes when the integration steps are very large\",\n      \"@param the maximum time interval between function checks, which prevents missing sign changes in case the integration steps become very large\"\n    ]\n  },\n  {\n    'tag': '@param convergence convergence threshold in the event time search',\n    'alternatives': [\n      '@param convergence threshold for event time search',\n      '@param threshold for convergence during event time search',\n      '@param threshold used in event time search for convergence'\n    ]\n  },\n  {\n    'tag': '@param maxIterationCount upper limit of the iteration count in\\nthe event time search events.',\n    'alternatives': [\n      '@param upper limit of iteration count in event time search events maxIterationCount',\n      '@param maximum number of iterations in event time search events',\n      '@param maximum iteration count allowed in event time search events'\n    ]\n  },\n  {\n    'tag': '@param solver solver to use to locate the event',\n    'alternatives': [\n      '@param solver to be used for locating the event',\n      '@param solver used to find the event',\n      '@param solver for locating the event'\n    ]\n  },\n  {\n    'tag': '@return an unmodifiable collection of the added events handlers',\n    'alternatives': [\n      '@return a collection of added events handlers that cannot be modified',\n      '@return an unmodifiable collection of the event handlers that were added',\n      '@return a collection of event handlers that were added and cannot be modified'\n    ]\n  },\n  {\n    'tag': '@return current value of the state at step start time t<sub>i</sub>',\n    'alternatives': [\n      '@return current value of the state at the starting time t<sub>i</sub> step',\n      '@return the current value of the state at the start time t<sub>i</sub> step',\n      '@return value of the state at the starting time t<sub>i</sub> step'\n    ]\n  },\n  {\n    'tag': '@return current signed value of the stepsize',\n    'alternatives': [\n      '@return current stepsize value with the sign',\n      '@return the current value of the stepsize with the sign',\n      '@return the signed value of the current stepsize'\n    ]\n  },\n  {\n    'tag': '@param maxEvaluations maximal number of function evaluations (negative\\nvalues are silently converted to maximal integer value, thus representing\\nalmost unlimited evaluations)',\n    'alternatives': [\n      '@param maxEvaluations maximum number of function evaluations allowed (negative values are automatically set to the maximum integer value, meaning almost unlimited evaluations)',\n      '@param maximal number of function evaluations allowed (negative values are silently converted to maximal integer value, thus representing almost unlimited evaluations)',\n      '@param maximum number of function evaluations (negative values are automatically converted to maximum integer value, resulting in almost unlimited evaluations)'\n    ]\n  },\n  {\n    'tag': '@return maximal number of functions evaluations',\n    'alternatives': [\n      '@return maximum number of evaluations of the functions',\n      '@return the maximum number of function evaluations',\n      '@return the maximum count of functions evaluations'\n    ]\n  },\n  {\n    'tag': '@return number of evaluations of the differential equations function',\n    'alternatives': [\n      '@return count of evaluations of the differential equations function',\n      '@return the number of evaluations done on the differential equations function',\n      '@return the number of times the differential equations function was evaluated'\n    ]\n  },\n  {\n    'tag': '@param equations differential equations to integrate',\n    'alternatives': [\n      '@param equations to be integrated',\n      '@param differential equations that will be integrated',\n      '@param the equations for integration'\n    ]\n  },\n  {\n    'tag': '@param initialState initial state (time, primary and secondary state vectors)',\n    'alternatives': [\n      '@param initialState initial state (time, primary state vectors, and secondary state vectors)',\n      '@param initial state (time, primary state vectors, and secondary state vectors)',\n      '@param initial state vectors (time, primary, and secondary)'\n    ]\n  },\n  {\n    'tag': '@param finalTime target time for the integration\\n(can be set to a value smaller than {@code t0} for backward integration)',\n    'alternatives': [\n      '@param finalTime target time for integration (can be set to a value smaller than {@code t0} for backward integration)',\n      '@param target time for integration, which can be set to a value smaller than {@code t0} for backward integration',\n      '@param the time at which integration ends (can be set to a value smaller than {@code t0} for backward integration)'\n    ]\n  },\n  {\n    'tag': '@return final state, its time will be the same as {@code finalTime} if\\nintegration reached its target, but may be different if some {@link\\norg.apache.commons.math3.ode.events.FieldEventHandler} stops it at some point.',\n    'alternatives': [\n      '@return final state, its time will be the same as {@code finalTime} if integration reached its target, but its time may differ if stopped by some {@link org.apache.commons.math3.ode.events.FieldEventHandler} at any point.',\n      \"@return final state, its time will be the same as {@code finalTime} if integration reached its target, but it may be different if stopped by some {@link org.apache.commons.math3.ode.events.FieldEventHandler} at any point.\",\n      '@return final state, with a time equal to {@code finalTime} if integration achieved its target, but it may differ if it is stopped at some point by {@link org.apache.commons.math3.ode.events.FieldEventHandler}.'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooSmallException if integration step is too small',\n    'alternatives': [\n      '@throws NumberIsTooSmallException if the integration step size is too small',\n      '@throws NumberIsTooSmallException if the step size for integration is too small',\n      '@throws NumberIsTooSmallException if the integration step is smaller than required'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException if the number of function evaluations exceeds the maximum count',\n      '@throws MaxCountExceededException if the maximum count of function evaluations is surpassed',\n      '@throws MaxCountExceededException if the number of evaluations of the functions exceeds a maximum limit'\n    ]\n  },\n  {\n    'tag': '@throws NoBracketingException if the location of an event cannot be bracketed',\n    'alternatives': [\n      '@throws NoBracketingException if the event location cannot be bracketed',\n      '@throws NoBracketingException if it is not possible to bracket the event location',\n      '@throws NoBracketingException if the location of an event cannot be enclosed'\n    ]\n  },\n  {\n    'tag': '@param fode main first order differential equations set',\n    'alternatives': [\n      '@param fode main set of first order differential equations',\n      '@param fode primary set of differential equations of first order',\n      '@param fode main first order differential equations'\n    ]\n  },\n  {\n    'tag': '@param pode secondary problem, without parameter Jacobian computation skill',\n    'alternatives': [\n      '@param pode secondary problem without the capability to compute parameter Jacobian',\n      '@param pode secondary problem without the ability to calculate parameter Jacobian',\n      '@param pode secondary problem, lacking the skill to compute parameter Jacobian'\n    ]\n  },\n  {\n    'tag': '@param paramsAndSteps parameters and steps to compute the Jacobians df/dp',\n    'alternatives': [\n      '@param paramsAndSteps parameters and steps for the calculation of the Jacobians df/dp',\n      '@param paramsAndSteps parameters and steps used to compute the Jacobians df/dp',\n      '@param paramsAndSteps to compute the Jacobians df/dp, both parameters and steps are required'\n    ]\n  },\n  {\n    'tag': '@return number of equations mapped',\n    'alternatives': [\n      '@return count of mapped equations',\n      '@return the number of equations that were mapped',\n      '@return the count of equations that have been mapped'\n    ]\n  },\n  {\n    'tag': '@return dimension of the complete set of equations',\n    'alternatives': [\n      '@return the dimension of the entire set of equations',\n      '@return the size of the complete set of equations',\n      '@return the dimension of the comprehensive set of equations'\n    ]\n  }\n]"