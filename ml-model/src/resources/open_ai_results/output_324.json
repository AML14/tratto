"output = [\n  {\n    'tag': '@param in source from which to read entries',\n    'alternatives': [\n      '@param in input from which to read entries',\n      '@param source the source to read entries from',\n      '@param from the source to read entries',\n      '@param to read entries from the source',\n      '@param entries source to read from'\n    ]\n  },\n  {\n    'tag': '@param charsetName the character set to use',\n    'alternatives': [\n      '@param charsetName the encoding to utilize',\n      '@param charsetName the charset to employ',\n      '@param charsetName the character set to utilize',\n      '@param charsetName the character encoding to use',\n      '@param charsetName the charset to use'\n    ]\n  },\n  {\n    'tag': '@param comment_re_string regular expression that matches comments.\\n                     Any text that matches comment_re is removed.\\n                     A line that is entirely a comment is ignored.',\n    'alternatives': [\n      '@param comment_re_string regex that matches comments and removes matching text. Ignoring any comment lines.',\n      '@param comment_re_string regex for matching comments and removing corresponding text. Ignoring completely commented lines.',\n      '@param comment_re_string regular expression to match comments. Matching text is removed. Entirely commented lines are ignored.',\n      '@param comment_re_string regex to match comments and eliminate matching text. Disregarding lines that are fully commented.',\n      '@param comment_re_string regex that matches comments and removes matched text. Disregards lines consisting entirely of comments.'\n    ]\n  },\n  {\n    'tag': '@param include_re_string regular expression that matches include directives.\\n                     The expression should define one group that contains\\n                     the include file name.',\n    'alternatives': [\n      '@param include_re_string regex that matches include directives. The pattern must contain one group containing the include file name.',\n      '@param include_re_string regex for matching include directives. The pattern should have one group that captures the include file name.',\n      '@param include_re_string regular expression to match include directives. The pattern should have a single group capturing the include file name.',\n      '@param include_re_string regex to match include directives. The expression should define a group that captures the include file name.',\n      '@param include_re_string regex that matches include directives. The pattern must have one group that captures the include file name.'\n    ]\n  },\n  {\n    'tag': '@param in the InputStream',\n    'alternatives': [\n      '@param in the input stream',\n      '@param in the stream',\n      '@param input the input stream',\n      '@param the InputStream to read from',\n      '@param the input stream'\n    ]\n  },\n  {\n    'tag': '@param filename the file name',\n    'alternatives': [\n      '@param filename the name of the file',\n      '@param filename the name of the file',\n      '@param filename the name of the file',\n      '@param filename the name of the file',\n      '@param filename the name of the file'\n    ]\n  },\n  {\n    'tag': '@throws UnsupportedEncodingException if the charset encoding is not supported',\n    'alternatives': [\n      '@throws UnsupportedEncodingException if the character set encoding is not supported',\n      '@throws UnsupportedEncodingException if the encoding for the character set is not supported',\n      '@throws UnsupportedEncodingException if the encoding of the character set is not supported',\n      '@throws UnsupportedEncodingException if the charset encoding is not available',\n      '@throws UnsupportedEncodingException if the encoding for the charset is not supported'\n    ]\n  },\n  {\n    'tag': '@param filename non-null file name for stream being read',\n    'alternatives': [\n      '@param filename the non-null name of the file being read',\n      '@param filename the file name (non-null) for the stream being read',\n      '@param filename the file name (non-null) for the read stream',\n      '@param filename non-null name of the file being read',\n      '@param filename the name of the file being read (non-null)'\n    ]\n  },\n  {\n    'tag': '@param reader source from which to read entries',\n    'alternatives': [\n      '@param reader input to read entries from',\n      '@param reader the source to read entries from',\n      '@param reader the source from which entries are read',\n      '@param reader the input to read entries',\n      '@param reader source to read entries'\n    ]\n  },\n  {\n    'tag': '@param file initial file to read',\n    'alternatives': [\n      '@param file the initial file to be read',\n      '@param file the file to be read initially',\n      '@param file the file that is initially read',\n      '@param file initial file being read',\n      '@param file the file initially read'\n    ]\n  },\n  {\n    'tag': '@param comment_re regular expression that matches comments.\\n                     Any text that matches comment_re is removed.\\n                     A line that is entirely a comment is ignored.',\n    'alternatives': [\n      '@param comment_re regex that matches comments and removes matching text. Ignoring any comment lines.',\n      '@param comment_re regex for matching comments and removing corresponding text. Ignoring completely commented lines.',\n      '@param comment_re regular expression to match comments. Matching text is removed. Entirely commented lines are ignored.',\n      '@param comment_re regex to match comments and eliminate matching text. Disregarding lines that are fully commented.',\n      '@param comment_re regex that matches comments and removes matched text. Disregards lines consisting entirely of comments.'\n    ]\n  },\n  {\n    'tag': '@param include_re regular expression that matches include directives.\\n                     The expression should define one group that contains\\n                     the include file name.',\n    'alternatives': [\n      '@param include_re regex that matches include directives. The pattern must contain one group containing the include file name.',\n      '@param include_re regex for matching include directives. The pattern should have one group that captures the include file name.',\n      '@param include_re regular expression to match include directives. The pattern should have a single group capturing the include file name.',\n      '@param include_re regex to match include directives. The expression should define a group that captures the include file name.',\n      '@param include_re regex that matches include directives. The pattern must have one group that captures the include file name.'\n    ]\n  },\n  {\n    'tag': '@throws IOException if there is a problem reading the file',\n    'alternatives': [\n      '@throws IOException if there is an issue reading the file',\n      '@throws IOException if an error occurs while reading the file',\n      '@throws IOException if there is a problem when reading the file',\n      '@throws IOException if the file reading encounters an issue',\n      '@throws IOException if there is a difficulty in reading the file'\n    ]\n  },\n  {\n    'tag': '@param file the file to read',\n    'alternatives': [\n      '@param file the file to be read',\n      '@param file the file that needs to be read',\n      '@param file the read file',\n      '@param file the file being read',\n      '@param file the file to be read'\n    ]\n  }\n]"