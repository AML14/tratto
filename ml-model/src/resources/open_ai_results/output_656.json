"output = [\n  {\n    'tag': '@return the variance of this distribution',\n    'alternatives': [\n      '@return the variation of this distribution',\n      '@return the standard deviation of this distribution',\n      '@return the variability of this distribution',\n      '@return the dispersion of this distribution',\n      '@return the scatter of this distribution'\n    ]\n  },\n  {\n    'tag': '@param n Term in the series to calculate (must be larger than 1)',\n    'alternatives': [\n      '@param n Term in the sequence to compute (must be greater than 1)',\n      '@param n Element in the series to compute (must be larger than 1)',\n      '@param n Number in the sequence to calculate (must be greater than 1)',\n      '@param n Element in the sequence to evaluate (must be larger than 1)',\n      '@param n Term to calculate in the series (must be greater than 1)'\n    ]\n  },\n  {\n    'tag': '@param m Exponent (special case {@code m = 1} is the harmonic series).',\n    'alternatives': [\n      '@param m Power (special case {@code m = 1} corresponds to the harmonic series).',\n      '@param m Exponent (special case {@code m = 1} represents the harmonic series).',\n      '@param m Power value (special case {@code m = 1} is the harmonic series).',\n      '@param m Exponent value (special case {@code m = 1} corresponds to the harmonic series).',\n      '@param m Value of the exponent (special case {@code m = 1} represents the harmonic series).'\n    ]\n  },\n  {\n    'tag': '@return the n<sup>th</sup> generalized harmonic number.',\n    'alternatives': [\n      '@return the n<sup>th</sup> generalized harmonic value.',\n      '@return the generalized harmonic number for the n<sup>th</sup> term.',\n      '@return the generalized harmonic number corresponding to the n<sup>th</sup> element.',\n      '@return the value of the n<sup>th</sup> generalized harmonic number.',\n      '@return the n<sup>th</sup> number in the generalized harmonic sequence.'\n    ]\n  },\n  {\n    'tag': '@return lower bound of the support (always 1)',\n    'alternatives': [\n      '@return minimum value of the support (always 1)',\n      '@return smallest possible value in the support (always 1)',\n      '@return lower limit of the support (always 1)',\n      '@return minimum boundary of the support (always 1)',\n      '@return smallest value allowed in the support (always 1)'\n    ]\n  },\n  {\n    'tag': '@return upper bound of the support',\n    'alternatives': [\n      '@return maximum value of the support',\n      '@return largest possible value in the support',\n      '@return upper limit of the support',\n      '@return maximum boundary of the support',\n      '@return highest value allowed in the support'\n    ]\n  },\n  {\n    'tag': '@param numberOfElements Number of elements.',\n    'alternatives': [\n      '@param numberOfElements Count of elements.',\n      '@param numberOfElements Total number of elements.',\n      '@param numberOfElements Quantity of elements.',\n      '@param numberOfElements Size of the collection.',\n      '@param numberOfElements Number of items.'\n    ]\n  },\n  {\n    'tag': '@param exponent Exponent.',\n    'alternatives': [\n      '@param exponent Power.',\n      '@param exponent Value of the exponent.',\n      '@param exponent Exponential factor.',\n      '@param exponent Degree of the term.',\n      '@param exponent Value of the power.'\n    ]\n  },\n  {\n    'tag': '@param rng Random number generator.',\n    'alternatives': [\n      '@param rng Random generator.',\n      '@param rng Randomness source.',\n      '@param rng Randomness generator.',\n      '@param rng Randomness provider.',\n      '@param rng Random number source.'\n    ]\n  },\n  {\n    'tag': '@param numberOfElements Number of elements.',\n    'alternatives': [\n      '@param numberOfElements Count of elements.',\n      '@param numberOfElements Total number of elements.',\n      '@param numberOfElements Quantity of elements.',\n      '@param numberOfElements Size of the dataset.',\n      '@param numberOfElements Number of data points.'\n    ]\n  },\n  {\n    'tag': '@param exponent Exponent.',\n    'alternatives': [\n      '@param exponent Power.',\n      '@param exponent Value of the exponent.',\n      '@param exponent Exponential factor.',\n      '@param exponent Degree of the term.',\n      '@param exponent Value of the power.'\n    ]\n  },\n  {\n    'tag': '@return the number of trials.',\n    'alternatives': [\n      '@return the count of trials.',\n      '@return the quantity of trials.',\n      '@return the total number of trials.',\n      '@return the amount of trials.',\n      '@return the number of attempts.'\n    ]\n  },\n  {\n    'tag': '@return the probability of success.',\n    'alternatives': [\n      '@return the likelihood of success.',\n      '@return the chance of success.',\n      '@return the success probability.',\n      '@return the possibility of success.',\n      '@return the achievement probability.'\n    ]\n  },\n  {\n    'tag': '@return lower bound of the support (0 or the number of trials)',\n    'alternatives': [\n      '@return minimum value of the support (0 or the number of trials)',\n      '@return smallest possible value in the support (0 or the number of trials)',\n      '@return lower limit of the support (0 or the number of trials)',\n      '@return minimum boundary of the support (0 or the number of trials)',\n      '@return smallest value allowed in the support (0 or the number of trials)'\n    ]\n  },\n  {\n    'tag': '@return upper bound of the support (number of trials or 0)',\n    'alternatives': [\n      '@return maximum value of the support (number of trials or 0)',\n      '@return largest possible value in the support (number of trials or 0)',\n      '@return upper limit of the support (number of trials or 0)',\n      '@return maximum boundary of the support (number of trials or 0)',\n      '@return highest value allowed in the support (number of trials or 0)'\n    ]\n  },\n  {\n    'tag': '@param <T> type of the enumeration and vector elements',\n    'alternatives': [\n      '@param <T> type of the enumeration and elements in the vector',\n      '@param <T> type of the enumeration and elements in the array',\n      '@param <T> type of the enumeration and elements in the list',\n      '@param <T> type of the enumeration and elements in the collection',\n      '@param <T> type of the enumeration and elements in the set'\n    ]\n  },\n  {\n    'tag': '@param e an enumeration to convert to a Vector',\n    'alternatives': [\n      '@param e an enumeration to transform into a Vector',\n      '@param e an enumeration to change into a Vector',\n      '@param e an enumeration to convert into a Vector',\n      '@param e an enumeration to translate into a Vector',\n      '@param e an enumeration to modify into a Vector'\n    ]\n  },\n  {\n    'tag': '@return a vector containing the elements of the enumeration',\n    'alternatives': [\n      '@return a vector that holds the elements of the enumeration',\n      '@return a vector with the elements of the enumeration',\n      '@return a vector including the elements of the enumeration',\n      '@return a vector composed of the elements of the enumeration',\n      '@return a vector containing the items from the enumeration'\n    ]\n  },\n  {\n    'tag': '@param <T> type of the input list elements, and type of the innermost output list elements',\n    'alternatives': [\n      '@param <T> type of the elements in the input list, and type of the innermost elements in the output list',\n      '@param <T> type of the list elements, and type of the innermost output elements',\n      '@param <T> type of the elements found in the input list, and type of the innermost elements in the output list',\n      '@param <T> type of the list items, and type of the innermost output items',\n      '@param <T> type of the elements in the input list, and type of the elements at the innermost level in the output list'\n    ]\n  },\n  {\n    'tag': '@param dims number of dimensions:  that is, size of each innermost list',\n    'alternatives': [\n      '@param dims number of dimensions: that is, the length of each innermost list',\n      '@param dims size of each innermost list: that is, the number of dimensions',\n      '@param dims number of dimensions: which represents the length of each innermost list',\n      '@param dims size of each innermost list: which indicates the number of dimensions',\n      '@param dims number of dimensions: indicating the size of each innermost list'\n    ]\n  },\n  {\n    'tag': '@param start initial index',\n    'alternatives': [\n      '@param start starting index',\n      '@param start initial position',\n      '@param start first index',\n      '@param start initial point',\n      '@param start beginning index'\n    ]\n  },\n  {\n    'tag': '@param objs list of elements to',\n    'alternatives': [\n      '@param objs array of elements to',\n      '@param objs collection of elements to',\n      '@param objs set of elements to',\n      '@param objs sequence of elements to',\n      '@param objs group of elements to'\n    ]\n  },\n  {\n    'tag': '@return list of lists of length dims, each of which combines elements from objs',\n    'alternatives': [\n      '@return list of lists with size dims, each consisting of elements from objs',\n      '@return list of lists of length dims, combining elements from objs in each',\n      '@return list of lists with size dims, where elements from objs are merged in each',\n      '@return list of lists of length dims, where each contains elements combined from objs',\n      '@return list of lists with size dims, where elements from objs are mixed in each'\n    ]\n  },\n  {\n    'tag': '@param arity size of each innermost list',\n    'alternatives': [\n      '@param arity length of each innermost list',\n      '@param arity count of each innermost list',\n      '@param arity number of items in each innermost list',\n      '@param arity size of elements in each innermost list',\n      '@param arity quantity of elements in each innermost list'\n    ]\n  },\n  {\n    'tag': '@param start initial value',\n    'alternatives': [\n      '@param start starting value',\n      '@param start initial number',\n      '@param start first value',\n      '@param start initial quantity',\n      '@param start beginning amount'\n    ]\n  }\n]"