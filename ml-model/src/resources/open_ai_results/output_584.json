"output=[\n  {\n    'tag': '@param yDDot placeholder array where to put the second time derivative\nof the state vector',\n    'alternatives': [\n      '@param yDDot placeholder array where to store the second time derivative\nof the state vector',\n      '@param yDDot array where to store the second time derivative of the state vector',\n      '@param yDDot array to hold the second time derivative of the state vector'\n    ]\n  },\n  {\n    'tag': '@param name name of the parameter to check',\n    'alternatives': [\n      '@param name parameter name to verify',\n      '@param name parameter name that needs to be checked',\n      '@param name parameter name to validate'\n    ]\n  },\n  {\n    'tag': '@param names names of the supported parameters',\n    'alternatives': [\n      '@param names supported parameters',\n      '@param names of the parameters that are supported',\n      '@param names of parameters that are valid'\n    ]\n  },\n  {\n    'tag': '@param names names of the supported parameters',\n    'alternatives': [\n      '@param names supported parameters',\n      '@param names of the parameters that are supported',\n      '@param names of parameters that are valid'\n    ]\n  },\n  {\n    'tag': '@return the name of the unknown parameter.',\n    'alternatives': [\n      '@return unknown parameter name',\n      '@return name of the parameter that is not known',\n      '@return name of the parameter that is unknown'\n    ]\n  },\n  {\n    'tag': '@param name parameter name.',\n    'alternatives': [\n      '@param name name of the parameter.',\n      '@param name of the parameter to consider.',\n      '@param name of the parameter that is required.'\n    ]\n  },\n  {\n    'tag': '@param model model to add at the end of the instance',\n    'alternatives': [\n      '@param model model to append to the instance',\n      '@param model model to attach to the end of the instance',\n      '@param model model to insert at the end of the instance'\n    ]\n  },\n  {\n    'tag': '@throws MathIllegalArgumentException if the model to append is not\ncompatible with the instance (dimension of the state vector,\npropagation direction, hole between the dates)',\n    'alternatives': [\n      '@throws MathIllegalArgumentException if the model to add is not\ncompatible with the instance (state vector dimension,\npropagation direction, gap between dates)',\n      '@throws MathIllegalArgumentException if the model to attach is not\ncompatible with the instance (state vector dimension,\npropagation direction, interval between the dates)',\n      '@throws MathIllegalArgumentException if the model to insert is not\ncompatible with the instance (state vector dimension,\npropagation direction, interval between the dates)'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded\nduring step finalization',\n    'alternatives': [\n      '@throws MaxCountExceededException if the number of function evaluations exceeds\nduring step completion',\n      '@throws MaxCountExceededException if the maximum count of function evaluations is exceeded\nduring step finalization',\n      '@throws MaxCountExceededException if the number of function evaluations goes beyond\nduring step finalization'\n    ]\n  },\n  {\n    'tag': '@param interpolator interpolator for the last accepted step.',\n    'alternatives': [\n      '@param interpolator interpolator used for the latest accepted step',\n      '@param interpolator interpolator employed for the most recent accepted step',\n      '@param interpolator interpolator utilized for the last approved step'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded\nduring step finalization',\n    'alternatives': [\n      '@throws MaxCountExceededException if the number of function evaluations exceeds\nduring step completion',\n      '@throws MaxCountExceededException if the maximum count of function evaluations is exceeded\nduring step finalization',\n      '@throws MaxCountExceededException if the number of function evaluations goes beyond\nduring step finalization'\n    ]\n  },\n  {\n    'tag': '@return initial integration time',\n    'alternatives': [\n      '@return integration start time',\n      '@return initial time of integration',\n      '@return starting time of integration'\n    ]\n  },\n  {\n    'tag': '@return final integration time',\n    'alternatives': [\n      '@return integration end time',\n      '@return final time of integration',\n      '@return ending time of integration'\n    ]\n  },\n  {\n    'tag': '@return interpolation point time',\n    'alternatives': [\n      '@return time of interpolation point',\n      '@return time at the interpolation point',\n      '@return time for the interpolated point'\n    ]\n  },\n  {\n    'tag': '@param time time of the interpolated point',\n    'alternatives': [\n      '@param time interpolated point time',\n      '@param time of the point being interpolated',\n      '@param time for the point of interpolation'\n    ]\n  },\n  {\n    'tag': '@return state vector at time {@link #getInterpolatedTime}',\n    'alternatives': [\n      '@return state vector at {@link #getInterpolatedTime}',\n      '@return state vector for time {@link #getInterpolatedTime}',\n      '@return state vector corresponding to time {@link #getInterpolatedTime}'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException if the number of function evaluations exceeds',\n      '@throws MaxCountExceededException if the maximum count of function evaluations is exceeded',\n      '@throws MaxCountExceededException if the number of function evaluations goes beyond'\n    ]\n  },\n  {\n    'tag': '@return derivatives of the state vector at time {@link #getInterpolatedTime}',\n    'alternatives': [\n      '@return state vector derivatives at {@link #getInterpolatedTime}',\n      '@return state vector derivative for time {@link #getInterpolatedTime}',\n      '@return state vector rate of change at time {@link #getInterpolatedTime}'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException if the number of function evaluations exceeds',\n      '@throws MaxCountExceededException if the maximum count of function evaluations is exceeded',\n      '@throws MaxCountExceededException if the number of function evaluations goes beyond'\n    ]\n  },\n  {\n    'tag': '@param secondaryStateIndex index of the secondary set, as returned by {@link\norg.apache.commons.math3.ode.ExpandableStatefulODE#addSecondaryEquations(\norg.apache.commons.math3.ode.SecondaryEquations)\nExpandableStatefulODE.addSecondaryEquations(SecondaryEquations)}',\n    'alternatives': [\n      '@param secondaryStateIndex index of the secondary set obtained from {@link\norg.apache.commons.math3.ode.ExpandableStatefulODE#addSecondaryEquations(\norg.apache.commons.math3.ode.SecondaryEquations)\nExpandableStatefulODE.addSecondaryEquations(SecondaryEquations)}',\n      '@param secondaryStateIndex index of the secondary set, as provided by {@link\norg.apache.commons.math3.ode.ExpandableStatefulODE#addSecondaryEquations(\norg.apache.commons.math3.ode.SecondaryEquations)\nExpandableStatefulODE.addSecondaryEquations(SecondaryEquations)}',\n      '@param secondaryStateIndex index of the secondary set, as given by {@link\norg.apache.commons.math3.ode.ExpandableStatefulODE#addSecondaryEquations(\norg.apache.commons.math3.ode.SecondaryEquations)\nExpandableStatefulODE.addSecondaryEquations(SecondaryEquations)}'\n    ]\n  },\n  {\n    'tag': '@return interpolated secondary state at the current interpolation date',\n    'alternatives': [\n      '@return secondary state interpolated at the current interpolation date',\n      '@return interpolated secondary state for the current interpolation date',\n      '@return secondary state value obtained by interpolation at the current date'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException if the number of function evaluations exceeds',\n      '@throws MaxCountExceededException if the maximum count of function evaluations is exceeded',\n      '@throws MaxCountExceededException if the number of function evaluations goes beyond'\n    ]\n  },\n  {\n    'tag': '@return interpolated secondary derivatives at the current interpolation date',\n    'alternatives': [\n      '@return secondary derivatives interpolated at the current interpolation date',\n      '@return interpolated secondary derivatives for the current interpolation date',\n      '@return secondary derivatives obtained by interpolation at the current date'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException if the number of function evaluations exceeds',\n      '@throws MaxCountExceededException if the maximum count of function evaluations is exceeded',\n      '@throws MaxCountExceededException if the number of function evaluations goes beyond'\n    ]\n  }\n]"