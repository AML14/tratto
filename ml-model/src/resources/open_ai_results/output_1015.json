"[\n  {\n    'tag': '@return the index of the nearest {@link Cluster} to the given point',\n    'alternatives': [\n      '@return the index of the closest {@link Cluster} to the provided point',\n      '@return the index of the {@link Cluster} closest to the given point',\n      '@return the index of the nearest {@link Cluster} to the specified point',\n      '@return the index of the {@link Cluster} that is closest to the given point',\n      '@return the index of the {@link Cluster} nearest to the provided point'\n    ]\n  },\n  {\n    'tag': '@param random random generator to use for choosing initial centers',\n    'alternatives': [\n      '@param random random number generator for selecting initial centers',\n      '@param random random generator for selecting the initial centers',\n      '@param random generator used for choosing initial centers',\n      '@param random random generator used to select the initial centers',\n      '@param random random generator that is used to choose the initial centers'\n    ]\n  },\n  {\n    'tag': '@param random random generator to use for choosing initial centers',\n    'alternatives': [\n      '@param random random number generator for selecting initial centers',\n      '@param random random generator for selecting the initial centers',\n      '@param random generator used for choosing initial centers',\n      '@param random random generator used to select the initial centers',\n      '@param random random generator that is used to choose the initial centers'\n    ]\n  },\n  {\n    'tag': '@param emptyStrategy strategy to use for handling empty clusters that\\nmay appear during algorithm iterations',\n    'alternatives': [\n      '@param emptyStrategy strategy for managing empty clusters that may arise during algorithm iterations',\n      '@param emptyStrategy strategy for handling empty clusters that might occur during the algorithm iterations',\n      '@param emptyStrategy strategy for dealing with empty clusters that could arise during the iteration steps of the algorithm',\n      '@param emptyStrategy strategy to handle empty clusters that may happen during the iterations of the algorithm',\n      '@param emptyStrategy strategy for managing empty clusters that could appear during the iterations of the algorithm'\n    ]\n  },\n  {\n    'tag': '@param sample1 array of sample data values',\n    'alternatives': [\n      '@param sample1 an array containing sample data values',\n      '@param sample1 array of values representing the sample data',\n      '@param sample1 array holding the sample data values',\n      '@param sample1 array that contains the sample data values',\n      '@param sample1 array of data values from the sample'\n    ]\n  },\n  {\n    'tag': '@param sample2 array of sample data values',\n    'alternatives': [\n      '@param sample2 an array containing sample data values',\n      '@param sample2 array of values representing the sample data',\n      '@param sample2 array holding the sample data values',\n      '@param sample2 array that contains the sample data values',\n      '@param sample2 array of data values from the sample'\n    ]\n  },\n  {\n    'tag': '@return t statistic',\n    'alternatives': [\n      '@return the t statistic',\n      '@return the t-value',\n      '@return the statistical value t',\n      '@return the calculated t statistic',\n      '@return the computed t statistic'\n    ]\n  },\n  {\n    'tag': '@throws NoDataException if the arrays are empty',\n    'alternatives': [\n      '@throws NoDataException when the arrays are empty',\n      '@throws NoDataException if the provided arrays are empty',\n      '@throws NoDataException in case of empty arrays',\n      '@throws NoDataException if the arrays have no data',\n      '@throws NoDataException if the arrays lack data'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if the length of the arrays is not equal',\n    'alternatives': [\n      '@throws DimensionMismatchException when the arrays have unequal length',\n      '@throws DimensionMismatchException if the arrays do not have equal length',\n      '@throws DimensionMismatchException in case the arrays possess different lengths',\n      '@throws DimensionMismatchException if the length of the arrays is not the same',\n      '@throws DimensionMismatchException if the arrays are of unequal size'\n    ]\n  },\n  {\n    'tag': '@param sample1 array of sample data values',\n    'alternatives': [\n      '@param sample1 an array containing sample data values',\n      '@param sample1 array of values representing the sample data',\n      '@param sample1 array holding the sample data values',\n      '@param sample1 array that contains the sample data values',\n      '@param sample1 array of data values from the sample'\n    ]\n  },\n  {\n    'tag': '@param sample2 array of sample data values',\n    'alternatives': [\n      '@param sample2 an array containing sample data values',\n      '@param sample2 array of values representing the sample data',\n      '@param sample2 array holding the sample data values',\n      '@param sample2 array that contains the sample data values',\n      '@param sample2 array of data values from the sample'\n    ]\n  },\n  {\n    'tag': '@return p-value for t-test',\n    'alternatives': [\n      '@return the p-value for the t-test',\n      '@return the calculated p-value for the t-test',\n      '@return the computed p-value for the t-test',\n      '@return the t-test p-value',\n      '@return the p-value calculated for the t-test'\n    ]\n  },\n  {\n    'tag': '@throws NoDataException if the arrays are empty',\n    'alternatives': [\n      '@throws NoDataException when the arrays are empty',\n      '@throws NoDataException if the provided arrays are empty',\n      '@throws NoDataException in case of empty arrays',\n      '@throws NoDataException if the arrays have no data',\n      '@throws NoDataException if the arrays lack data'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if the length of the arrays is not equal',\n    'alternatives': [\n      '@throws DimensionMismatchException when the arrays have unequal length',\n      '@throws DimensionMismatchException if the arrays do not have equal length',\n      '@throws DimensionMismatchException in case the arrays possess different lengths',\n      '@throws DimensionMismatchException if the length of the arrays is not the same',\n      '@throws DimensionMismatchException if the arrays are of unequal size'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if an error occurs computing the p-value',\n    'alternatives': [\n      '@throws MaxCountExceededException when an error is encountered during the computation of the p-value',\n      '@throws MaxCountExceededException if the computation of the p-value exceeds the maximum count',\n      '@throws MaxCountExceededException when the p-value calculation encounters a maximum count error',\n      '@throws MaxCountExceededException if the p-value computation exceeds the maximum count',\n      '@throws MaxCountExceededException if the p-value calculation encounters an error'\n    ]\n  },\n  {\n    'tag': '@param sample1 array of sample data values',\n    'alternatives': [\n      '@param sample1 an array containing sample data values',\n      '@param sample1 array of values representing the sample data',\n      '@param sample1 array holding the sample data values',\n      '@param sample1 array that contains the sample data values',\n      '@param sample1 array of data values from the sample'\n    ]\n  },\n  {\n    'tag': '@param sample2 array of sample data values',\n    'alternatives': [\n      '@param sample2 an array containing sample data values',\n      '@param sample2 array of values representing the sample data',\n      '@param sample2 array holding the sample data values',\n      '@param sample2 array that contains the sample data values',\n      '@param sample2 array of data values from the sample'\n    ]\n  },\n  {\n    'tag': '@param alpha significance level of the test',\n    'alternatives': [\n      '@param alpha significance level for the test',\n      '@param alpha level of significance for the test',\n      '@param alpha level indicating the significance of the test',\n      '@param alpha value representing the significance level of the test',\n      '@param alpha indicating the level of significance for the test'\n    ]\n  },\n  {\n    'tag': '@return true if the null hypothesis can be rejected with\\nconfidence 1 - alpha',\n    'alternatives': [\n      '@return true if the null hypothesis can be rejected with a confidence of 1 - alpha',\n      '@return true if the null hypothesis can be rejected with a confidence level of 1 - alpha',\n      '@return true if the null hypothesis can be rejected with a significance level of 1 - alpha',\n      '@return true if the null hypothesis can be rejected with a confidence interval of 1 - alpha',\n      '@return true if the null hypothesis can be rejected with a probability of 1 - alpha'\n    ]\n  },\n  {\n    'tag': '@throws NoDataException if the arrays are empty',\n    'alternatives': [\n      '@throws NoDataException when the arrays are empty',\n      '@throws NoDataException if the provided arrays are empty',\n      '@throws NoDataException in case of empty arrays',\n      '@throws NoDataException if the arrays have no data',\n      '@throws NoDataException if the arrays lack data'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if the length of the arrays is not equal',\n    'alternatives': [\n      '@throws DimensionMismatchException when the arrays have unequal length',\n      '@throws DimensionMismatchException if the arrays do not have equal length',\n      '@throws DimensionMismatchException in case the arrays possess different lengths',\n      '@throws DimensionMismatchException if the length of the arrays is not the same',\n      '@throws DimensionMismatchException if the arrays are of unequal size'\n    ]\n  },\n  {\n    'tag': '@throws OutOfRangeException if <code>alpha</code> is not in the range (0, 0.5]',\n    'alternatives': [\n      '@throws OutOfRangeException when <code>alpha</code> is outside the range (0, 0.5]',\n      '@throws OutOfRangeException if <code>alpha</code> falls outside the range (0, 0.5]',\n      '@throws OutOfRangeException in case <code>alpha</code> is not within the range (0, 0.5]',\n      '@throws OutOfRangeException if <code>alpha</code> is not included in the range (0, 0.5]',\n      '@throws OutOfRangeException if <code>alpha</code> is beyond the range (0, 0.5]'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if an error occurs computing the p-value',\n    'alternatives': [\n      '@throws MaxCountExceededException when an error is encountered during the computation of the p-value',\n      '@throws MaxCountExceededException if the computation of the p-value exceeds the maximum count',\n      '@throws MaxCountExceededException when the p-value calculation encounters a maximum count error',\n      '@throws MaxCountExceededException if the p-value computation exceeds the maximum count',\n      '@throws MaxCountExceededException if the p-value calculation encounters an error'\n    ]\n  },\n  {\n    'tag': '@param mu comparison constant',\n    'alternatives': [\n      '@param mu constant for comparison',\n      '@param mu value used for comparison',\n      '@param mu constant to compare against',\n      '@param mu constant reference for comparison',\n      '@param mu constant representing the comparison'\n    ]\n  },\n  {\n    'tag': '@param observed array of values',\n    'alternatives': [\n      '@param observed an array of values',\n      '@param observed array of observed values',\n      '@param observed array containing the values',\n      '@param observed array that holds the values',\n      '@param observed array with the values'\n    ]\n  }\n]"