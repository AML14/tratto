"output=[{'tag': '@param fraction {@link BigFraction} to subtract, must not be {@code null}.', 'alternatives': ['@param factor {@link BigFraction} to deduct, should not be {@code null}.', '@param fraction {@link BigFraction} to subtract, must not be {@code null}.', '@param num {@link BigFraction} to subtract, should not be {@code null}.']}, {'tag': '@throws org.apache.commons.math3.exception.NotStrictlyPositiveException if {@code size <= 0}.', 'alternatives': ['@throws org.apache.commons.math3.exception.NotStrictlyPositiveException if {@code size <= 0}.', '@throws org.apache.commons.math3.exception.NotStrictlyPositiveException if {@code size <= 0}.', '@throws org.apache.commons.math3.exception.NotStrictlyPositiveException in case {@code size <= 0}.']}, {'tag': '@throws org.apache.commons.math3.exception.NotPositiveException if\\n{@code darkThreshold < 0}.', 'alternatives': ['@throws org.apache.commons.math3.exception.NonPositiveException if {@code darkThreshold < 0}.', '@throws org.apache.commons.math3.exception.NotPositiveException when {@code darkThreshold < 0}.', '@throws org.apache.commons.math3.exception.NotPositiveException if {@code darkThreshold < 0}.']}, {'tag': '@throws NumberIsTooLargeException if {@code index >= parameters}.', 'alternatives': ['@throws NumberIsTooHighException if {@code index >= parameters}.', '@throws NumberIsTooLargeException when {@code index >= parameters}.', '@throws NumberIsTooLargeException if {@code index >= parameters}.']}, {'tag': '@throws NullArgumentException if {@code manager} is {@code null}', 'alternatives': ['@throws NullArgumentException if {@code manager} is {@code null}', '@throws NullArgumentException in case {@code manager} is {@code null}.', '@throws NullArgumentException if {@code manager} is {@code null}.']}, {'tag': '@throws NullArgumentException if one of the parameters is {@code null}', 'alternatives': ['@throws NullArgumentException if one of the parameters is {@code null}', '@throws NullArgumentException if any of the parameters is {@code null}', '@throws NullArgumentException if any parameter is {@code null}.']}, {'tag': '@throws NullArgumentException if one of the parameters is {@code null}', 'alternatives': ['@throws NullArgumentException if one of the parameters is {@code null}', '@throws NullArgumentException if any of the parameters is {@code null}', '@throws NullArgumentException if {@code null} is found in the parameters.']}, {'tag': '@throws NullArgumentException if one of the parameters is {@code null}', 'alternatives': ['@throws NullArgumentException if one of the parameters is {@code null}', '@throws NullArgumentException if any of the parameters is {@code null}', '@throws NullArgumentException if an occurrence of {@code null} is noticed.']}, {'tag': '@throws NullArgumentException if one of the parameters is {@code null}', 'alternatives': ['@throws NullArgumentException if one of the parameters is {@code null}', '@throws NullArgumentException if any of the parameters is {@code null}', '@throws NullArgumentException if any parameter is {@code null}.']}, {'tag': '@throws NumberIsTooSmallException if {@code x < -0.5}', 'alternatives': ['@throws NumberIsTooSmallException if {@code x < -0.5}', '@throws NumberIsTooSmallException if {@code x is less than -0.5}', '@throws NumberIsTooSmallException when {@code x < -0.5}.']}, {'tag': '@throws NumberIsTooLargeException if {@code x > 1.5}', 'alternatives': ['@throws NumberIsTooLargeException if {@code x > 1.5}', '@throws NumberIsTooLargeException in case {@code x > 1.5}.', '@throws NumberIsTooLargeException when {@code x > 1.5}.']}, {'tag': '@throws NumberIsTooSmallException if {@code x < -0.5}.', 'alternatives': ['@throws NumberIsTooSmallException if {@code x < -0.5}.', '@throws NumberIsTooSmallException if {@code x < -0.5}', '@throws NumberIsTooSmallException when {@code x is less than -0.5}.']}, {'tag': '@throws NumberIsTooLargeException if {@code x > 1.5}.', 'alternatives': ['@throws NumberIsTooLargeException if {@code x > 1.5}.', '@throws NumberIsTooLargeException if {@code x is greater than 1.5}.', '@throws NumberIsTooLargeException when {@code x > 1.5}.']}, {'tag': '@throws NullArgumentException if original is null', 'alternatives': ['@throws NullArgumentException if original is null', '@throws NullArgumentException when original is {@code null}', '@throws NullArgumentException in case original is null.']}, {'tag': '@throws NullArgumentException if either source or dest is null', 'alternatives': ['@throws NullArgumentException if either source or dest is null', '@throws NullArgumentException in case either source or dest is {@code null}.', '@throws NullArgumentException if {@code null} is found on either source or dest.']}, {'tag': '@throws MathIllegalArgumentException if values is null', 'alternatives': ['@throws MathIllegalArgumentException if values is null', '@throws MathIllegalArgumentException in the scenario of {@code values} being {@code null}.', '@throws MathIllegalArgumentException if {@code null} is found in {@code values}.']}, {'tag': '@throws MathIllegalArgumentException if values is null', 'alternatives': ['@throws MathIllegalArgumentException if values is null', '@throws MathIllegalArgumentException in the case when {@code values} is {@code null}.', '@throws MathIllegalArgumentException if {@code null} is detected in {@code values}.']}, {'tag': '@throws MathIllegalArgumentException if values is null', 'alternatives': ['@throws MathIllegalArgumentException if values is null', '@throws MathIllegalArgumentException when {@code values} is null', '@throws MathIllegalArgumentException in case no {@code values} are provided.']}, {'tag': '@throws OutOfRangeException if {@code p <= 0} or {@code p > 1}.', 'alternatives': ['@throws OutOfRangeException if {@code p <= 0} or {@code p > 1}.', '@throws OutOfRangeException if {@code p is less than or equal to 0} or {@code p is greater than 1}.', '@throws OutOfRangeException in case {@code p <= 0} or {@code p > 1}.']}, {'tag': '@throws OutOfRangeException if {@code p <= 0} or {@code p > 1}.', 'alternatives': ['@throws OutOfRangeException if {@code p <= 0} or {@code p > 1}.', '@throws OutOfRangeException if {@code p is less than or equal to 0} or {@code p is greater than 1}.', '@throws OutOfRangeException in case {@code p <= 0} or {@code p > 1}.']}, {'tag': '@return {@code true}', 'alternatives': ['@return {@code true}', '@return {@code true}', '@return {@code true}']}, {'tag': '@throws NotStrictlyPositiveException if {@code len <= 0}.', 'alternatives': ['@throws NotStrictlyPositiveException if {@code len <= 0}.', '@throws NotStrictlyPositiveException in the event of {@code len <= 0}.', '@throws NotStrictlyPositiveException if length is {@code 0} or negative.']}, {'tag': '@throws NotStrictlyPositiveException if {@code len <= 0}', 'alternatives': ['@throws NotStrictlyPositiveException if {@code len <= 0}', '@throws NotStrictlyPositiveException if {@code len <= 0}', '@throws NotStrictlyPositiveException if length is {@code 0} or negative.']}, {'tag': '@throws NotStrictlyPositiveException if {@code len <= 0}', 'alternatives': ['@throws NotStrictlyPositiveException if {@code len <= 0}', '@throws NotStrictlyPositiveException in the event of {@code len <= 0}.', '@throws NotStrictlyPositiveException if length is not positive.']}, {'tag': '@throws NotStrictlyPositiveException if {@code shape <= 0} or\\n{@code scale <= 0}.', 'alternatives': ['@throws NotStrictlyPositiveException if {@code shape <= 0} or\\n{@code scale <= 0}.', '@throws NotStrictlyPositiveException if either {@code shape <= 0} or\\n{@code scale <= 0}.', '@throws NotStrictlyPositiveException in case {@code shape <= 0} or\\n{@code scale <= 0}.']}]"