"output = [\n  {\n    'tag': '@param x value to be modded',\n    'alternatives': [\n      '@param x value to be modified',\n      '@param x value to be changed',\n      '@param x the value to be modulated',\n      '@param x the value to be adjusted',\n      '@param x the value to be transformed'\n    ]\n  },\n  {\n    'tag': '@param y modulus',\n    'alternatives': [\n      '@param y divisor',\n      '@param y the remainder',\n      '@param y the modulus',\n      '@param y the factor',\n      '@param y the divider'\n    ]\n  },\n  {\n    'tag': '@param nums array of operands',\n    'alternatives': [\n      '@param nums list of numbers',\n      '@param nums set of elements',\n      '@param nums collection of values',\n      '@param nums group of inputs',\n      '@param nums sequence of values'\n    ]\n  },\n  {\n    'tag': '@return an array of two integers (r,m) such that each number in NUMS is equal to r (mod m),\\n  or null if no such exists or the iterator contains fewer than 3 elements',\n    'alternatives': [\n      '@return an array (r, m) where each element in NUMS is equal to r (mod m). If no such pair exists or the iterator contains less than 3 elements, return null.',\n      '@return an array of two integers (r, m) representing the remainder and modulus of each number in NUMS. If there is no such pair or there are fewer than 3 elements in the iterator, return null.',\n      '@return an array of two integers (r, m) indicating the remainder and modulus of each element in NUMS. If such pair does not exist or the iterator has less than 3 elements, return null.',\n      '@return an array of two integers (r, m) such that every element in NUMS is equal to r (mod m), or null if no such pair exists or the iterator has less than 3 elements.',\n      '@return an array of two integers (r, m) where r is the remainder of each element in NUMS modulo m. Return null if no such pair exists or the iterator contains fewer than 3 elements.'\n    ]\n  },\n  {\n    'tag': '@param itor iterator of operands',\n    'alternatives': [\n      '@param itor iterator of elements',\n      '@param itor iterator of values',\n      '@param itor iterator of inputs',\n      '@param itor iterator of objects',\n      '@param itor iterator of items'\n    ]\n  },\n  {\n    'tag': '@param nonstrict_ends whether endpoints are NOT subject to the strict density requirement',\n    'alternatives': [\n      '@param nonstrict_ends indicates if endpoints are not governed by the strict density condition',\n      '@param nonstrict_ends specifies whether the endpoints do not need to satisfy the strict density requirement',\n      '@param nonstrict_ends indicates whether the strict density requirement does not apply to the endpoints',\n      '@param nonstrict_ends determines if the endpoints are exempt from the strict density requirement',\n      '@param nonstrict_ends indicates if the strict density requirement is not applicable to the endpoints'\n    ]\n  },\n  {\n    'tag': '@param nums numbers to be excluded; length &gt; 0',\n    'alternatives': [\n      '@param nums elements to be omitted; length &gt; 0',\n      '@param nums values to be disregarded; length &gt; 0',\n      '@param nums numbers to be ignored; length &gt; 0',\n      '@param nums inputs to be excluded; length &gt; 0',\n      '@param nums elements to be left out; length &gt; 0'\n    ]\n  },\n  {\n    'tag': '@return the set: [min(nums)..max(nums)] - nums',\n    'alternatives': [\n      '@return the difference between the range [min(nums)..max(nums)] and the numbers in nums',\n      '@return the set of values in the range [min(nums)..max(nums)] excluding the numbers in nums',\n      '@return the set obtained by subtracting nums from the range [min(nums)..max(nums)]',\n      '@return the set of elements in the interval [min(nums)..max(nums)] that are not present in nums',\n      '@return the result of removing the numbers in nums from the range [min(nums)..max(nums)]'\n    ]\n  },\n  {\n    'tag': '@return a (remainder, modulus) pair that fails to match elements of nums',\n    'alternatives': [\n      '@return a pair (remainder, modulus) that does not match any elements in nums',\n      '@return a (remainder, modulus) pair that does not correspond to any elements in the nums list',\n      '@return a pair of integers (remainder, modulus) that does not match any values in nums',\n      '@return a (remainder, modulus) pair that does not match any of the elements in nums',\n      '@return a pair (remainder, modulus) that does not match any of the elements in the given nums list'\n    ]\n  },\n  {\n    'tag': '@param filename the file to read',\n    'alternatives': [\n      '@param filename the file to be read',\n      '@param filename name of the file to read',\n      '@param filename the input file',\n      '@param filename the name of the file to be read',\n      '@param filename the file that needs to be read'\n    ]\n  }\n]"