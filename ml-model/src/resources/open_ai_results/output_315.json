"output=[\r\n  {\r\n    'tag': '@param entry the entry to update',\r\n    'alternatives': [\r\n      '@param entry the entry to update',\r\n      '@param entry the entry to modify',\r\n      '@param entry to update',\r\n      '@param entry to be updated',\r\n      '@param the entry that needs to be updated'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param newValue the new value to store',\r\n    'alternatives': [\r\n      '@param newValue the new value to store',\r\n      '@param newValue the value to store',\r\n      '@param newValue to store',\r\n      '@param the new value that will be stored',\r\n      '@param the value that needs to be stored'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param hashIndex the index into the data array to store at',\r\n    'alternatives': [\r\n      '@param hashIndex the index into the data array to store at',\r\n      '@param hashIndex the index where to store in the data array',\r\n      '@param hashIndex the index to use for storing in the data array',\r\n      '@param hashIndex the position in the data array to store at',\r\n      '@param the index in the data array where the store operation should occur'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param hashCode the hash code of the key to add',\r\n    'alternatives': [\r\n      '@param hashCode the hash code of the key to add',\r\n      '@param hashCode the hash code for the key to be added',\r\n      '@param hashCode for the key that will be added',\r\n      '@param the hash code of the key that needs to be added',\r\n      '@param the hash code for the key to add'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param key the key to add',\r\n    'alternatives': [\r\n      '@param key the key to add',\r\n      '@param key the key to insert',\r\n      '@param key to be added',\r\n      '@param the key that needs to be added',\r\n      '@param the key to include'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param value the value to add',\r\n    'alternatives': [\r\n      '@param value the value to add',\r\n      '@param value the value to insert',\r\n      '@param value to be added',\r\n      '@param the value that needs to be added',\r\n      '@param the value to include'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param entry the entry to reuse',\r\n    'alternatives': [\r\n      '@param entry the entry to reuse',\r\n      '@param entry the entry to recycle',\r\n      '@param entry to be reused',\r\n      '@param the entry that can be reused',\r\n      '@param the entry to utilize'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param hashIndex the index into the data array to store at',\r\n    'alternatives': [\r\n      '@param hashIndex the index into the data array to store at',\r\n      '@param hashIndex the index where to store in the data array',\r\n      '@param hashIndex the index to use for storing in the data array',\r\n      '@param hashIndex the position in the data array to store at',\r\n      '@param the index in the data array where the store operation should occur'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param hashCode the hash code of the key to add',\r\n    'alternatives': [\r\n      '@param hashCode the hash code of the key to add',\r\n      '@param hashCode the hash code for the key to be added',\r\n      '@param hashCode for the key that will be added',\r\n      '@param the hash code of the key that needs to be added',\r\n      '@param the hash code for the key to add'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param key the key to add',\r\n    'alternatives': [\r\n      '@param key the key to add',\r\n      '@param key the key to insert',\r\n      '@param key to be added',\r\n      '@param the key that needs to be added',\r\n      '@param the key to include'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param value the value to add',\r\n    'alternatives': [\r\n      '@param value the value to add',\r\n      '@param value the value to insert',\r\n      '@param value to be added',\r\n      '@param the value that needs to be added',\r\n      '@param the value to include'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param entry the entry to be removed',\r\n    'alternatives': [\r\n      '@param entry the entry to be removed',\r\n      '@param entry to remove',\r\n      '@param the entry that should be removed',\r\n      '@param entry that needs to be deleted',\r\n      '@param entry to exclude'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return <code>true</code> if the map is full',\r\n    'alternatives': [\r\n      '@return <code>true</code> if the map is full',\r\n      '@return <code>true</code> when the map reaches its maximum capacity',\r\n      '@return <code>true</code> in case the map is completely occupied',\r\n      '@return <code>true</code> if the map has no available slots',\r\n      '@return <code>true</code> if the map is unable to store more elements'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the maximum number of elements the map can hold',\r\n    'alternatives': [\r\n      '@return the maximum number of elements the map can hold',\r\n      '@return the maximum capacity of the map',\r\n      '@return the highest amount of elements the map can accommodate',\r\n      '@return the upper limit of elements the map can contain',\r\n      '@return the largest possible size for the map'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return true if this map scans',\r\n    'alternatives': [\r\n      '@return true if this map scans',\r\n      '@return true if this map performs scanning',\r\n      '@return true if the map is configured for scanning',\r\n      '@return true if the map uses scanning',\r\n      '@return true if the map is capable of scanning'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return a shallow clone',\r\n    'alternatives': [\r\n      '@return a shallow clone',\r\n      '@return a clone with shallow copy',\r\n      '@return a shallow copy of the object',\r\n      '@return a new object with shallow copy',\r\n      '@return a copy of the object with shallow duplication'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param out the output stream',\r\n    'alternatives': [\r\n      '@param out the output stream',\r\n      '@param out the stream for output',\r\n      '@param the output stream',\r\n      '@param stream to write output',\r\n      '@param the stream used for output'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws IOException if an error occurs while writing to the stream',\r\n    'alternatives': [\r\n      '@throws IOException if an error occurs while writing to the stream',\r\n      '@throws IOException when there is a failure during stream writing',\r\n      '@throws IOException if the stream writing operation encounters an error',\r\n      '@throws IOException if there is an issue with writing to the stream',\r\n      '@throws IOException in case of a problem during stream writing'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param in the input stream',\r\n    'alternatives': [\r\n      '@param in the input stream',\r\n      '@param in the stream for input',\r\n      '@param the input stream',\r\n      '@param stream to read input',\r\n      '@param the stream used for input'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws IOException if an error occurs while reading from the stream',\r\n    'alternatives': [\r\n      '@throws IOException if an error occurs while reading from the stream',\r\n      '@throws IOException when there is a failure during stream reading',\r\n      '@throws IOException if the stream reading operation encounters an error',\r\n      '@throws IOException if there is an issue with reading from the stream',\r\n      '@throws IOException in case of a problem during stream reading'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws ClassNotFoundException if an object read from the stream can not be loaded',\r\n    'alternatives': [\r\n      '@throws ClassNotFoundException if an object read from the stream can not be\r\nloaded',\r\n      '@throws ClassNotFoundException when a loaded object cannot be found in the\r\nstream',\r\n      '@throws ClassNotFoundException in case the stream contains an object that\r\ncannot be loaded',\r\n      '@throws ClassNotFoundException if the stream contains an object that cannot\r\nbe loaded',\r\n      '@throws ClassNotFoundException if an object in the stream fails to load'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param maxSize the maximum size of the map',\r\n    'alternatives': [\r\n      '@param maxSize the maximum size of the map',\r\n      '@param maxSize the size limit of the map',\r\n      '@param maxSize the largest size that the map can have',\r\n      '@param maxSize the maximum number of elements that the map can contain',\r\n      '@param the maximum size that the map can reach'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param maxSize the maximum size of the map',\r\n    'alternatives': [\r\n      '@param maxSize the maximum size of the map',\r\n      '@param maxSize the size limit of the map',\r\n      '@param maxSize the largest size that the map can have',\r\n      '@param maxSize the maximum number of elements that the map can contain',\r\n      '@param the maximum size that the map can reach'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param initialSize the initial size of the map',\r\n    'alternatives': [\r\n      '@param initialSize the initial size of the map',\r\n      '@param initialSize the starting size of the map',\r\n      '@param initialSize the size to set when the map is created',\r\n      '@param initialSize the size that the map is initialized with',\r\n      '@param the size of the map at the beginning'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param maxSize the maximum size of the map',\r\n    'alternatives': [\r\n      '@param maxSize the maximum size of the map',\r\n      '@param maxSize the size limit of the map',\r\n      '@param maxSize the largest size that the map can have',\r\n      '@param maxSize the maximum number of elements that the map can contain',\r\n      '@param the maximum size that the map can reach'\r\n    ]\r\n  }\r\n]"