"[\n  {\n    \"tag\": \"@return a shallow clone\",\n    \"alternatives\": [\n      \"@return a shallow copy\",\n      \"@return a clone that is not deep\",\n      \"@return a copy with shallow depth\",\n      \"@return a duplicate without deep copy\",\n      \"@return a replica with shallow cloning\"\n    ]\n  },\n  {\n    \"tag\": \"@param index the index to retrieve\",\n    \"alternatives\": [\n      \"@param index the retrieve index\",\n      \"@param the index to fetch\",\n      \"@param the index that needs to be fetched\",\n      \"@param index position to retrieve\",\n      \"@param index from where to retrieve\"\n    ]\n  },\n  {\n    \"tag\": \"@return the key at the specified index\",\n    \"alternatives\": [\n      \"@return the key corresponding to the given index\",\n      \"@return the key located at the specified index\",\n      \"@return the key retrieved from the index\",\n      \"@return the key found at the specified position\",\n      \"@return the key identified by the provided index\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IndexOutOfBoundsException if the index is invalid\",\n    \"alternatives\": [\n      \"@throws IndexOutOfBoundsException in case of an invalid index\",\n      \"@throws IndexOutOfBoundsException if the index is out of bounds\",\n      \"@throws IndexOutOfBoundsException when the index is not valid\",\n      \"@throws IndexOutOfBoundsException if an invalid index is given\",\n      \"@throws IndexOutOfBoundsException if the provided index is not valid\"\n    ]\n  },\n  {\n    \"tag\": \"@param index the index to retrieve\",\n    \"alternatives\": [\n      \"@param index the retrieve index\",\n      \"@param the index to fetch\",\n      \"@param the index that needs to be fetched\",\n      \"@param index position to retrieve\",\n      \"@param index from where to retrieve\"\n    ]\n  },\n  {\n    \"tag\": \"@return the value at the specified index\",\n    \"alternatives\": [\n      \"@return the value located at the specified index\",\n      \"@return the value retrieved from the index\",\n      \"@return the value found at the specified position\",\n      \"@return the value identified by the provided index\",\n      \"@return the value corresponding to the given index\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IndexOutOfBoundsException if the index is invalid\",\n    \"alternatives\": [\n      \"@throws IndexOutOfBoundsException in case of an invalid index\",\n      \"@throws IndexOutOfBoundsException if the index is out of bounds\",\n      \"@throws IndexOutOfBoundsException when the index is not valid\",\n      \"@throws IndexOutOfBoundsException if an invalid index is given\",\n      \"@throws IndexOutOfBoundsException if the provided index is not valid\"\n    ]\n  },\n  {\n    \"tag\": \"@param key the key to find the index of\",\n    \"alternatives\": [\n      \"@param key the key to retrieve the index of\",\n      \"@param the key to search for the index of\",\n      \"@param the key whose index needs to be found\",\n      \"@param key for which the index should be found\",\n      \"@param the key to identify the index of\"\n    ]\n  },\n  {\n    \"tag\": \"@return the index, or -1 if not found\",\n    \"alternatives\": [\n      \"@return the index where found, or -1 if not present\",\n      \"@return the index if found, otherwise -1\",\n      \"@return the index if it exists, otherwise return -1\",\n      \"@return the index located, or -1 if it does not exist\",\n      \"@return the index if found, otherwise return -1\"\n    ]\n  },\n  {\n    \"tag\": \"@param index the index of the object to remove\",\n    \"alternatives\": [\n      \"@param index the position of the object to eliminate\",\n      \"@param the index from where the object should be removed\",\n      \"@param the index that specifies the object to be deleted\",\n      \"@param index from which the object needs to be removed\",\n      \"@param the index indicating the object to be taken out\"\n    ]\n  },\n  {\n    \"tag\": \"@return the previous value corresponding the <code>key</code>,\\n or <code>null</code> if none existed\",\n    \"alternatives\": [\n      \"@return the value previously associated with the <code>key</code>, or <code>null</code> if it was not present\",\n      \"@return the previous value mapped to the <code>key</code>, or <code>null</code> if it did not exist\",\n      \"@return the value that was previously assigned to the <code>key</code>, or <code>null</code> if it was not found\",\n      \"@return the value that was previously linked to the <code>key</code>, or <code>null</code> if it was absent\",\n      \"@return the value that was previously connected to the <code>key</code>, or <code>null</code> if it was not included\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IndexOutOfBoundsException if the index is invalid\",\n    \"alternatives\": [\n      \"@throws IndexOutOfBoundsException in case of an invalid index\",\n      \"@throws IndexOutOfBoundsException if the index is out of bounds\",\n      \"@throws IndexOutOfBoundsException when the index is not valid\",\n      \"@throws IndexOutOfBoundsException if an invalid index is given\",\n      \"@throws IndexOutOfBoundsException if the provided index is not valid\"\n    ]\n  },\n  {\n    \"tag\": \"@return The ordered list of keys.\",\n    \"alternatives\": [\n      \"@return The list of keys in a specific order.\",\n      \"@return The keys arranged in a specific sequence.\",\n      \"@return The keys in a certain order.\",\n      \"@return The keys organized in a specified manner.\",\n      \"@return The keys in a particular sequence.\"\n    ]\n  },\n  {\n    \"tag\": \"@param initialCapacity the initial capacity\",\n    \"alternatives\": [\n      \"@param initialCapacity the initial size\",\n      \"@param initialCapacity the starting capacity\",\n      \"@param the initial capacity of the container\",\n      \"@param the starting size of the collection\",\n      \"@param initialCapacity the initial volume\"\n    ]\n  },\n  {\n    \"tag\": \"@param initialCapacity the initial capacity\",\n    \"alternatives\": [\n      \"@param initialCapacity the initial size\",\n      \"@param initialCapacity the starting capacity\",\n      \"@param the initial capacity of the container\",\n      \"@param the starting size of the collection\",\n      \"@param initialCapacity the initial volume\"\n    ]\n  },\n  {\n    \"tag\": \"@param loadFactor the load factor\",\n    \"alternatives\": [\n      \"@param loadFactor the factor of load\",\n      \"@param loadFactor the loading coefficient\",\n      \"@param the factor determining the load\",\n      \"@param the ratio for loading\",\n      \"@param loadFactor the load proportion\"\n    ]\n  },\n  {\n    \"tag\": \"@param map the map to copy\",\n    \"alternatives\": [\n      \"@param map the map to duplicate\",\n      \"@param the map that needs to be replicated\",\n      \"@param the map that requires copying\",\n      \"@param map from which to create a copy\",\n      \"@param map to be reproduced\"\n    ]\n  },\n  {\n    \"tag\": \"@param value the new value to set\",\n    \"alternatives\": [\n      \"@param value the value to assign\",\n      \"@param value the value to be assigned\",\n      \"@param the value that should be set\",\n      \"@param the value to be placed\",\n      \"@param value that needs to be assigned\"\n    ]\n  },\n  {\n    \"tag\": \"@return the old value\",\n    \"alternatives\": [\n      \"@return the previous value\",\n      \"@return the former value\",\n      \"@return the value before the update\",\n      \"@return the value that was there before\",\n      \"@return the value that was present earlier\"\n    ]\n  },\n  {\n    \"tag\": \"@return 1 always\",\n    \"alternatives\": [\n      \"@return always 1\",\n      \"@return constantly 1\",\n      \"@return the value 1 at all times\",\n      \"@return the value 1 consistently\",\n      \"@return the value 1 every time\"\n    ]\n  },\n  {\n    \"tag\": \"@param key the key\",\n    \"alternatives\": [\n      \"@param key the identifier\",\n      \"@param key the item\",\n      \"@param the input key\",\n      \"@param the specified key\",\n      \"@param key the symbol\"\n    ]\n  },\n  {\n    \"tag\": \"@return the mapped value, null if no match\",\n    \"alternatives\": [\n      \"@return the associated value, null if no match\",\n      \"@return the corresponding value, null if no match\",\n      \"@return the value linked to the key, null if no match\",\n      \"@return the value assigned to the key, null if no match\",\n      \"@return the value connected to the key, null if no match\"\n    ]\n  },\n  {\n    \"tag\": \"@return the size of 1\",\n    \"alternatives\": [\n      \"@return the size equal to 1\",\n      \"@return the size of only 1\",\n      \"@return the size that is 1\",\n      \"@return the size with a count of 1\",\n      \"@return the size consisting of 1\"\n    ]\n  },\n  {\n    \"tag\": \"@param key the key to search for\",\n    \"alternatives\": [\n      \"@param key the key to look for\",\n      \"@param the key to find\",\n      \"@param the key for the search\",\n      \"@param key to be searched\",\n      \"@param key to be sought\"\n    ]\n  },\n  {\n    \"tag\": \"@return true if the map contains the key\",\n    \"alternatives\": [\n      \"@return true if the key is present in the map\",\n      \"@return true if the map includes the key\",\n      \"@return true if the key exists in the map\",\n      \"@return true if the map holds the key\",\n      \"@return true if the key is found in the map\"\n    ]\n  }\n]"