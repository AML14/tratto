"output=[\n  {'tag': '@return this - n &times; a where n is the closest integer to this/a\\n(the even integer is chosen for n if this/a is halfway between two integers)',\n   'alternatives': [\n     '@return this - n &times; a where n represents the integer closest to this/a\\n(the even integer is selected for n if this/a is halfway between two integers)',\n     '@return this - n &times; a where n denotes the nearest integer to this/a\\n(the even integer is used for n when this/a is halfway between two integers)',\n     '@return this - n &times; a where n corresponds to the closest integer to this/a\\n(the even integer is utilized for n if this/a is halfway between two integers)'\n   ]},\n  {'tag': '@param a right hand side parameter of the operator',\n   'alternatives': [\n     '@param a parameter on the right side of the operator',\n     '@param a parameter that serves as the right-hand operand of the operator',\n     '@param a parameter representing the right-hand side of the operator'\n   ]},\n  {'tag': '@return this - n &times; a where n is the closest integer to this/a\\n(the even integer is chosen for n if this/a is halfway between two integers)',\n   'alternatives': [\n     '@return this - n &times; a where n is the nearest integer to this/a\\n(the even integer is selected for n if this/a is halfway between two integers)',\n     '@return this - n &times; a where n denotes the closest integer to this/a\\n(the even integer is used for n if this/a is halfway between two integers)',\n     '@return this - n &times; a where n corresponds to the integer closest to this/a\\n(the even integer is utilized for n if this/a is halfway between two integers)'\n   ]},\n  {'tag': '@throws DimensionMismatchException if number of free parameters or orders are inconsistent',\n   'alternatives': [\n     '@throws DimensionMismatchException when the count of free parameters or orders is inconsistent',\n     '@throws DimensionMismatchException if the number of free parameters or orders is incoherent',\n     '@throws DimensionMismatchException in case of inconsistent number of free parameters or orders'\n   ]},\n  {'tag': '@return abs(this)',\n   'alternatives': [\n     '@return absolute value of this',\n     '@return the absolute magnitude of this',\n     '@return the absolute quantity of this'\n   ]},\n  {'tag': '@return ceil(this)',\n   'alternatives': [\n     '@return the smallest integer greater than or equal to this',\n     '@return the smallest whole number that is larger than or equal to this',\n     '@return the smallest integer that is greater than or equal to this'\n   ]},\n  {'tag': '@return floor(this)',\n   'alternatives': [\n     '@return the largest integer less than or equal to this',\n     '@return the largest whole number that is smaller than or equal to this',\n     '@return the largest integer that is less than or equal to this'\n   ]},\n  {'tag': '@return a double number r such that r is an integer r - 0.5 &le; this &le; r + 0.5',\n   'alternatives': [\n     '@return a double value r where r is an integer and r - 0.5 &le; this &le; r + 0.5',\n     '@return a double number r having the property that r is an integer and r - 0.5 &le; this &le; r + 0.5',\n     '@return a double value r representing an integer r with the property that r - 0.5 &le; this &le; r + 0.5'\n   ]},\n  {'tag': '@return closest long to {@link #getReal()}',\n   'alternatives': [\n     '@return the nearest long to {@link #getReal()}',\n     '@return the long value that is closest to {@link #getReal()}',\n     '@return the long that it closest to the value returned by {@link #getReal()}'\n   ]},\n  {'tag': '@return -1.0, -0.0, +0.0, +1.0 or NaN depending on sign of a',\n   'alternatives': [\n     '@return -1.0, -0.0, +0.0, +1.0 or NaN depending on the sign of a',\n     '@return -1.0, -0.0, +0.0, +1.0 or NaN based on the sign of a',\n     '@return -1.0, -0.0, +0.0, +1.0 or NaN determined by the sign of a'\n   ]},\n  {'tag': '@param sign the sign for the returned value',\n   'alternatives': [\n     '@param sign the sign used for the returned value',\n     '@param sign the sign that should be applied to the returned value',\n     '@param sign the sign indicating the value that will be returned'\n   ]},\n  {'tag': '@return the instance with the same sign as the {@code sign} argument',\n   'alternatives': [\n     '@return the instance having the same sign as the {@code sign} argument',\n     '@return the instance that shares the same sign as the {@code sign} argument',\n     '@return the instance whose sign matches the {@code sign} argument'\n   ]},\n  {'tag': '@param sign the sign for the returned value',\n   'alternatives': [\n     '@param sign the sign used for the returned value',\n     '@param sign the sign that should be applied to the returned value',\n     '@param sign the sign indicating the value that will be returned'\n   ]},\n  {'tag': '@return the instance with the same sign as the {@code sign} argument',\n   'alternatives': [\n     '@return the instance having the same sign as the {@code sign} argument',\n     '@return the instance that shares the same sign as the {@code sign} argument',\n     '@return the instance whose sign matches the {@code sign} argument'\n   ]},\n  {'tag': '@param n power of 2',\n   'alternatives': [\n     '@param n exponent of 2',\n     '@param n the power raised to 2',\n     '@param n the value representing the power of 2'\n   ]},\n  {'tag': '@return this &times; 2<sup>n</sup>',\n   'alternatives': [\n     '@return this multiplied by 2<sup>n</sup>',\n     '@return this times 2 raised to the power of n',\n     '@return the result of multiplying this by 2 raised to the power of n'\n   ]},\n  {'tag': '@param y a value',\n   'alternatives': [\n     '@param y a numeric value',\n     '@param y a numerical quantity',\n     '@param y a numeric parameter'\n   ]},\n  {'tag': '@return sqrt(<i>this</i><sup>2</sup>&nbsp;+<i>y</i><sup>2</sup>)',\n   'alternatives': [\n     '@return square root of the sum of the squares of <i>this</i> and <i>y</i>',\n     '@return the square root of the quantity obtained by squaring <i>this</i> and adding the square of <i>y</i>',\n     '@return the square root of the sum of the squares of <i>this</i> and <i>y</i> respectively'\n   ]},\n  {'tag': '@throws DimensionMismatchException if number of free parameters or orders are inconsistent',\n   'alternatives': [\n     '@throws DimensionMismatchException when the count of free parameters or orders is inconsistent',\n     '@throws DimensionMismatchException if the number of free parameters or orders is incoherent',\n     '@throws DimensionMismatchException in case of inconsistent number of free parameters or orders'\n   ]},\n  {'tag': '@return square root of the instance',\n   'alternatives': [\n     '@return the square root of this',\n     '@return the square root of the value represented by this',\n     '@return the square root of the quantity stored in this'\n   ]},\n  {'tag': '@return cubic root of the instance',\n   'alternatives': [\n     '@return the cube root of this',\n     '@return the cube root of the value represented by this',\n     '@return the cube root of the quantity stored in this'\n   ]},\n  {'tag': '@param n order of the root',\n   'alternatives': [\n     '@param n root order',\n     '@param n the exponent of the root',\n     '@param n the value indicating the order of the root'\n   ]},\n  {'tag': '@return n<sup>th</sup> root of the instance',\n   'alternatives': [\n     '@return the root of this raised to the power of n',\n     '@return the value obtained by taking the n<sup>th</sup> root of this',\n     '@return the n<sup>th</sup> root of the quantity represented by this'\n   ]},\n  {'tag': '@param p power to apply',\n   'alternatives': [\n     '@param p exponent to use',\n     '@param p the power to be applied',\n     '@param p the value representing the power to be used'\n   ]},\n  {'tag': '@return this<sup>p</sup>',\n   'alternatives': [\n     '@return this raised to the power of p',\n     '@return the result of raising this to the exponent p',\n     '@return the value obtained by applying the power p to this'\n   ]}\n]"