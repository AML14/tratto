"[\n  {\n    \"tag\": \"@param args command-line arguments\",\n    \"alternatives\": [\n      \"@param args arguments from the command line\",\n      \"@param args input arguments from command line\",\n      \"@param args arguments provided through the command line\",\n      \"@param args command line arguments\",\n      \"@param args parameters passed through the command line\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IOException if a file cannot be read\",\n    \"alternatives\": [\n      \"@throws IOException when there is a failure in reading the file\",\n      \"@throws IOException in case of file read failure\",\n      \"@throws IOException if the file cannot be successfully read\",\n      \"@throws IOException if there is an error while reading the file\",\n      \"@throws IOException if unable to read the file\"\n    ]\n  },\n  {\n    \"tag\": \"@return array of ranks\",\n    \"alternatives\": [\n      \"@return ranks stored in an array\",\n      \"@return an array containing the ranks\",\n      \"@return the array that holds the ranks\",\n      \"@return array with the ranks\",\n      \"@return an array representing the ranks\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NotANumberException if the selected {@link NaNStrategy} is {@code FAILED}\\nand a {@link Double#NaN} is encountered in the input data\",\n    \"alternatives\": [\n      \"@throws NotANumberException if the chosen {@link NaNStrategy} fails and the input data contains a {@link Double#NaN}\",\n      \"@throws NotANumberException when encountering a {@link Double#NaN} in the input data, given the chosen {@link NaNStrategy} as {@code FAILED}\",\n      \"@throws NotANumberException if a {@link Double#NaN} is found in the input data and the selected {@link NaNStrategy} is {@code FAILED}\",\n      \"@throws NotANumberException if the input data contains a {@link Double#NaN} and the {@link NaNStrategy} chosen as {@code FAILED}\",\n      \"@throws NotANumberException if the {@link NaNStrategy} is {@code FAILED} and a {@link Double#NaN} is present in the input data\"\n    ]\n  },\n  {\n    \"tag\": \"@param ranks input array\",\n    \"alternatives\": [\n      \"@param ranks array as input\",\n      \"@param input array of ranks\",\n      \"@param ranks array to be used as input\",\n      \"@param ranks as input array\",\n      \"@param input ranks array\"\n    ]\n  },\n  {\n    \"tag\": \"@return array with NaN-valued entries removed\",\n    \"alternatives\": [\n      \"@return array excluding entries with NaN values\",\n      \"@return the array without NaN-valued elements\",\n      \"@return resulting array after removing NaN entries\",\n      \"@return array after removing values with NaN\",\n      \"@return array with NaN entries filtered out\"\n    ]\n  },\n  {\n    \"tag\": \"@param ranks array to recode\",\n    \"alternatives\": [\n      \"@param ranks array for recoding\",\n      \"@param array to recode ranks\",\n      \"@param array requiring rank recoding\",\n      \"@param array of ranks needing recoding\",\n      \"@param ranks array that needs to be recoded\"\n    ]\n  },\n  {\n    \"tag\": \"@param value the value to replace NaNs with\",\n    \"alternatives\": [\n      \"@param value the value to substitute NaNs\",\n      \"@param value to replace NaNs\",\n      \"@param value for replacing NaNs\",\n      \"@param value for NaN replacement\",\n      \"@param value used to replace NaNs\"\n    ]\n  },\n  {\n    \"tag\": \"@param ranks array to be searched for NaNs\",\n    \"alternatives\": [\n      \"@param ranks array to find NaN values in\",\n      \"@param array where NaNs are to be searched for\",\n      \"@param array to search for NaN occurrences\",\n      \"@param array with NaNs that needs to be analyzed\",\n      \"@param ranks array for NaN detection\"\n    ]\n  },\n  {\n    \"tag\": \"@return true iff ranks contains one or more NaNs\",\n    \"alternatives\": [\n      \"@return true if ranks has at least one NaN\",\n      \"@return true if there are NaNs in ranks\",\n      \"@return true if there exists a NaN in the ranks\",\n      \"@return true if the ranks array contains NaN values\",\n      \"@return true if ranks array has NaN values\"\n    ]\n  },\n  {\n    \"tag\": \"@param ranks array of ranks\",\n    \"alternatives\": [\n      \"@param ranks list of ranks\",\n      \"@param array containing the ranks\",\n      \"@param rank array\",\n      \"@param ranks values\",\n      \"@param array of rank values\"\n    ]\n  },\n  {\n    \"tag\": \"@param tiesTrace list of indices where <code>ranks</code> is constant\\n-- that is, for any i and j in TiesTrace, <code> ranks[i] == ranks[j]\\n</code>\",\n    \"alternatives\": [\n      \"@param tiesTrace list of indices where the values in <code>ranks</code> are constant\\n-- meaning that for any i and j in the TiesTrace, the values <code>ranks[i]</code> and <code>ranks[j]</code> are equal\\n\",\n      \"@param tiesTrace indices list where <code>ranks</code> remains constant\\n-- in other words, if i and j are in TiesTrace, <code>ranks[i]</code> and <code>ranks[j]</code> are the same\\n\",\n      \"@param tiesTrace indices where <code>ranks</code> does not change\\n-- it means that for any i and j in TiesTrace, <code>ranks[i]</code> is equal to <code>ranks[j]</code>\\n\",\n      \"@param tiesTrace indices of constant values in <code>ranks</code>\\n-- specifically, for any i and j in TiesTrace, <code>ranks[i]</code> equals <code>ranks[j]</code>\\n\",\n      \"@param tiesTrace list of indices where <code>ranks</code> remains the same\\n-- in the context of this list, if i and j are in TiesTrace, the values <code>ranks[i]</code> and <code>ranks[j]</code> are equal\\n\"\n    ]\n  },\n  {\n    \"tag\": \"@param data array to modify\",\n    \"alternatives\": [\n      \"@param data input array to modify\",\n      \"@param array that needs modification\",\n      \"@param array to be altered\",\n      \"@param array for data modification\",\n      \"@param array requiring modification\"\n    ]\n  },\n  {\n    \"tag\": \"@param tiesTrace list of index values to set\",\n    \"alternatives\": [\n      \"@param tiesTrace list of indices to be assigned\",\n      \"@param list of index values for assignment\",\n      \"@param list of indices to set\",\n      \"@param values to assign to the index list\",\n      \"@param list of indices that need assignment\"\n    ]\n  },\n  {\n    \"tag\": \"@param value value to set\",\n    \"alternatives\": [\n      \"@param value to be assigned\",\n      \"@param value for assignment\",\n      \"@param value to be set\",\n      \"@param value to assign\",\n      \"@param value that needs to be set\"\n    ]\n  },\n  {\n    \"tag\": \"@param ranks array to modify\",\n    \"alternatives\": [\n      \"@param ranks input array to modify\",\n      \"@param array that requires modification\",\n      \"@param array to be changed\",\n      \"@param array for modification\",\n      \"@param array needing modification\"\n    ]\n  },\n  {\n    \"tag\": \"@param nanPositions list of index values to set to <code>Double.NaN</code>\",\n    \"alternatives\": [\n      \"@param nanPositions list of indices to be assigned with <code>Double.NaN</code>\",\n      \"@param list of index values for assigning <code>Double.NaN</code>\",\n      \"@param list of indices to set as <code>Double.NaN</code>\",\n      \"@param values to assign as <code>Double.NaN</code> to the index list\",\n      \"@param list of indices that should be set as <code>Double.NaN</code>\"\n    ]\n  },\n  {\n    \"tag\": \"@param ranks array to search for <code>NaNs</code>\",\n    \"alternatives\": [\n      \"@param ranks array to find <code>NaN</code> values in\",\n      \"@param array where <code>NaNs</code> are to be searched for\",\n      \"@param array to search for <code>NaN</code> occurrences\",\n      \"@param array with <code>NaNs</code> that needs to be analyzed\",\n      \"@param ranks array for <code>NaN</code> detection\"\n    ]\n  },\n  {\n    \"tag\": \"@return list of indexes i such that <code>ranks[i] = NaN</code>\",\n    \"alternatives\": [\n      \"@return list of indexes i where <code>ranks[i]</code> is equal to <code>NaN</code>\",\n      \"@return list of indexes i with <code>ranks[i]</code> equal to <code>NaN</code>\",\n      \"@return list of indexes i where <code>ranks[i]</code> is <code>NaN</code>\",\n      \"@return list of indexes i having <code>ranks[i]</code> as <code>NaN</code>\",\n      \"@return list of indexes i with <code>ranks[i]</code> as <code>NaN</code>\"\n    ]\n  },\n  {\n    \"tag\": \"@param tiesStrategy the TiesStrategy to use\",\n    \"alternatives\": [\n      \"@param tiesStrategy strategy to handle ties\",\n      \"@param tiesStrategy selected strategy\",\n      \"@param tiesStrategy chosen to handle ties\",\n      \"@param tiesStrategy for dealing with ties\",\n      \"@param tiesStrategy to be used\"\n    ]\n  },\n  {\n    \"tag\": \"@param nanStrategy the NaNStrategy to use\",\n    \"alternatives\": [\n      \"@param nanStrategy strategy to handle NaNs\",\n      \"@param nanStrategy selected strategy\",\n      \"@param nanStrategy chosen to handle NaNs\",\n      \"@param nanStrategy for dealing with NaNs\",\n      \"@param nanStrategy to be used\"\n    ]\n  },\n  {\n    \"tag\": \"@param nanStrategy NaNStrategy to use\",\n    \"alternatives\": [\n      \"@param nanStrategy strategy to handle NaNs\",\n      \"@param nanStrategy selected strategy\",\n      \"@param nanStrategy chosen to handle NaNs\",\n      \"@param nanStrategy for dealing with NaNs\",\n      \"@param nanStrategy to be used\"\n    ]\n  },\n  {\n    \"tag\": \"@param tiesStrategy TiesStrategy to use\",\n    \"alternatives\": [\n      \"@param tiesStrategy strategy to handle ties\",\n      \"@param tiesStrategy selected strategy\",\n      \"@param tiesStrategy chosen to handle ties\",\n      \"@param tiesStrategy for dealing with ties\",\n      \"@param tiesStrategy to be used\"\n    ]\n  },\n  {\n    \"tag\": \"@param randomGenerator source of random data\",\n    \"alternatives\": [\n      \"@param randomGenerator random data source\",\n      \"@param randomGenerator generator of random values\",\n      \"@param randomGenerator source for generating random data\",\n      \"@param randomGenerator for obtaining random data\",\n      \"@param randomGenerator used to generate random values\"\n    ]\n  },\n  {\n    \"tag\": \"@param nanStrategy NaNStrategy to use\",\n    \"alternatives\": [\n      \"@param nanStrategy strategy to handle NaNs\",\n      \"@param nanStrategy selected strategy\",\n      \"@param nanStrategy chosen to handle NaNs\",\n      \"@param nanStrategy for dealing with NaNs\",\n      \"@param nanStrategy to be used\"\n    ]\n  }\n]"