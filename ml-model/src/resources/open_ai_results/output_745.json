"[\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the second key',\n      '@param secondKey the second key',\n      '@param key2 the other key',\n      '@param key2 the secondary key',\n      '@param key2 the next key'\n    ]\n  },\n  {\n    'tag': '@param value the value to store',\n    'alternatives': [\n      '@param value the value to store',\n      '@param val the value to store',\n      '@param storedValue the value to store',\n      '@param storeValue the value to store',\n      '@param storingValue the value to store'\n    ]\n  },\n  {\n    'tag': '@return the value previously mapped to this combined key, null if none',\n    'alternatives': [\n      '@return the value previously associated with this combined key, null if none',\n      '@return the previously mapped value for this combined key, null if none',\n      '@return the value that was previously mapped to this combined key, null if none',\n      '@return the value previously assigned to this combined key, null if none',\n      '@return the value that was previously associated with this combined key, null if none'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key',\n    'alternatives': [\n      '@param key1 the first key',\n      '@param firstKey the first key',\n      '@param key1 the initial key',\n      '@param key1 the primary key',\n      '@param key1 the starting key'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the second key',\n      '@param secondKey the second key',\n      '@param key2 the other key',\n      '@param key2 the secondary key',\n      '@param key2 the next key'\n    ]\n  },\n  {\n    'tag': '@return the value mapped to the removed key, null if key not in map',\n    'alternatives': [\n      '@return the value associated with the removed key, null if key not found',\n      '@return the value mapped to the key that was removed, null if key not found',\n      '@return the value that was previously assigned to the removed key, null if key not found',\n      '@return the value previously mapped to the removed key, null if the key is not present in the map',\n      '@return the value that was associated with the removed key, null if the key is not present in the map'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key',\n    'alternatives': [\n      '@param key1 the first key',\n      '@param firstKey the first key',\n      '@param key1 the initial key',\n      '@param key1 the primary key',\n      '@param key1 the starting key'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the second key',\n      '@param secondKey the second key',\n      '@param key2 the other key',\n      '@param key2 the secondary key',\n      '@param key2 the next key'\n    ]\n  },\n  {\n    'tag': '@return the hash code',\n    'alternatives': [\n      '@return the hash code',\n      '@return the hash value',\n      '@return the result of the hash function',\n      '@return the calculated hash code',\n      '@return the computed hash code'\n    ]\n  },\n  {\n    'tag': '@param entry the entry to compare to',\n    'alternatives': [\n      '@param entry the entry to compare to',\n      '@param entryToCompare the entry to compare to',\n      '@param item the item to compare with',\n      '@param compareEntry the entry to perform comparison on',\n      '@param compareWith the entry to compare against'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key',\n    'alternatives': [\n      '@param key1 the first key',\n      '@param firstKey the first key',\n      '@param key1 the initial key',\n      '@param key1 the primary key',\n      '@param key1 the starting key'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the second key',\n      '@param secondKey the second key',\n      '@param key2 the other key',\n      '@param key2 the secondary key',\n      '@param key2 the next key'\n    ]\n  },\n  {\n    'tag': '@return true if the key matches',\n    'alternatives': [\n      '@return true if the key matches',\n      '@return true if the key is a match',\n      '@return true if the provided key is a match',\n      '@return true if the given key matches',\n      '@return true if the specified key is a match'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key',\n    'alternatives': [\n      '@param key1 the first key',\n      '@param firstKey the first key',\n      '@param key1 the initial key',\n      '@param key1 the primary key',\n      '@param key1 the starting key'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the second key',\n      '@param secondKey the second key',\n      '@param key2 the other key',\n      '@param key2 the secondary key',\n      '@param key2 the next key'\n    ]\n  },\n  {\n    'tag': '@param key3 the third key',\n    'alternatives': [\n      '@param key3 the third key',\n      '@param thirdKey the third key',\n      '@param key3 the additional key',\n      '@param key3 the other key',\n      '@param key3 the next key'\n    ]\n  },\n  {\n    'tag': '@return the mapped value, null if no match',\n    'alternatives': [\n      '@return the value associated with the key, null if no match',\n      '@return the value mapped to the given key, null if no match',\n      '@return the value that corresponds to the key, null if no match',\n      '@return the value associated with the provided key, null if no match',\n      '@return the value that is mapped to the key, null if no match'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key',\n    'alternatives': [\n      '@param key1 the first key',\n      '@param firstKey the first key',\n      '@param key1 the initial key',\n      '@param key1 the primary key',\n      '@param key1 the starting key'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the second key',\n      '@param secondKey the second key',\n      '@param key2 the other key',\n      '@param key2 the secondary key',\n      '@param key2 the next key'\n    ]\n  },\n  {\n    'tag': '@param key3 the third key',\n    'alternatives': [\n      '@param key3 the third key',\n      '@param thirdKey the third key',\n      '@param key3 the additional key', \n      '@param key3 the other key', \n      '@param key3 the next key'\n    ]\n  },\n  {\n    'tag': '@return true if the map contains the key',\n    'alternatives': [\n      '@return true if the key is contained in the map',\n      '@return true if the map includes the key',\n      '@return true if the map contains the provided key',\n      '@return true if the specified key is present in the map',\n      '@return true if the key exists in the map'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key',\n    'alternatives': [\n      '@param key1 the first key',\n      '@param firstKey the first key',\n      '@param key1 the initial key',\n      '@param key1 the primary key',\n      '@param key1 the starting key'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the second key',\n      '@param secondKey the second key',\n      '@param key2 the other key',\n      '@param key2 the secondary key',\n      '@param key2 the next key'\n    ]\n  },\n  {\n    'tag': '@param key3 the third key',\n    'alternatives': [\n      '@param key3 the third key',\n      '@param thirdKey the third key',\n      '@param key3 the additional key',\n      '@param key3 the other key',\n      '@param key3 the next key'\n    ]\n  },\n  {\n    'tag': '@param value the value to store',\n    'alternatives': [\n      '@param value the value to store',\n      '@param val the value to store',\n      '@param storedValue the value to store',\n      '@param storeValue the value to store',\n      '@param storingValue the value to store'\n    ]\n  }\n]"