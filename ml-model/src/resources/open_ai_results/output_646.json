"output=[\n  {\n    'tag': '@return the converted key',\n    'alternatives': [\n      '@return the key after conve rsion',\n      '@return the key that has been converted',\n      '@return the transformed key',\n      '@return the key after being converted',\n      '@return the key that has undergone conversion'\n    ]\n  },\n  {\n    'tag': '@param key the key to get a hash code for',\n    'alternatives': [\n      '@param key the key for which a hash code is obtained',\n      '@param key the key used to calculate a hash code',\n      '@param key the key to generate a hash code for',\n      '@param key the key that is hashed',\n      '@param key the key that we need to obtain a hash code for'\n    ]\n  },\n  {\n    'tag': '@return the hash code',\n    'alternatives': [\n      '@return the calculated hash code',\n      '@return the resulting hash code',\n      '@return the code that represents the hash',\n      '@return the computed hash code',\n      '@return the hash code value'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key to compare passed in from outside',\n    'alternatives': [\n      '@param key1 the first key to compare received from an external source',\n      '@param key1 the initial key for comparison provided externally',\n      '@param key1 the first key to compare passed from an external context',\n      '@param key1 the primary key for comparison received from outside',\n      '@param key1 the first key to compare obtained externally'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key extracted from the entry via <code>entry.key</code>',\n    'alternatives': [\n      '@param key2 the second key obtained by extracting <code>entry.key</code>',\n      '@param key2 the second key acquired from the entry using <code>entry.key</code>',\n      '@param key2 the second key derived from the entry through <code>entry.key</code>',\n      '@param key2 the second key extracted from the entry by <code>entry.key</code>',\n      '@param key2 the second key taken from the entry via <code>entry.key</code>'\n    ]\n  },\n  {\n    'tag': '@return true if equal',\n    'alternatives': [\n      '@return true if they are equal',\n      '@return true in case of equality',\n      '@return true if they are the same',\n      '@return true if they match',\n      '@return true if they have the same value'\n    ]\n  },\n  {\n    'tag': '@param value1 the first value to compare passed in from outside',\n    'alternatives': [\n      '@param value1 the first value to compare received from an external source',\n      '@param value1 the initial value for comparison provided externally',\n      '@param value1 the first value to compare passed from an external context',\n      '@param value1 the primary value for comparison received from outside',\n      '@param value1 the first value to compare obtained externally'\n    ]\n  },\n  {\n    'tag': '@param value2 the second value extracted from the entry via <code>getValue()</code>',\n    'alternatives': [\n      '@param value2 the second value obtained by extracting <code>getValue()</code>',\n      '@param value2 the second value acquired from the entry using <code>getValue()</code>',\n      '@param value2 the second value derived from the entry through <code>getValue()</code>',\n      '@param value2 the second value extracted from the entry by <code>getValue()</code>',\n      '@param value2 the second value taken from the entry via <code>getValue()</code>'\n    ]\n  },\n  {\n    'tag': '@return true if equal',\n    'alternatives': [\n      '@return true if they are equal',\n      '@return true in case of equality',\n      '@return true if they are the same',\n      '@return true if they match',\n      '@return true if they have the same value'\n    ]\n  },\n  {\n    'tag': '@param hashCode the hash code to use',\n    'alternatives': [\n      '@param hashCode the hash code to utilize',\n      '@param hashCode the hash code to employ',\n      '@param hashCode the hash code to apply',\n      '@param hashCode the specified hash code',\n      '@param hashCode the hash code to utilize in the operation'\n    ]\n  },\n  {\n    'tag': '@param dataSize the size of the data to pick a bucket from',\n    'alternatives': [\n      '@param dataSize the size of the data from which to select a bucket',\n      '@param dataSize the size of the data for selecting a bucket',\n      '@param dataSize the size of the data to choose a bucket from',\n      '@param dataSize the size of the data used for bucket selection',\n      '@param dataSize the size of the data to obtain a bucket from'\n    ]\n  },\n  {\n    'tag': '@return the bucket index',\n    'alternatives': [\n      '@return the index of the bucket',\n      '@return the index assigned to the bucket',\n      '@return the position of the bucket',\n      '@return the bucket position',\n      '@return the index of the selected bucket'\n    ]\n  },\n  {\n    'tag': '@param key the key',\n    'alternatives': [\n      '@param key the specified key',\n      '@param key the provided key',\n      '@param key the input key',\n      '@param key the given key',\n      '@param key the key being used'\n    ]\n  },\n  {\n    'tag': '@return the entry, null if no match',\n    'alternatives': [\n      '@return the entry, null if there is no match',\n      '@return the entry, null if it does not match',\n      '@return the entry, null if no match found',\n      '@return the entry, null if there is no match',\n      '@return the entry, null if it does not find a match'\n    ]\n  },\n  {\n    'tag': '@param entry the entry to update',\n    'alternatives': [\n      '@param entry the entry that requires updating',\n      '@param entry the entry to be updated',\n      '@param entry the entry that needs to be updated',\n      '@param entry the entry being modified',\n      '@param entry the entry that is being updated'\n    ]\n  },\n  {\n    'tag': '@param newValue the new value to store',\n    'alternatives': [\n      '@param newValue the value to store as new',\n      '@param newValue the value to save as new',\n      '@param newValue the new value to preserve',\n      '@param newValue the new value for storing',\n      '@param newValue the new value that will be stored'\n    ]\n  },\n  {\n    'tag': '@param entry the entry to update, not null',\n    'alternatives': [\n      '@param entry the entry that requires updating, must not be null',\n      '@param entry the entry to be updated, cannot be null',\n      '@param entry the entry that needs to be updated, not null',\n      '@param entry the entry being modified, cannot be null',\n      '@param entry the entry that is being updated, must not be null'\n    ]\n  },\n  {\n    'tag': '@param hashIndex the index in the data array',\n    'alternatives': [\n      '@param hashIndex the index in the data array',\n      '@param hashIndex the index within data array',\n      '@param hashIndex the index inside the data array',\n      '@param hashIndex the position in the data array',\n      '@param hashIndex the array data index'\n    ]\n  },\n  {\n    'tag': '@param hashCode the hash code of the key to add',\n    'alternatives': [\n      '@param hashCode the hash code of the key to insert',\n      '@param hashCode the hash code for the key to add',\n      '@param hashCode the hash code associated with the key to include',\n      '@param hashCode the hash code for adding the key',\n      '@param hashCode the key\\'s hash code to add'\n    ]\n  },\n  {\n    'tag': '@param key the key to add',\n    'alternatives': [\n      '@param key the key to include',\n      '@param key the key for addition',\n      '@param key the key to insert',\n      '@param key the key to append',\n      '@param key the key to put'\n    ]\n  },\n  {\n    'tag': '@param value the value to add',\n    'alternatives': [\n      '@param value the value to include',\n      '@param value the value for addition',\n      '@param value the value to insert',\n      '@param value the value to append',\n      '@param value the value to put'\n    ]\n  },\n  {\n    'tag': '@param hashIndex the index into the data array to store at',\n    'alternatives': [\n      '@param hashIndex the index to store at in the data array',\n      '@param hashIndex the index where storage is done in the data array',\n      '@param hashIndex the index for storing into the data array',\n      '@param hashIndex the index for storing at in the data array',\n      '@param hashIndex the index for placement in the data array'\n    ]\n  },\n  {\n    'tag': '@param hashCode the hash code of the key to add',\n    'alternatives': [\n      '@param hashCode the hash code of the key to insert',\n      '@param hashCode the hash code for the key to add',\n      '@param hashCode the hash code associated with the key to include',\n      '@param hashCode the hash code for adding the key',\n      '@param hashCode the key\\'s hash code to add'\n    ]\n  },\n  {\n    'tag': '@param key the key to add',\n    'alternatives': [\n      '@param key the key to include',\n      '@param key the key for addition',\n      '@param key the key to insert',\n      '@param key the key to append',\n      '@param key the key to put'\n    ]\n  },\n  {\n    'tag': '@param value the value to add',\n    'alternatives': [\n      '@param value the value to include',\n      '@param value the value for addition',\n      '@param value the value to insert',\n      '@param value the value to append',\n      '@param value the value to put'\n    ]\n  }\n]"