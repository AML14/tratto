"Here is the output:\n\noutput = [\n  {'tag': '@return true if this map contains a mapping for the specified key',\n   'alternatives': [\n     '@return true if this map has an association for the given key',\n     '@return true if this map holds a mapping for the provided key',\n     '@return true if there is a mapping for the specified key in this map'\n   ]},\n  {'tag': '@param value the value to search for',\n   'alternatives': [\n     '@param value the value to look for',\n     '@param value the value to find',\n     '@param value the value to locate'\n   ]},\n  {'tag': '@return true if the map contains the value',\n   'alternatives': [\n     '@return true if the value is present in the map',\n     '@return true if the map holds the value',\n     '@return true if the value exists in the map'\n   ]},\n  {'tag': '@param key the key to search for',\n   'alternatives': [\n     '@param key the key to look for',\n     '@param key the key to find',\n     '@param key the key to locate'\n   ]},\n  {'tag': '@param value the value to search for',\n   'alternatives': [\n     '@param value the value to look for',\n     '@param value the value to find',\n     '@param value the value to locate'\n   ]},\n  {'tag': '@return true if the map contains the value',\n   'alternatives': [\n     '@return true if the value is present in the map',\n     '@return true if the map holds the value',\n     '@return true if the value exists in the map'\n   ]},\n  {'tag': '@param key the key to retrieve',\n   'alternatives': [\n     '@param key the key to get',\n     '@param key the key to obtain',\n     '@param key the key to fetch'\n   ]},\n  {'tag': '@return the {@code Collection} of values, implementations should\\n  return an empty collection for no mapping',\n   'alternatives': [\n     '@return the set of values, implementations should provide an empty set in case of no mapping',\n     '@return the collection of values, implementations should return an empty collection if there is no mapping',\n     '@return the collection of values, implementations should return an empty collection when there is no mapping'\n   ]},\n  {'tag': '@param key the key to store against',\n   'alternatives': [\n     '@param key the key to store the value under',\n     '@param key the key to place the value against',\n     '@param key the key to add the value to'\n   ]},\n  {'tag': '@param value the value to add to the collection at the key',\n   'alternatives': [\n     '@param value the value to include in the collection for the key',\n     '@param value the value to append to the collection associated with the key',\n     '@param value the value to insert into the collection specified by the key'\n   ]},\n  {'tag': '@return true if the map changed as a result of this put operation, or false\\n  if the map already contained the key-value mapping and the collection\\n  type does not allow duplicate values, e.g. when using a Set',\n   'alternatives': [\n     '@return true if the map was modified by this put operation, or false if the map already contained the key-value mapping and the collection type does not permit duplicates, for instance, when using a Set',\n     '@return true if the map was changed after this put operation, or false if the map already had the key-value mapping and the collection type does not permit duplicate values, such as a Set',\n     '@return true if the map has been altered as a result of this put operation, or false if the map previously had the key-value mapping and the collection type does not support duplicate values, for example, when using a Set'\n   ]},\n  {'tag': '@throws UnsupportedOperationException if the put operation is not supported by\\n  this multi-valued map, e.g. if it is unmodifiable',\n   'alternatives': [\n     '@throws UnsupportedOperationException if the put operation is not allowed by this multi-valued map, for example, if it is unmodifiable',\n     '@throws UnsupportedOperationException if the put operation is not permitted by this multi-valued map, such as when it is unmodifiable',\n     '@throws UnsupportedOperationException if the put operation is unsupported by this multi-valued map, for instance, if it is unmodifiable'\n   ]},\n  {'tag': '@throws NullPointerException if the key or value is null and null is invalid (optional)',\n   'alternatives': [\n     '@throws NullPointerException if the key or value is null and null is not allowed (optional)',\n     '@throws NullPointerException if the key or value is null and null is forbidden (optional)',\n     '@throws NullPointerException if the key or value is null and null is not valid (optional)'\n   ]},\n  {'tag': '@throws IllegalArgumentException if some aspect of the specified key or value prevents\\n  it from being stored in this multi-valued map',\n   'alternatives': [\n     '@throws IllegalArgumentException if some characteristic of the specified key or value makes it impossible to store in this multi-valued map',\n     '@throws IllegalArgumentException if some feature of the specified key or value hinders its storage in this multi-valued map',\n     '@throws IllegalArgumentException if some attribute of the specified key or value obstructs its storage in this multi-valued map'\n   ]},\n  {'tag': '@param key the key to store against',\n   'alternatives': [\n     '@param key the key to store the value under',\n     '@param key the key to place the value against',\n     '@param key the key to add the value to'\n   ]},\n  {'tag': '@return true if the map changed as a result of this operation',\n   'alternatives': [\n     '@return true if the map was modified by this operation',\n     '@return true if the map was altered as a result of this operation',\n     '@return true if the map has been changed after this operation'\n   ]},\n  {'tag': '@return true if the map changed as a result of this operation',\n   'alternatives': [\n     '@return true if the map was modified by this operation',\n     '@return true if the map was altered as a result of this operation',\n     '@return true if the map has been changed after this operation'\n   ]},\n  {'tag': '@throws UnsupportedOperationException if the {@code putAll} operation is\\n  not supported by this map',\n   'alternatives': [\n     '@throws UnsupportedOperationException if the {@code putAll} operation is not allowed by this map',\n     '@throws UnsupportedOperationException if the {@code putAll} operation is not permitted by this map',\n     '@throws UnsupportedOperationException if the {@code putAll} operation is unsupported by this map'\n   ]},\n  {'tag': '@throws IllegalArgumentException if some property of a key or value in\\n  the specified map prevents it from being stored in this map',\n   'alternatives': [\n     '@throws IllegalArgumentException if some characteristic of a key or value in the specified map makes it impossible to store in this map',\n     '@throws IllegalArgumentException if some feature of a key or value in the specified map hinders its storage in this map',\n     '@throws IllegalArgumentException if some attribute of a key or value in the specified map obstructs its storage in this map'\n   ]},\n  {'tag': '@return true if the map changed as a result of this operation',\n   'alternatives': [\n     '@return true if the map was modified by this operation',\n     '@return true if the map was altered as a result of this operation',\n     '@return true if the map has been changed after this operation'\n   ]},\n  {'tag': '@throws UnsupportedOperationException if the {@code putAll} operation is\\n  not supported by this map',\n   'alternatives': [\n     '@throws UnsupportedOperationException if the {@code putAll} operation is not allowed by this map',\n     '@throws UnsupportedOperationException if the {@code putAll} operation is not permitted by this map',\n     '@throws UnsupportedOperationException if the {@code putAll} operation is unsupported by this map'\n   ]},\n  {'tag': '@throws IllegalArgumentException if some property of a key or value in\\n  the specified map prevents it from being stored in this map',\n   'alternatives': [\n     '@throws IllegalArgumentException if some characteristic of a key or value in the specified map makes it impossible to store in this map',\n     '@throws IllegalArgumentException if some feature of a key or value in the specified map hinders its storage in this map',\n     '@throws IllegalArgumentException if some attribute of a key or value in the specified map obstructs its storage in this map'\n   ]},\n  {'tag': '@param key the key to remove values from',\n   'alternatives': [\n     '@param key the key to eliminate values from',\n     '@param key the key to delete values from',\n     '@param key the key to eradicate values from'\n   ]},\n  {'tag': '@throws UnsupportedOperationException if the map is unmodifiable',\n   'alternatives': [\n     '@throws UnsupportedOperationException if the map cannot be modified',\n     '@throws UnsupportedOperationException if the map is not modifiable',\n     '@throws UnsupportedOperationException if the map is not editable'\n   ]},\n  {'tag': '@param key the key to remove from',\n   'alternatives': [\n     '@param key the key to delete',\n     '@param key the key to eliminate',\n     '@param key the key to eradicate'\n   ]}\n]"