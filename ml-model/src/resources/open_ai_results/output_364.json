"output=[\r\n  {\r\n    'tag': '@throws NumberIsTooSmallException if {@code end < start}',\r\n    'alternatives': [\r\n      '@throws NumberIsTooSmallException if {@code start > end}',\r\n      '@throws NumberIsTooSmallException if {@code start} is greater than {@code end}',\r\n      '@throws NumberIsTooSmallException in case {@code end < start}'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param n Expected dimension.',\r\n    'alternatives': [\r\n      '@param n The expected dimension.',\r\n      '@param n Dimension that is expected.',\r\n      '@param n The dimension to be expected.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws DimensionMismatchException if the dimensions do not match.',\r\n    'alternatives': [\r\n      '@throws DimensionMismatchException if the sizes do not match.',\r\n      '@throws DimensionMismatchException in case of mismatching dimensions.',\r\n      '@throws DimensionMismatchException if the dimensions are not aligned.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param visitor the visitor to be used to process the entries of this\\nvector',\r\n    'alternatives': [\r\n      '@param visitor The visitor to process the entries of this vector.',\r\n      '@param visitor The visitor to handle the entries of this vector.',\r\n      '@param visitor The visitor that will be applied to the entries of this vector.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the value returned by {@link FieldVectorPreservingVisitor#end()}\\nat the end of the walk',\r\n    'alternatives': [\r\n      '@return the result obtained by invoking {@link FieldVectorPreservingVisitor#end()} after walking the vector.',\r\n      '@return the outcome of {@link FieldVectorPreservingVisitor#end()} at the conclusion of the traversal.',\r\n      '@return the final value returned by {@link FieldVectorPreservingVisitor#end()} at the end of the stepping.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param visitor visitor to be used to process the entries of this vector',\r\n    'alternatives': [\r\n      '@param visitor The visitor to process the entries of this vector.',\r\n      '@param visitor The visitor to handle the entries of this vector.',\r\n      '@param visitor The visitor that will be applied to the entries of this vector.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param start the index of the first entry to be visited',\r\n    'alternatives': [\r\n      '@param start Index of the initial entry to visit.',\r\n      '@param start The starting index to be visited.',\r\n      '@param start The position of the first entry to be processed.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param end the index of the last entry to be visited (inclusive)',\r\n    'alternatives': [\r\n      '@param end Index of the final entry to visit (inclusive).',\r\n      '@param end The ending index to be visited (inclusive).',\r\n      '@param end The position of the last entry to be processed (inclusive).'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the value returned by {@link FieldVectorPreservingVisitor#end()}\\nat the end of the walk',\r\n    'alternatives': [\r\n      '@return the result obtained by invoking {@link FieldVectorPreservingVisitor#end()} after walking the vector.',\r\n      '@return the outcome of {@link FieldVectorPreservingVisitor#end()} at the conclusion of the traversal.',\r\n      '@return the final value returned by {@link FieldVectorPreservingVisitor#end()} at the end of the stepping.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws OutOfRangeException if the indices are not valid.',\r\n    'alternatives': [\r\n      '@throws OutOfRangeException if the indexes are out of range.',\r\n      '@throws OutOfRangeException in case of invalid indices.',\r\n      '@throws OutOfRangeException if the indices provided are not valid.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param visitor the visitor to be used to process the entries of this\\nvector',\r\n    'alternatives': [\r\n      '@param visitor The visitor to process the entries of this vector.',\r\n      '@param visitor The visitor to handle the entries of this vector.',\r\n      '@param visitor The visitor that will be applied to the entries of this vector.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the value returned by {@link FieldVectorPreservingVisitor#end()}\\nat the end of the walk',\r\n    'alternatives': [\r\n      '@return the result obtained by invoking {@link FieldVectorPreservingVisitor#end()} after walking the vector.',\r\n      '@return the outcome of {@link FieldVectorPreservingVisitor#end()} at the conclusion of the traversal.',\r\n      '@return the final value returned by {@link FieldVectorPreservingVisitor#end()} at the end of the stepping.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param visitor visitor to be used to process the entries of this vector',\r\n    'alternatives': [\r\n      '@param visitor The visitor to process the entries of this vector.',\r\n      '@param visitor The visitor to handle the entries of this vector.',\r\n      '@param visitor The visitor that will be applied to the entries of this vector.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param start the index of the first entry to be visited',\r\n    'alternatives': [\r\n      '@param start Index of the initial entry to visit.',\r\n      '@param start The starting index to be visited.',\r\n      '@param start The position of the first entry to be processed.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param end the index of the last entry to be visited (inclusive)',\r\n    'alternatives': [\r\n      '@param end Index of the final entry to visit (inclusive).',\r\n      '@param end The ending index to be visited (inclusive).',\r\n      '@param end The position of the last entry to be processed (inclusive).'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the value returned by {@link FieldVectorPreservingVisitor#end()}\\nat the end of the walk',\r\n    'alternatives': [\r\n      '@return the result obtained by invoking {@link FieldVectorPreservingVisitor#end()} after walking the vector.',\r\n      '@return the outcome of {@link FieldVectorPreservingVisitor#end()} at the conclusion of the traversal.',\r\n      '@return the final value returned by {@link FieldVectorPreservingVisitor#end()} at the end of the stepping.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws OutOfRangeException if the indices are not valid.',\r\n    'alternatives': [\r\n      '@throws OutOfRangeException if the indexes are out of range.',\r\n      '@throws OutOfRangeException in case of invalid indices.',\r\n      '@throws OutOfRangeException if the indices provided are not valid.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param visitor the visitor to be used to process and modify the entries\\nof this vector',\r\n    'alternatives': [\r\n      '@param visitor The visitor to process and modify the entries of this vector.',\r\n      '@param visitor The visitor to handle and change the entries of this vector.',\r\n      '@param visitor The visitor that will be applied to process and modify the entries of this vector.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the value returned by {@link FieldVectorChangingVisitor#end()}\\nat the end of the walk',\r\n    'alternatives': [\r\n      '@return the result obtained by calling {@link FieldVectorChangingVisitor#end()} at the end of the traversal.',\r\n      '@return the outcome of {@link FieldVectorChangingVisitor#end()} when the walk completes.',\r\n      '@return the final value returned by {@link FieldVectorChangingVisitor#end()} at the conclusion of the walk.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param visitor visitor to be used to process the entries of this vector',\r\n    'alternatives': [\r\n      '@param visitor The visitor to process the entries of this vector.',\r\n      '@param visitor The visitor to handle the entries of this vector.',\r\n      '@param visitor The visitor that will be applied to the entries of this vector.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param start the index of the first entry to be visited',\r\n    'alternatives': [\r\n      '@param start Index of the initial entry to visit.',\r\n      '@param start The starting index to be visited.',\r\n      '@param start The position of the first entry to be processed.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param end the index of the last entry to be visited (inclusive)',\r\n    'alternatives': [\r\n      '@param end Index of the final entry to visit (inclusive).',\r\n      '@param end The ending index to be visited (inclusive).',\r\n      '@param end The position of the last entry to be processed (inclusive).'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the value returned by {@link FieldVectorChangingVisitor#end()}\\nat the end of the walk',\r\n    'alternatives': [\r\n      '@return the result obtained by calling {@link FieldVectorChangingVisitor#end()} at the end of the traversal.',\r\n      '@return the outcome of {@link FieldVectorChangingVisitor#end()} when the walk completes.',\r\n      '@return the final value returned by {@link FieldVectorChangingVisitor#end()} at the conclusion of the walk.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws OutOfRangeException if the indices are not valid.',\r\n    'alternatives': [\r\n      '@throws OutOfRangeException if the indexes are out of range.',\r\n      '@throws OutOfRangeException in case of invalid indices.',\r\n      '@throws OutOfRangeException if the indices provided are not valid.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param visitor the visitor to be used to process the entries of this\\nvector',\r\n    'alternatives': [\r\n      '@param visitor The visitor to process the entries of this vector.',\r\n      '@param visitor The visitor to handle the entries of this vector.',\r\n      '@param visitor The visitor that will be applied to the entries of this vector.'\r\n    ]\r\n  }\r\n]"