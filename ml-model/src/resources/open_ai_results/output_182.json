"output = [\n  {\n    'tag': '@return True if visible.',\n    'alternatives': [\n      '@return Returns true if it is visible.',\n      '@return Indicates whether it is visible.',\n      '@return Evaluates to true if visible.',\n      '@return Returns a boolean value indicating visibility.',\n      '@return Returns true if the object is visible.'\n    ]\n  },\n  {\n    'tag': '@param node The node to check.',\n    'alternatives': [\n      '@param node The node to verify.',\n      '@param node The node that needs to be checked.',\n      '@param node The node that should be examined.',\n      '@param node The node for which to perform the check.',\n      '@param node The node to validate.'\n    ]\n  },\n  {\n    'tag': '@param X1 The min abscissa of the area.',\n    'alternatives': [\n      '@param X1 The minimum X coordinate of the region.',\n      '@param X1 The minimum X value of the area.',\n      '@param X1 The smallest X value in the specified region.',\n      '@param X1 The lower limit of the horizontal axis.',\n      '@param X1 The smallest X coordinate within the area.'\n    ]\n  },\n  {\n    'tag': '@param Y1 The min ordinate of the area.',\n    'alternatives': [\n      '@param Y1 The minimum Y coordinate of the region.',\n      '@param Y1 The minimum Y value of the area.',\n      '@param Y1 The smallest Y value in the specified region.',\n      '@param Y1 The lower limit of the vertical axis.',\n      '@param Y1 The smallest Y coordinate within the area.'\n    ]\n  },\n  {\n    'tag': '@param X2 The max abscissa of the area.',\n    'alternatives': [\n      '@param X2 The maximum X coordinate of the region.',\n      '@param X2 The maximum X value of the area.',\n      '@param X2 The largest X value in the specified region.',\n      '@param X2 The upper limit of the horizontal axis.',\n      '@param X2 The largest X coordinate within the area.'\n    ]\n  },\n  {\n    'tag': '@param Y2 The max ordinate of the area.',\n    'alternatives': [\n      '@param Y2 The maximum Y coordinate of the region.',\n      '@param Y2 The maximum Y value of the area.',\n      '@param Y2 The largest Y value in the specified region.',\n      '@param Y2 The upper limit of the vertical axis.',\n      '@param Y2 The largest Y coordinate within the area.'\n    ]\n  },\n  {\n    'tag': '@return True if the node lies in the given area.',\n    'alternatives': [\n      '@return Returns true if the node is within the specified area.',\n      '@return Indicates whether the node is located inside the provided area.',\n      '@return Evaluates to true if the node resides in the given region.',\n      '@return Returns true if the node is positioned within the specified bounds.',\n      '@return Returns a boolean value indicating if the node lies within the given area.'\n    ]\n  },\n  {\n    'tag': '@param sprite The sprite to check.',\n    'alternatives': [\n      '@param sprite The sprite to validate.',\n      '@param sprite The sprite that needs to be examined.',\n      '@param sprite The sprite to verify.',\n      '@param sprite The sprite for which to perform the check.',\n      '@param sprite The sprite to be checked.'\n    ]\n  },\n  {\n    'tag': '@param X1 The min abscissa of the area.',\n    'alternatives': [\n      '@param X1 The minimum X coordinate of the region.',\n      '@param X1 The minimum X value of the area.',\n      '@param X1 The smallest X value in the specified region.',\n      '@param X1 The lower limit of the horizontal axis.',\n      '@param X1 The smallest X coordinate within the area.'\n    ]\n  },\n  {\n    'tag': '@param Y1 The min ordinate of the area.',\n    'alternatives': [\n      '@param Y1 The minimum Y coordinate of the region.',\n      '@param Y1 The minimum Y value of the area.',\n      '@param Y1 The smallest Y value in the specified region.',\n      '@param Y1 The lower limit of the vertical axis.',\n      '@param Y1 The smallest Y coordinate within the area.'\n    ]\n  },\n  {\n    'tag': '@param X2 The max abscissa of the area.',\n    'alternatives': [\n      '@param X2 The maximum X coordinate of the region.',\n      '@param X2 The maximum X value of the area.',\n      '@param X2 The largest X value in the specified region.',\n      '@param X2 The upper limit of the horizontal axis.',\n      '@param X2 The largest X coordinate within the area.'\n    ]\n  },\n  {\n    'tag': '@param Y2 The max ordinate of the area.',\n    'alternatives': [\n      '@param Y2 The maximum Y coordinate of the region.',\n      '@param Y2 The maximum Y value of the area.',\n      '@param Y2 The largest Y value in the specified region.',\n      '@param Y2 The upper limit of the vertical axis.',\n      '@param Y2 The largest Y coordinate within the area.'\n    ]\n  },\n  {\n    'tag': '@return True if the node lies in the given area.',\n    'alternatives': [\n      '@return Returns true if the node is within the specified area.',\n      '@return Indicates whether the node is located inside the provided area.',\n      '@return Evaluates to true if the node resides in the given region.',\n      '@return Returns true if the node is positioned within the specified bounds.',\n      '@return Returns a boolean value indicating if the node lies within the given area.'\n    ]\n  },\n  {\n    'tag': '@param elt The node.',\n    'alternatives': [\n      '@param elt The element.',\n      '@param elt The object.',\n      '@param elt The item.',\n      '@param elt The element to process.',\n      '@param elt The target element.'\n    ]\n  },\n  {\n    'tag': '@param x The point abscissa.',\n    'alternatives': [\n      '@param x The X coordinate of the point.',\n      '@param x The X value of the point.',\n      '@param x The horizontal position of the point.',\n      '@param x The point\\'s X axis.',\n      '@param x The abscissa of the point.'\n    ]\n  },\n  {\n    'tag': '@param y The point ordinate.',\n    'alternatives': [\n      '@param y The Y coordinate of the point.',\n      '@param y The Y value of the point.',\n      '@param y The vertical position of the point.',\n      '@param y The point\\'s Y axis.',\n      '@param y The ordinate of the point.'\n    ]\n  },\n  {\n    'tag': '@return True if (x,y) is in the given element.',\n    'alternatives': [\n      '@return Returns true if the point (x,y) is located within the specified element.',\n      '@return Indicates whether the specified point (x,y) lies inside the element.',\n      '@return Evaluates to true if the position (x,y) resides in the given element.',\n      '@return Returns true if the (x,y) point is within the element.',\n      '@return Returns a boolean value indicating if the point (x,y) is in the given element.'\n    ]\n  },\n  {\n    'tag': '@param elt The sprite.',\n    'alternatives': [\n      '@param elt The element.',\n      '@param elt The object.',\n      '@param elt The item.',\n      '@param elt The element to process.',\n      '@param elt The target element.'\n    ]\n  },\n  {\n    'tag': '@param x The point abscissa.',\n    'alternatives': [\n      '@param x The X coordinate of the point.',\n      '@param x The X value of the point.',\n      '@param x The horizontal position of the point.',\n      '@param x The point\\'s X axis.',\n      '@param x The abscissa of the point.'\n    ]\n  },\n  {\n    'tag': '@param y The point ordinate.',\n    'alternatives': [\n      '@param y The Y coordinate of the point.',\n      '@param y The Y value of the point.',\n      '@param y The vertical position of the point.',\n      '@param y The point\\'s Y axis.',\n      '@param y The ordinate of the point.'\n    ]\n  },\n  {\n    'tag': '@return True if (x,y) is in the given element.',\n    'alternatives': [\n      '@return Returns true if the point (x,y) is located within the specified element.',\n      '@return Indicates whether the specified point (x,y) lies inside the element.',\n      '@return Evaluates to true if the position (x,y) resides in the given element.',\n      '@return Returns true if the (x,y) point is within the element.',\n      '@return Returns a boolean value indicating if the point (x,y) is in the given element.'\n    ]\n  },\n  {\n    'tag': '@param sprite The sprite.',\n    'alternatives': [\n      '@param sprite The element.',\n      '@param sprite The object.',\n      '@param sprite The item.',\n      '@param sprite The element to process.',\n      '@param sprite The target element.'\n    ]\n  },\n  {\n    'tag': '@param pos Where to stored the computed position, if null, the position\\n           is created.',\n    'alternatives': [\n      '@param pos The location to store the calculated position. If null, a new position will be created.',\n      '@param pos The position where the computed value will be stored, if it is null then a new position will be created.',\n      '@param pos The destination where the computed position will be stored, if pos is null then a new position will be created.',\n      '@param pos The storage location for the calculated position. If pos is null, a new position will be created instead.',\n      '@param pos The position where the calculated value should be stored. If pos is null, a new position will be created.'\n    ]\n  },\n  {\n    'tag': '@param units The units the computed position must be given into.',\n    'alternatives': [\n      '@param units The units in which the calculated position should be expressed.',\n      '@param units The unit of measurement for the computed position.',\n      '@param units The desired measurement units for the calculated position.',\n      '@param units The measurement system to be used for the computed position.',\n      '@param units The scale in which the computed position must be represented.'\n    ]\n  },\n  {\n    'tag': '@return The same instance as pos, or a new one if pos was null.',\n    'alternatives': [\n      '@return Returns the pos instance if not null, otherwise a new instance is returned.',\n      '@return Returns the pos object if it is not null. If pos is null, a new object is returned.',\n      '@return Returns either the pos instance or a new instance if pos is null.',\n      '@return Returns the pos object if it is not null, otherwise a new one is created.',\n      '@return Returns the pos instance if it exists, otherwise creates and returns a new instance.'\n    ]\n  }\n]"