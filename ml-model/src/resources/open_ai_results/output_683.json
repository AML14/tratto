"output = [\n  {\n    'tag': '@param group the style group to convert',\n    'alternatives': [\n      '@param group the style pack to convert',\n      '@param group the style set to convert',\n      '@param group the style collection to convert',\n      '@param group the style group to change',\n      '@param group the style group to modify'\n    ]\n  },\n  {\n    'tag': '@return string representation of the style group usable in TikZ.',\n    'alternatives': [\n      '@return string representation of the style group that can be used in TikZ.',\n      '@return a string that represents the style group and can be used in TikZ.',\n      '@return the string that represents the style group and can be utilized in TikZ.',\n      '@return a string that represents the style group and is usable in TikZ.',\n      '@return a string representing the style group that can be utilized in TikZ.'\n    ]\n  },\n  {\n    'tag': '@param graph The graph to send as events to the file.',\n    'alternatives': [\n      '@param graph The graph to dispatch as events to the file.',\n      '@param graph The graph to transmit as events to the file.',\n      '@param graph The graph to forward as events to the file.',\n      '@param graph The graph to deliver as events to the file.',\n      '@param graph The graph to propagate as events to the file.'\n    ]\n  },\n  {\n    'tag': '@param fileName Name of the file to write.',\n    'alternatives': [\n      '@param fileName File name to be written.',\n      '@param fileName The name of the file to be written.',\n      '@param fileName The name of the file to write to.',\n      '@param fileName The name of the file for writing.',\n      '@param fileName The name of the file to be saved.'\n    ]\n  },\n  {\n    'tag': '@throws IOException if an I/O error occurs while writing.',\n    'alternatives': [\n      '@throws IOException in case of writing I/O error.',\n      '@throws IOException if there is a writing I/O error.',\n      '@throws IOException if an error occurs during writing operation.',\n      '@throws IOException if there is an I/O error while writing.',\n      '@throws IOException when a writing I/O error happens.'\n    ]\n  },\n  {\n    'tag': '@param stream The stream where the graph is sent.',\n    'alternatives': [\n      '@param stream Stream where the graph is dispatched.',\n      '@param stream Stream where the graph is transmitted.',\n      '@param stream Stream where the graph is forwarded.',\n      '@param stream Stream where the graph is delivered.',\n      '@param stream Stream where the graph is propagated.'\n    ]\n  },\n  {\n    'tag': '@throws IOException if an I/O error occurs while writing.',\n    'alternatives': [\n      '@throws IOException in case of writing I/O error.',\n      '@throws IOException if there is a writing I/O error.',\n      '@throws IOException if an error occurs during writing operation.',\n      '@throws IOException if there is an I/O error while writing.',\n      '@throws IOException when a writing I/O error happens.'\n    ]\n  },\n  {\n    'tag': '@param graph The graph to send as events to the file.',\n    'alternatives': [\n      '@param graph The graph to dispatch as events to the file.',\n      '@param graph The graph to transmit as events to the file.',\n      '@param graph The graph to forward as events to the file.',\n      '@param graph The graph to deliver as events to the file.',\n      '@param graph The graph to propagate as events to the file.'\n    ]\n  },\n  {\n    'tag': '@param writer The writer where the graph is sent.',\n    'alternatives': [\n      '@param writer The writer where the graph is dispatched.',\n      '@param writer The writer where the graph is transmitted.',\n      '@param writer The writer where the graph is forwarded.',\n      '@param writer The writer where the graph is delivered.',\n      '@param writer The writer where the graph is propagated.'\n    ]\n  },\n  {\n    'tag': '@throws IOException if an I/O error occurs while writing.',\n    'alternatives': [\n      '@throws IOException in case of writing I/O error.',\n      '@throws IOException if there is a writing I/O error.',\n      '@throws IOException if an error occurs during writing operation.',\n      '@throws IOException if there is an I/O error while writing.',\n      '@throws IOException when a writing I/O error happens.'\n    ]\n  },\n  {\n    'tag': '@param fileName The name of the file where to output the graph events.',\n    'alternatives': [\n      '@param fileName The file name where graph events should be output.',\n      '@param fileName The name of the file where graph events are written.',\n      '@param fileName The name of the file where graph events are outputted.',\n      '@param fileName The file name where the graph events are to be output.',\n      '@param fileName The name of the file where the graph events are output.'\n    ]\n  },\n  {\n    'tag': '@throws IOException If an I/O error occurs while writing.',\n    'alternatives': [\n      '@throws IOException If there is a writing I/O error.',\n      '@throws IOException If an error occurs during writing.',\n      '@throws IOException In case of writing I/O error.',\n      '@throws IOException If there is an I/O error while writing.',\n      '@throws IOException When a writing I/O error happens.'\n    ]\n  },\n  {\n    'tag': '@param stream The file stream where to output the graph events.',\n    'alternatives': [\n      '@param stream The file stream where graph events should be output.',\n      '@param stream The file stream where graph events are written.',\n      '@param stream The file stream where graph events are outputted.',\n      '@param stream The file stream where the graph events are to be output.',\n      '@param stream The file stream where the graph events are output.'\n    ]\n  },\n  {\n    'tag': '@throws IOException If an I/O error occurs while writing.',\n    'alternatives': [\n      '@throws IOException If there is a writing I/O error.',\n      '@throws IOException If an error occurs during writing.',\n      '@throws IOException In case of writing I/O error.',\n      '@throws IOException If there is an I/O error while writing.',\n      '@throws IOException When a writing I/O error happens.'\n    ]\n  },\n  {\n    'tag': '@param writer The writer where to output the graph events.',\n    'alternatives': [\n      '@param writer The writer where graph events should be output.',\n      '@param writer The writer where graph events are written.',\n      '@param writer The writer where graph events are outputted.',\n      '@param writer The writer where the graph events are to be output.',\n      '@param writer The writer where the graph events are output.'\n    ]\n  },\n  {\n    'tag': '@throws IOException If an I/O error occurs while writing.',\n    'alternatives': [\n      '@throws IOException If there is a writing I/O error.',\n      '@throws IOException If an error occurs during writing.',\n      '@throws IOException In case of writing I/O error.',\n      '@throws IOException If there is an I/O error while writing.',\n      '@throws IOException When a writing I/O error happens.'\n    ]\n  },\n  {\n    'tag': '@throws IOException If an I/O error occurs during write.',\n    'alternatives': [\n      '@throws IOException If there is a writing I/O error during write.',\n      '@throws IOException If an error occurs during write operation.',\n      '@throws IOException In case of I/O error during write.',\n      '@throws IOException If there is an I/O error while writing.',\n      '@throws IOException When a writing I/O error occurs.'\n    ]\n  },\n  {\n    'tag': '@throws IOException ',\n    'alternatives': [\n      '@throws IOException in case of an I/O error.',\n      '@throws IOException if there is an I/O error.',\n      '@throws IOException when an I/O error occurs.',\n      '@throws IOException if there is a problem with I/O.',\n      '@throws IOException if there is a failure in I/O.'\n    ]\n  },\n  {\n    'tag': '@throws XMLStreamException ',\n    'alternatives': [\n      '@throws XMLStreamException if there is an exception related to XML streaming.',\n      '@throws XMLStreamException in case of an exception during XML streaming.',\n      '@throws XMLStreamException if there is an error in XML streaming.',\n      '@throws XMLStreamException when an exception occurs during XML streaming.',\n      '@throws XMLStreamException if there is a problem with XML streaming.'\n    ]\n  },\n  {\n    'tag': '@throws IOException ',\n    'alternatives': [\n      '@throws IOException in case of an I/O error.',\n      '@throws IOException if there is an I/O error.',\n      '@throws IOException when an I/O error occurs.',\n      '@throws IOException if there is a problem with I/O.',\n      '@throws IOException if there is a failure in I/O.'\n    ]\n  },\n  {\n    'tag': '@return the next event in the stream',\n    'alternatives': [\n      '@return the subsequent event in the stream',\n      '@return the following event in the stream',\n      '@return the event that comes next in the stream',\n      '@return the event immediately following in the stream',\n      '@return the event that follows in the stream'\n    ]\n  },\n  {\n    'tag': '@throws IOException ',\n    'alternatives': [\n      '@throws IOException in case of an I/O error.',\n      '@throws IOException if there is an I/O error.',\n      '@throws IOException when an I/O error occurs.',\n      '@throws IOException if there is a problem with I/O.',\n      '@throws IOException if there is a failure in I/O.'\n    ]\n  }\n]"