"output = [\n  {\n    'tag': '@return sqrt(<i>x</i><sup>2</sup>&nbsp;+<i>y</i><sup>2</sup>)',\n    'alternatives': [\n      '@return square root of (<i>x</i><sup>2</sup>&nbsp;+<i>y</i><sup>2</sup>)',\n      '@return the square root of the sum of the squares of <i>x</i> and <i>y</i>',\n      '@return the square root of the quantity <i>x</i> squared plus <i>y</i> squared',\n      '@return the square root of the sum of squares of <i>x</i> and <i>y</i>',\n      '@return the square root of the sum of the squares of <i>x</i> and <i>y</i>'\n    ]\n  },\n  {\n    'tag': '@param dividend the number to be divided',\n    'alternatives': [\n      '@param dividend the number that will be divided',\n      '@param dividend the number that is going to be divided',\n      '@param dividend the number which is divided',\n      '@param dividend the number that is being divided',\n      '@param dividend the number to divide'\n    ]\n  },\n  {\n    'tag': '@param divisor the number by which to divide',\n    'alternatives': [\n      '@param divisor the number by which the division will occur',\n      '@param divisor the number that divides',\n      '@param divisor the number which will divide',\n      '@param divisor the number that is dividing',\n      '@param divisor the number to divide by'\n    ]\n  },\n  {\n    'tag': '@return the remainder, rounded',\n    'alternatives': [\n      '@return the remainder, rounded to the nearest whole number',\n      '@return the rounded remainder',\n      '@return the remainder after rounding',\n      '@return the rounded value of the remainder',\n      '@return the remainder, rounded to the nearest integer'\n    ]\n  },\n  {\n    'tag': '@param n number to convert to int',\n    'alternatives': [\n      '@param n the number to convert into an integer',\n      '@param n the input number to be converted into an integer',\n      '@param n the number that needs to be converted to an integer',\n      '@param n the number that will be converted to an integer',\n      '@param n the numeric value to convert to an integer'\n    ]\n  },\n  {\n    'tag': '@return integer with same valie as n if no overflows occur',\n    'alternatives': [\n      '@return an integer with the same value as n if no overflows happen',\n      '@return the integer value that is equivalent to n if no overflows occur',\n      '@return an integer that has the same value as n if no overflows take place',\n      '@return an integer equal to n if no overflows happen',\n      '@return the integer value equal to n, if no overflows occur'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException if n cannot fit into an int',\n    'alternatives': [\n      '@throws MathArithmeticException if n is too large to fit into an int',\n      '@throws MathArithmeticException if n is not within the range of an int',\n      '@throws MathArithmeticException if n exceeds the maximum value of an int',\n      '@throws MathArithmeticException if n cannot be represented as an int',\n      '@throws MathArithmeticException if n is greater than the maximum int value'\n    ]\n  },\n  {\n    'tag': '@param n number to increment',\n    'alternatives': [\n      '@param n the number to increase by one',\n      '@param n the input number that will be incremented',\n      '@param n the number that will be increased',\n      '@param n the value to be incremented',\n      '@param n the numeric value that needs to be incremented'\n    ]\n  },\n  {\n    'tag': '@return n+1 if no overflows occur',\n    'alternatives': [\n      '@return n plus one if there are no overflows',\n      '@return the value of n plus one, unless an overflow occurs',\n      '@return the result of adding one to n if no overflows happen',\n      '@return the incremented value of n, unless an overflow occurs',\n      '@return n increased by one, if no overflows take place'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException if an overflow occurs',\n    'alternatives': [\n      '@throws MathArithmeticException when an overflow happens',\n      '@throws MathArithmeticException if an overflow takes place',\n      '@throws MathArithmeticException if the operation causes an overflow',\n      '@throws MathArithmeticException if there is an overflow',\n      '@throws MathArithmeticException if the operation exceeds the allowed range'\n    ]\n  },\n  {\n    'tag': '@param n number to increment',\n    'alternatives': [\n      '@param n the number that will be increased by one',\n      '@param n the input number to be incremented',\n      '@param n the number that will be incremented',\n      '@param n the value to be incremented',\n      '@param n the numeric value to increase by one'\n    ]\n  },\n  {\n    'tag': '@return n+1 if no overflows occur',\n    'alternatives': [\n      '@return n plus one if there are no overflows',\n      '@return the incremented value of n, unless an overflow occurs',\n      '@return the result of adding one to n if no overflows happen',\n      '@return the value of n increased by one, unless an overflow occurs',\n      '@return n incremented by one, if no overflows take place'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException if an overflow occurs',\n    'alternatives': [\n      '@throws MathArithmeticException if the operation causes an overflow',\n      '@throws MathArithmeticException if the operation exceeds the allowed range',\n      '@throws MathArithmeticException if there is an overflow',\n      '@throws MathArithmeticException when an overflow happens',\n      '@throws MathArithmeticException if an overflow takes place'\n    ]\n  },\n  {\n    'tag': '@param n number to decrement',\n    'alternatives': [\n      '@param n the number to decrease by one',\n      '@param n the input number that will be decremented',\n      '@param n the number that will be reduced',\n      '@param n the value to be decremented',\n      '@param n the numeric value that needs to be decremented'\n    ]\n  },\n  {\n    'tag': '@return n-1 if no overflows occur',\n    'alternatives': [\n      '@return n minus one if there are no overflows',\n      '@return the value of n minus one, unless an overflow occurs',\n      '@return the result of subtracting one from n if no overflows happen',\n      '@return the decremented value of n, unless an overflow occurs',\n      '@return n decreased by one, if no overflows take place'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException if an overflow occurs',\n    'alternatives': [\n      '@throws MathArithmeticException when an overflow happens',\n      '@throws MathArithmeticException if an overflow takes place',\n      '@throws MathArithmeticException if the operation causes an overflow',\n      '@throws MathArithmeticException if there is an overflow',\n      '@throws MathArithmeticException if the operation exceeds the allowed range'\n    ]\n  },\n  {\n    'tag': '@param n number to decrement',\n    'alternatives': [\n      '@param n the number that will be decreased by one',\n      '@param n the input number to be decremented',\n      '@param n the number that will be decremented',\n      '@param n the value to be decremented',\n      '@param n the numeric value to decrease by one'\n    ]\n  },\n  {\n    'tag': '@return n-1 if no overflows occur',\n    'alternatives': [\n      '@return n minus one if there are no overflows',\n      '@return the decremented value of n, unless an overflow occurs',\n      '@return the result of subtracting one from n if no overflows happen',\n      '@return the value of n decreased by one, unless an overflow occurs',\n      '@return n reduced by one, if no overflows take place'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException if an overflow occurs',\n    'alternatives': [\n      '@throws MathArithmeticException if the operation causes an overflow',\n      '@throws MathArithmeticException if the operation exceeds the allowed range',\n      '@throws MathArithmeticException if there is an overflow',\n      '@throws MathArithmeticException when an overflow happens',\n      '@throws MathArithmeticException if an overflow takes place'\n    ]\n  },\n  {\n    'tag': '@param a first number to add',\n    'alternatives': [\n      '@param a the initial number to perform addition with',\n      '@param a the number that will be added to another number',\n      '@param a the first operand in the addition operation',\n      '@param a the number that will participate in the addition',\n      '@param a the value that will be added to another number'\n    ]\n  },\n  {\n    'tag': '@param b second number to add',\n    'alternatives': [\n      '@param b the number to add to the first number',\n      '@param b the second operand in the addition operation',\n      '@param b the number that will be added to another number',\n      '@param b the value that will be added to the first number',\n      '@param b the number that will participate in the addition'\n    ]\n  },\n  {\n    'tag': '@return a+b if no overflows occur',\n    'alternatives': [\n      '@return the sum of a and b if no overflows happen',\n      '@return the result of adding a and b if no overflows occur',\n      '@return the addition of a and b if no overflows take place',\n      '@return a plus b if there are no overflows',\n      '@return the value obtained by adding a and b, unless an overflow occurs'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException if an overflow occurs',\n    'alternatives': [\n      '@throws MathArithmeticException if the addition causes an overflow',\n      '@throws MathArithmeticException if the operation exceeds the allowed range',\n      '@throws MathArithmeticException if there is an overflow during the addition',\n      '@throws MathArithmeticException when an overflow happens during the addition',\n      '@throws MathArithmeticException if the addition results in an overflow'\n    ]\n  },\n  {\n    'tag': '@param a first number to add',\n    'alternatives': [\n      '@param a the number that will be incremented by another number',\n      '@param a the first operand to be added',\n      '@param a the number that participates in the addition',\n      '@param a the value that will be added to another number',\n      '@param a the numeric value that will undergo addition'\n    ]\n  },\n  {\n    'tag': '@param b second number to add',\n    'alternatives': [\n      '@param b the number that will be added to the first number',\n      '@param b the second operand to be added',\n      '@param b the number that will participate in the addition',\n      '@param b the value that will be added to the first number',\n      '@param b the numeric value that will be added'\n    ]\n  }\n]"