"[\n  {\n    \"tag\": \"@throws IllegalArgumentException if the load factor is less than zero\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the load factor is negative\",\n      \"@throws IllegalArgumentException if the load factor is below zero\",\n      \"@throws IllegalArgumentException if the negative load factor is provided\",\n      \"@throws IllegalArgumentException if a negative load factor is given\",\n      \"@throws IllegalArgumentException if the load factor is less than zero\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the maximum size is less than one\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the maximum size is below one\",\n      \"@throws IllegalArgumentException if the maximum size is lower than one\",\n      \"@throws IllegalArgumentException if a value less than one is specified for the maximum size\",\n      \"@throws IllegalArgumentException if the maximum size is smaller than one\",\n      \"@throws IllegalArgumentException if the maximum size is less than one\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the load factor is less than zero\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the load factor is negative\",\n      \"@throws IllegalArgumentException if the load factor is below zero\",\n      \"@throws IllegalArgumentException if the negative load factor is provided\",\n      \"@throws IllegalArgumentException if a negative load factor is given\",\n      \"@throws IllegalArgumentException if the load factor is less than zero\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the initial size is negative or larger than the maximum size\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the initial size is negative or exceeds the maximum size\",\n      \"@throws IllegalArgumentException if the initial size is either negative or greater than the maximum size\",\n      \"@throws IllegalArgumentException if the initial size is negative or larger than the maximum allowable size\",\n      \"@throws IllegalArgumentException if the initial size is less than zero or exceeds the maximum size\",\n      \"@throws IllegalArgumentException if the initial size is negative or larger than the maximum size\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the maximum size is less than one\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the maximum size is below one\",\n      \"@throws IllegalArgumentException if the maximum size is lower than one\",\n      \"@throws IllegalArgumentException if a value less than one is specified for the maximum size\",\n      \"@throws IllegalArgumentException if the maximum size is smaller than one\",\n      \"@throws IllegalArgumentException if the maximum size is less than one\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the load factor is less than zero\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the load factor is negative\",\n      \"@throws IllegalArgumentException if the load factor is below zero\",\n      \"@throws IllegalArgumentException if the negative load factor is provided\",\n      \"@throws IllegalArgumentException if a negative load factor is given\",\n      \"@throws IllegalArgumentException if the load factor is less than zero\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the maximum size is less than one\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the maximum size is below one\",\n      \"@throws IllegalArgumentException if the maximum size is lower than one\",\n      \"@throws IllegalArgumentException if a value less than one is specified for the maximum size\",\n      \"@throws IllegalArgumentException if the maximum size is smaller than one\",\n      \"@throws IllegalArgumentException if the maximum size is less than one\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the load factor is less than zero\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the load factor is negative\",\n      \"@throws IllegalArgumentException if the load factor is below zero\",\n      \"@throws IllegalArgumentException if the negative load factor is provided\",\n      \"@throws IllegalArgumentException if a negative load factor is given\",\n      \"@throws IllegalArgumentException if the load factor is less than zero\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the initial size is negative or larger than the maximum size\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the initial size is negative or exceeds the maximum size\",\n      \"@throws IllegalArgumentException if the initial size is either negative or greater than the maximum size\",\n      \"@throws IllegalArgumentException if the initial size is negative or larger than the maximum allowable size\",\n      \"@throws IllegalArgumentException if the initial size is less than zero or exceeds the maximum size\",\n      \"@throws IllegalArgumentException if the initial size is negative or larger than the maximum size\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the maximum size is less than one\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the maximum size is below one\",\n      \"@throws IllegalArgumentException if the maximum size is lower than one\",\n      \"@throws IllegalArgumentException if a value less than one is specified for the maximum size\",\n      \"@throws IllegalArgumentException if the maximum size is smaller than one\",\n      \"@throws IllegalArgumentException if the maximum size is less than one\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the map is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the provided map is null\",\n      \"@throws NullPointerException if a null map is passed\",\n      \"@throws NullPointerException if the map parameter is null\",\n      \"@throws NullPointerException if the input map is null\",\n      \"@throws NullPointerException if the map is null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the map is empty\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the provided map is empty\",\n      \"@throws IllegalArgumentException if an empty map is passed\",\n      \"@throws IllegalArgumentException if the map parameter is empty\",\n      \"@throws IllegalArgumentException if the input map is empty\",\n      \"@throws IllegalArgumentException if the map is empty\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the map is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the provided map is null\",\n      \"@throws NullPointerException if a null map is passed\",\n      \"@throws NullPointerException if the map parameter is null\",\n      \"@throws NullPointerException if the input map is null\",\n      \"@throws NullPointerException if the map is null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the map is empty\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException if the provided map is empty\",\n      \"@throws IllegalArgumentException if an empty map is passed\",\n      \"@throws IllegalArgumentException if the map parameter is empty\",\n      \"@throws IllegalArgumentException if the input map is empty\",\n      \"@throws IllegalArgumentException if the map is empty\"\n    ]\n  },\n  {\n    \"tag\": \"@return {@code true}\",\n    \"alternatives\": [\n      \"@return the value {@code true}\",\n      \"@return the boolean value {@code true}\",\n      \"@return a boolean value of {@code true}\",\n      \"@return the constant value {@code true}\",\n      \"@return {@code true}\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if the map is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the provided map is null\",\n      \"@throws NullPointerException if a null map is passed\",\n      \"@throws NullPointerException if the map parameter is null\",\n      \"@throws NullPointerException if the input map is null\",\n      \"@throws NullPointerException if the map is null\"\n    ]\n  },\n  {\n    \"tag\": \"@param map the map to wrap, must not be null\",\n    \"alternatives\": [\n      \"@param map the map to wrap, which should not be null\",\n      \"@param map the map to be wrapped, should be non-null\",\n      \"@param map the map object to be wrapped, must not be null\",\n      \"@param map the map to wrap, must be non-null\",\n      \"@param map the map being wrapped, must not be null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if list is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the provided list is null\",\n      \"@throws NullPointerException if a null list is passed\",\n      \"@throws NullPointerException if the list parameter is null\",\n      \"@throws NullPointerException if the input list is null\",\n      \"@throws NullPointerException if list is null\"\n    ]\n  },\n  {\n    \"tag\": \"@param list the list to decorate, must not be null\",\n    \"alternatives\": [\n      \"@param list the non-null list to be decorated\",\n      \"@param list the list to enhance, should not be null\",\n      \"@param list the list object to be decorated, must not be null\",\n      \"@param list the list to decorate, should not be null\",\n      \"@param list the list to be decorated, must not be null\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if list is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if the provided list is null\",\n      \"@throws NullPointerException if a null list is passed\",\n      \"@throws NullPointerException if the list parameter is null\",\n      \"@throws NullPointerException if the input list is null\",\n      \"@throws NullPointerException if list is null\"\n    ]\n  },\n  {\n    \"tag\": \"@param list the list to decorate, must not be null\",\n    \"alternatives\": [\n      \"@param list the non-null list to be decorated\",\n      \"@param list the list to enhance, should not be null\",\n      \"@param list the list object to be decorated, must not be null\",\n      \"@param list the list to decorate, should not be null\",\n      \"@param list the list to be decorated, must not be null\"\n    ]\n  },\n  {\n    \"tag\": \"@param element the object to add at the specified index\",\n    \"alternatives\": [\n      \"@param element the element to insert at the given index\",\n      \"@param element the item to be added at the specific location\",\n      \"@param element the object to be inserted at the specified position\",\n      \"@param element the element to place at the specified index\",\n      \"@param element the object to add at the specified index\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if set or transformer is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if either set or transformer is null\",\n      \"@throws NullPointerException if null is passed for either set or transformer\",\n      \"@throws NullPointerException if set or transformer is found to be null\",\n      \"@throws NullPointerException if the set or transformer parameters are null\",\n      \"@throws NullPointerException if set or transformer is null\"\n    ]\n  },\n  {\n    \"tag\": \"@param set the set to decorate, must not be null\",\n    \"alternatives\": [\n      \"@param set the non-null set to be decorated\",\n      \"@param set the set to enhance, should not be null\",\n      \"@param set the set object to be decorated, must not be null\",\n      \"@param set the set to decorate, should not be null\",\n      \"@param set the set to be decorated, must not be null\"\n    ]\n  },\n  {\n    \"tag\": \"@param transformer the transformer to use for conversion, must not be null\",\n    \"alternatives\": [\n      \"@param transformer the non-null transformer to be used for conversion\",\n      \"@param transformer the transformer to apply for conversion, should not be null\",\n      \"@param transformer the transformer object to be used for conversion, must not be null\",\n      \"@param transformer the transformer to use for conversion, should not be null\",\n      \"@param transformer the transformer to be used for conversion, must not be null\"\n    ]\n  }\n]"