"output = [\n  {\n    'tag': '@throws InvalidRepresentationException iff the <code>representation</code> can not represent a valid chromosome',\n    'alternatives': [\n      '@throws InvalidRepresentationException if the <code>representation</code> cannot represent a valid chromosome.',\n      '@throws InvalidRepresentationException if the <code>representation</code> fails to represent a valid chromosome.',\n      '@throws InvalidRepresentationException in the case where the <code>representation</code> cannot represent a valid chromosome.',\n      '@throws InvalidRepresentationException if the <code>representation</code> is unable to represent a valid chromosome.',\n      '@throws InvalidRepresentationException if the <code>representation</code> doesn't represent a valid chromosome.'\n    ]\n  },\n  {\n    'tag': '@param population the population to test.',\n    'alternatives': [\n      '@param population the population that will be tested.',\n      '@param population the population being tested.',\n      '@param population the population to be tested.',\n      '@param population the population for testing purposes.',\n      '@param population the population that needs to be tested.'\n    ]\n  },\n  {\n    'tag': '@return <code>true</code> if this stopping condition is met by the given population,\\n  <code>false</code> otherwise.',\n    'alternatives': [\n      '@return <code>true</code> if the given population satisfies this stopping condition, <code>false</code> otherwise.',\n      '@return <code>true</code> if the given population meets this stopping condition, <code>false</code> otherwise.',\n      '@return <code>true</code> if the given population fulfills this stopping condition, <code>false</code> otherwise.',\n      '@return <code>true</code> if the given population meets the required stopping condition, <code>false</code> otherwise.',\n      '@return <code>true</code> if the given population satisfies the stopping condition, <code>false</code> otherwise.'\n    ]\n  },\n  {\n    'tag': '@param sequence the unpermuted (original) sequence of objects',\n    'alternatives': [\n      '@param sequence the original sequence of objects before permutation.',\n      '@param sequence the sequence of objects in its unpermuted (original) form.',\n      '@param sequence the sequence of objects prior to permutation.',\n      '@param sequence the original unpermuted sequence of objects.',\n      '@param sequence the sequence of objects before being permuted.'\n    ]\n  },\n  {\n    'tag': '@return permutation of <code>sequence</code> represented by this permutation',\n    'alternatives': [\n      '@return the permutation of <code>sequence</code> that is represented by this permutation.',\n      '@return the result of permuting <code>sequence</code> as represented by this permutation.',\n      '@return the representation of the permutation of <code>sequence</code> provided by this permutation.',\n      '@return the permutation of <code>sequence</code> that corresponds to this permutation.',\n      '@return the permutation of <code>sequence</code> as defined by this permutation.'\n    ]\n  },\n  {\n    'tag': '@return the first chromosome.',\n    'alternatives': [\n      '@return the initial chromosome.',\n      '@return the chromosome in the first position.',\n      '@return the chromosome that comes first.',\n      '@return the primary chromosome.',\n      '@return the chromosome at the beginning.'\n    ]\n  },\n  {\n    'tag': '@return the second chromosome.',\n    'alternatives': [\n      '@return the subsequent chromosome.',\n      '@return the chromosome in the second position.',\n      '@return the chromosome that comes second.',\n      '@return the secondary chromosome.',\n      '@return the chromosome following the first one.'\n    ]\n  },\n  {\n    'tag': '@param c1 the first chromosome.',\n    'alternatives': [\n      '@param c1 the initial chromosome.',\n      '@param c1 the chromosome in the first position.',\n      '@param c1 the first chromosome that will be used.',\n      '@param c1 the primary chromosome.',\n      '@param c1 the chromosome at the beginning.'\n    ]\n  },\n  {\n    'tag': '@param c2 the second chromosome.',\n    'alternatives': [\n      '@param c2 the subsequent chromosome.',\n      '@param c2 the chromosome in the second position.',\n      '@param c2 the second chromosome that will be used.',\n      '@param c2 the secondary chromosome.',\n      '@param c2 the chromosome following the first one.'\n    ]\n  },\n  {\n    'tag': '@param population the population from which the chromosomes are chosen.',\n    'alternatives': [\n      '@param population the population used for selecting the chromosomes.',\n      '@param population the population that is the source of the chromosomes.',\n      '@param population the population from which the chromosomes are selected.',\n      '@param population the population where the chromosomes are taken from.',\n      '@param population the population supplying the chromosomes.'\n    ]\n  },\n  {\n    'tag': '@return the selected chromosomes.',\n    'alternatives': [\n      '@return the chosen chromosomes.',\n      '@return the chromosomes that have been selected.',\n      '@return the set of selected chromosomes.',\n      '@return the chromosomes that were picked.',\n      '@return the chromosomes selected for further processing.'\n    ]\n  },\n  {\n    'tag': '@throws MathIllegalArgumentException if the tournament arity is bigger than the population size',\n    'alternatives': [\n      '@throws MathIllegalArgumentException if the tournament arity exceeds the population size.',\n      '@throws MathIllegalArgumentException if the tournament arity is greater than the population size.',\n      '@throws MathIllegalArgumentException if the tournament arity surpasses the population size.',\n      '@throws MathIllegalArgumentException if the tournament arity is larger than the population size.',\n      '@throws MathIllegalArgumentException if the tournament arity is beyond the population size.'\n    ]\n  },\n  {\n    'tag': '@param population the population from which the chromosomes are chosen.',\n    'alternatives': [\n      '@param population the population used for selecting the chromosomes.',\n      '@param population the population that is the source of the chromosomes.',\n      '@param population the population from which the chromosomes are selected.',\n      '@param population the population where the chromosomes are taken from.',\n      '@param population the population supplying the chromosomes.'\n    ]\n  },\n  {\n    'tag': '@return the selected chromosome.',\n    'alternatives': [\n      '@return the chosen chromosome.',\n      '@return the chromosome that has been selected.',\n      '@return the selected single chromosome.',\n      '@return the chromosome that was picked.',\n      '@return the chromosome selected for further processing.'\n    ]\n  },\n  {\n    'tag': '@throws MathIllegalArgumentException if the tournament arity is bigger than the population size',\n    'alternatives': [\n      '@throws MathIllegalArgumentException if the tournament arity exceeds the population size.',\n      '@throws MathIllegalArgumentException if the tournament arity is greater than the population size.',\n      '@throws MathIllegalArgumentException if the tournament arity surpasses the population size.',\n      '@throws MathIllegalArgumentException if the tournament arity is larger than the population size.',\n      '@throws MathIllegalArgumentException if the tournament arity is beyond the population size.'\n    ]\n  },\n  {\n    'tag': '@return arity of the tournament',\n    'alternatives': [\n      '@return the number of participants in the tournament.',\n      '@return the size of the tournament.',\n      '@return the arity value of the tournament.',\n      '@return the number of contestants in the tournament.',\n      '@return the tournament arity.'\n    ]\n  },\n  {\n    'tag': '@param arity arity of the tournament',\n    'alternatives': [\n      '@param arity the number of participants in the tournament.',\n      '@param arity the size of the tournament.',\n      '@param arity the arity value of the tournament.',\n      '@param arity the number of contestants in the tournament.',\n      '@param arity the tournament arity.'\n    ]\n  },\n  {\n    'tag': '@param arity how many chromosomes will be drawn to the tournament',\n    'alternatives': [\n      '@param arity the number of chromosomes that will participate in the tournament.',\n      '@param arity the quantity of chromosomes that will be selected for the tournament.',\n      '@param arity the number of chromosomes that will be chosen for the tournament.',\n      '@param arity the total count of chromosomes to be drawn for the tournament.',\n      '@param arity the amount of chromosomes that will be included in the tournament.'\n    ]\n  },\n  {\n    'tag': '@return the number of crossover points',\n    'alternatives': [\n      '@return the count of crossover points.',\n      '@return the amount of crossover points.',\n      '@return the quantity of crossover points.',\n      '@return the number of points involved in the crossover.',\n      '@return the total number of crossover points.'\n    ]\n  },\n  {\n    'tag': '@param first first parent (p1)',\n    'alternatives': [\n      '@param first the first parent (p1).',\n      '@param first the initial parent (p1).',\n      '@param first the parent in the first position (p1).',\n      '@param first the primary parent (p1).',\n      '@param first the parent at the beginning (p1).'\n    ]\n  },\n  {\n    'tag': '@param second second parent (p2)',\n    'alternatives': [\n      '@param second the subsequent parent (p2).',\n      '@param second the parent in the second position (p2).',\n      '@param second the secondary parent (p2).',\n      '@param second the parent that comes second (p2).',\n      '@param second the parent following the first one (p2).'\n    ]\n  },\n  {\n    'tag': '@return pair of two children (c1,c2)',\n    'alternatives': [\n      '@return a pair of two offspring (c1,c2).',\n      '@return a tuple containing two children (c1,c2).',\n      '@return a twosome of two children (c1,c2).',\n      '@return a couple of two offspring (c1,c2).',\n      '@return a pair of two descendants (c1,c2).'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if the length of the two chromosomes is different',\n    'alternatives': [\n      '@throws DimensionMismatchException if the two chromosomes have different lengths.',\n      '@throws DimensionMismatchException if the length of the two chromosomes is not equal.',\n      '@throws DimensionMismatchException if the two chromosomes differ in size.',\n      '@throws DimensionMismatchException if the length of the two chromosomes does not match.',\n      '@throws DimensionMismatchException if the two chromosomes are not of the same length.'\n    ]\n  },\n  {\n    'tag': '@param first the first chromosome',\n    'alternatives': [\n      '@param first the initial chromosome.',\n      '@param first the chromosome in the first position.',\n      '@param first the first chromosome provided.',\n      '@param first the primary chromosome.',\n      '@param first the chromosome at the beginning.'\n    ]\n  },\n  {\n    'tag': '@param second the second chromosome',\n    'alternatives': [\n      '@param second the subsequent chromosome.',\n      '@param second the chromosome in the second position.',\n      '@param second the second chromosome provided.',\n      '@param second the secondary chromosome.',\n      '@param second the chromosome following the first one.'\n    ]\n  }\n]"