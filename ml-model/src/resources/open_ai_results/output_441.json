"output=[\r\n  {\r\n    'tag': '@param value the value to search for',\r\n    'alternatives': [\r\n      '@param value the element to look for',\r\n      '@param value the value to find',\r\n      '@param value the value to be searched'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param key the key to set, must be the key of the map',\r\n    'alternatives': [\r\n      '@param key the key to assign, which should be the map key',\r\n      '@param key the key to be set, it has to be the map key',\r\n      '@param key the key to update, it needs to be the map key'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param value the value to set',\r\n    'alternatives': [\r\n      '@param value the value to assign',\r\n      '@param value the value to be assigned',\r\n      '@param value the new value to set'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws IOException when the given throwable is an IOException',\r\n    'alternatives': [\r\n      '@throws IOException if the provided throwable is an IOException',\r\n      '@throws IOException when the given throwable is of type IOException',\r\n      '@throws IOException if the given throwable matches IOException'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return this method does not return; it always throws',\r\n    'alternatives': [\r\n      '@return this method throws and does not have a return value',\r\n      '@return this method always throws and does not return',\r\n      '@return this method is always throwing an exception and does not provide a return value'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws X when the given throwable is of the declared type X',\r\n    'alternatives': [\r\n      '@throws X if the provided throwable matches the declared type X',\r\n      '@throws X when the given throwable is an instance of type X',\r\n      '@throws X if the given throwable belongs to the declared type X'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return this method does not return; it always throws',\r\n    'alternatives': [\r\n      '@return this method throws and does not have a return value',\r\n      '@return this method always throws and does not return',\r\n      '@return this method is always throwing an exception and does not provide a return value'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws IOException when the given throwable is an IOException',\r\n    'alternatives': [\r\n      '@throws IOException if the provided throwable is an IOException',\r\n      '@throws IOException when the given throwable is of type IOException',\r\n      '@throws IOException if the given throwable matches IOException'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws X1 when the given throwable is of the declared type X1',\r\n    'alternatives': [\r\n      '@throws X1 if the provided throwable matches the declared type X1',\r\n      '@throws X1 when the given throwable is an instance of type X1',\r\n      '@throws X1 if the given throwable belongs to the declared type X1'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws X2 when the given throwable is of the declared type X2',\r\n    'alternatives': [\r\n      '@throws X2 if the provided throwable matches the declared type X2',\r\n      '@throws X2 when the given throwable is an instance of type X2',\r\n      '@throws X2 if the given throwable belongs to the declared type X2'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param patternStr the pattern string on which to filter file names',\r\n    'alternatives': [\r\n      '@param patternStr the string pattern to use for filtering file names',\r\n      '@param patternStr the pattern string to apply for file name filtering',\r\n      '@param patternStr the string pattern for filtering file names'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws PatternSyntaxException if pattern compilation fails (runtime)',\r\n    'alternatives': [\r\n      '@throws PatternSyntaxException in case of pattern compilation failure (runtime)',\r\n      '@throws PatternSyntaxException if pattern fails to compile (runtime)',\r\n      '@throws PatternSyntaxException if the compilation of pattern fails (runtime)'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param pattern the pattern on which to filter file names',\r\n    'alternatives': [\r\n      '@param pattern the pattern to use for filtering file names',\r\n      '@param pattern the pattern to apply for file name filtering',\r\n      '@param pattern the string pattern for filtering file names'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param closeable the {@code Closeable} object to be closed, or null, in which case this method\\n    does nothing',\r\n    'alternatives': [\r\n      '@param closeable the {@code Closeable} object to close, or null, in which case this method\\n    has no effect',\r\n      '@param closeable the object of type {@code Closeable} to be closed, or null, in which case this method\\n    doesn\\'t do anything',\r\n      '@param closeable the object to close, which should implement the {@code Closeable} interface, or null, in which case this method\\n    does not perform any operation'\r\n    ]\r\n  },\r\n  {\r\n    'tag': \"@param swallowIOException if true, don't propagate IO exceptions thrown by the {@code close}\\n    methods\",\r\n    'alternatives': [\r\n      \"@param swallowIOException if true, avoid propagating IO exceptions thrown by the {@code close}\\n    methods\",\r\n      \"@param swallowIOException if true, prevent the IO exceptions thrown by the {@code close}\\n    methods from being propagated\",\r\n      \"@param swallowIOException if true, stop the IO exceptions thrown by the {@code close}\\n    methods from being propagated\"\r\n    ]\r\n  },\r\n  {\r\n    'tag': \"@param inputStream the input stream to be closed, or {@code null} in which case this method\\n    does nothing\",\r\n    'alternatives': [\r\n      \"@param inputStream the input stream to close, or {@code null} in which case this method\\n    has no effect\",\r\n      \"@param inputStream the input stream to be closed, or {@code null} in which case this method\\n    doesn't do anything\",\r\n      \"@param inputStream the input stream to close, which can be {@code null}. If it's {@code null}, this method\\n    won't perform any operation\"\r\n    ]\r\n  },\r\n  {\r\n    'tag': \"@param reader the reader to be closed, or {@code null} in which case this method does nothing\",\r\n    'alternatives': [\r\n      \"@param reader the reader to close, or {@code null} in which case this method has no effect\",\r\n      \"@param reader the reader to be closed, or {@code null} in which case this method doesn't do anything\",\r\n      \"@param reader the reader to close, which can be {@code null}. If it's {@code null}, this method won't perform any operation\"\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws IllegalArgumentException if the input is not a valid encoded string according to this\\n        encoding.',\r\n    'alternatives': [\r\n      '@throws IllegalArgumentException if the input does not conform to this encoding and is not a valid encoded string.',\r\n      '@throws IllegalArgumentException if the input string does not meet the requirements of this encoding and is not a valid encoded string.',\r\n      '@throws IllegalArgumentException if the input does not satisfy this encoding and is not a valid encoded string.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws DecodingException if the input is not a valid encoded string according to this\\n        encoding.',\r\n    'alternatives': [\r\n      '@throws DecodingException if the input does not conform to this encoding and is not a valid encoded string.',\r\n      '@throws DecodingException if the input string does not meet the requirements of this encoding and is not a valid encoded string.',\r\n      '@throws DecodingException if the input does not satisfy this encoding and is not a valid encoded string.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws IllegalArgumentException if this padding character is already used in the alphabet or a\\n        separator',\r\n    'alternatives': [\r\n      '@throws IllegalArgumentException if this padding character is already present in the alphabet or a\\n        separator',\r\n      '@throws IllegalArgumentException if this padding character is already included in the alphabet or a\\n        separator',\r\n      '@throws IllegalArgumentException if this padding character is already utilized in the alphabet or a\\n        separator'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws UnsupportedOperationException if this encoding already uses a separator',\r\n    'alternatives': [\r\n      '@throws UnsupportedOperationException if this encoding already employs a separator',\r\n      '@throws UnsupportedOperationException if this encoding already incorporates a separator',\r\n      '@throws UnsupportedOperationException if this encoding already includes a separator'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws IllegalStateException if the alphabet used by this encoding contains mixed upper- and\\n        lower-case characters',\r\n    'alternatives': [\r\n      '@throws IllegalStateException if the alphabet employed by this encoding has a mixture of upper- and\\n        lower-case characters',\r\n      '@throws IllegalStateException if the alphabet utilized by this encoding includes a combination of upper- and\\n        lower-case characters',\r\n      '@throws IllegalStateException if the alphabet used by this encoding features both upper- and\\n        lower-case characters'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws IllegalStateException if the alphabet used by this encoding contains mixed upper- and\\n        lower-case characters',\r\n    'alternatives': [\r\n      '@throws IllegalStateException if the alphabet employed by this encoding has a mixture of upper- and\\n        lower-case characters',\r\n      '@throws IllegalStateException if the alphabet utilized by this encoding includes a combination of upper- and\\n        lower-case characters',\r\n      '@throws IllegalStateException if the alphabet used by this encoding features both upper- and\\n        lower-case characters'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param cbuf the character buffer to process',\r\n    'alternatives': [\r\n      '@param cbuf the buffer of characters to handle',\r\n      '@param cbuf the character array to work with',\r\n      '@param cbuf the array of characters to process'\r\n    ]\r\n  }\r\n]"