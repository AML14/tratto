"output = [\n  {\n    'tag': '@param convention convention to use for the semantics of the angle',\n    'alternatives': [\n      '@param convention convention to utilize for the interpretation of the angle',\n      '@param convention to employ for the meaning of the angle',\n      '@param semanticConvention convention to use in order to interpret the angle',\n      '@param convention indicating the semantics to be used for the angle',\n      '@param semanticConvention specifying the interpretation for the angle'\n    ]\n  },\n  {\n    'tag': '@return normalized axis of the rotation',\n    'alternatives': [\n      '@return axis of rotation after normalization',\n      '@return rotation axis that has been normalized',\n      '@return the axis of rotation after being normalized',\n      '@return normalized axis around which the rotation occurs',\n      '@return the axis of rotation, which has been normalized'\n    ]\n  },\n  {\n    'tag': '@return angle of the rotation (between 0 and &pi;)',\n    'alternatives': [\n      '@return rotation angle (ranging between 0 and &pi;)',\n      '@return the angle of the rotation (0 to &pi; range)',\n      '@return the angle at which the rotation occurs (between 0 and &pi;)',\n      '@return the rotation angle (ranging from 0 to &pi;)',\n      '@return angle value for the rotation (between 0 and &pi;)'\n    ]\n  },\n  {\n    'tag': '@param order rotation order to use',\n    'alternatives': [\n      '@param order to utilize for the rotation',\n      '@param rotation order to be applied',\n      '@param order of rotation to be used',\n      '@param order indicating the rotation sequence',\n      '@param rotation order that will be used'\n    ]\n  },\n  {\n    'tag': '@return an array of three angles, in the order specified by the set',\n    'alternatives': [\n      '@return an array containing three angles, following the specified order',\n      '@return a three-element array of angles, arranged as specified',\n      '@return an array consisting of three angles, ordered as dictated by the set',\n      '@return an array that holds three angles, with the order specified by the set',\n      '@return an array containing three angles, arranged in the specified set order'\n    ]\n  },\n  {\n    'tag': '@throws CardanEulerSingularityException if the rotation is\\nsingular with respect to the angles set specified',\n    'alternatives': [\n      '@throws CardanEulerSingularityException if the rotation is singular\\nin relation to the specified set of angles',\n      '@throws CardanEulerSingularityException if the rotation results in\\na singularity with respect to the specified set of angles',\n      '@throws CardanEulerSingularityException if the rotation is singular\\nregarding the set of angles specified',\n      '@throws CardanEulerSingularityException if the rotation leads to a\\nsingularity in relation to the specified set of angles',\n      '@throws CardanEulerSingularityException if the rotation is singular\\nwith respect to the specified set of angles'\n    ]\n  },\n  {\n    'tag': '@param u vector to apply the rotation to',\n    'alternatives': [\n      '@param u vector on which to perform the rotation',\n      '@param u vector that needs to undergo the rotation',\n      '@param u vector to rotate',\n      '@param u vector for the application of the rotation',\n      '@param u vector that the rotation will be applied to'\n    ]\n  },\n  {\n    'tag': '@return a new vector which is the image of u by the rotation',\n    'alternatives': [\n      '@return a new vector that results from rotating u',\n      '@return a new vector obtained by rotating u',\n      '@return a new vector representing the outcome of rotating u',\n      '@return a new vector generated by applying the rotation to u',\n      '@return a new vector that is produced by rotating u'\n    ]\n  },\n  {\n    'tag': '@param in an array with three items which stores vector to rotate',\n    'alternatives': [\n      '@param in an array containing three elements representing the vector to be rotated',\n      '@param in an array that holds three items, representing the vector to rotate',\n      '@param in an array with three elements for storing the vector to be rotated',\n      '@param in an array consisting of three items, representing the vector to be rotated',\n      '@param in an array containing three elements which stores the vector to rotate'\n    ]\n  },\n  {\n    'tag': '@param out an array with three items to put result to (it can be the same\\narray as in)',\n    'alternatives': [\n      '@param out an array with three items to store the resulting values (it can be the same\\narray as in)',\n      '@param out an array holding three items to receive the resulting values (it can be the same\\narray as in)',\n      '@param out an array that will contain three items to hold the resulting values (it can be the same\\narray as in)',\n      '@param out an array consisting of three items to store the resulting values (it can be the same\\narray as in)',\n      '@param out an array containing three items for storing the resulting values (it can be the same\\narray as in)'\n    ]\n  },\n  {\n    'tag': '@param u vector to apply the inverse of the rotation to',\n    'alternatives': [\n      '@param u vector on which to apply the inverse of the rotation',\n      '@param u vector that needs to have the inverse rotation applied',\n      '@param u vector to which the inverse of the rotation will be applied',\n      '@param u vector for the application of the inverse of the rotation',\n      '@param u vector that should be subjected to the inverse of the rotation'\n    ]\n  },\n  {\n    'tag': '@return a new vector which such that u is its image by the rotation',\n    'alternatives': [\n      '@return a new vector in which u is mapped by the rotation',\n      '@return a new vector wherein u is the resulting image after the rotation',\n      '@return a new vector such that u is transformed by the rotation',\n      '@return a new vector that represents the image of u under the rotation',\n      '@return a new vector where u serves as the image produced by the rotation'\n    ]\n  },\n  {\n    'tag': '@param r rotation to apply the rotation to',\n    'alternatives': [\n      '@param r the rotation to be applied',\n      '@param r the rotation that needs to undergo the rotation',\n      '@param r the rotation that should be subjected to the operation',\n      '@param r the rotation onto which the operation will be performed',\n      '@param r the rotation to which the rotation will be applied'\n    ]\n  },\n  {\n    'tag': '@return a new rotation which is the composition of r by the instance',\n    'alternatives': [\n      '@return a new rotation obtained by combining r with the current instance',\n      '@return a new rotation resulting from the composition of r and the instance',\n      '@return a new rotation that represents the composition of r with the instance',\n      '@return a new rotation that is the result of combining r and the instance',\n      '@return a new rotation which is the combination of r with the current instance'\n    ]\n  }\n]"