"output = [\n  {\n    'tag': '@return lower bound of the support (always Double.NEGATIVE_INFINITY)',\n    'alternatives': [\n      '@return minimum value of the support (always Double.NEGATIVE_INFINITY)',\n      '@return the lower limit of the support (always Double.NEGATIVE_INFINITY)',\n      '@return the smallest possible value for the support (always Double.NEGATIVE_INFINITY)',\n      '@return the negative infinity lower bound of the support',\n      '@return always Double.NEGATIVE_INFINITY, which represents the lower bound of the support'\n    ]\n  },\n  {\n    'tag': '@return upper bound of the support (always Double.POSITIVE_INFINITY)',\n    'alternatives': [\n      '@return maximum value of the support (always Double.POSITIVE_INFINITY)',\n      '@return the upper limit of the support (always Double.POSITIVE_INFINITY)',\n      '@return the largest possible value for the support (always Double.POSITIVE_INFINITY)',\n      '@return the positive infinity upper bound of the support',\n      '@return always Double.POSITIVE_INFINITY, which represents the upper bound of the support'\n    ]\n  },\n  {\n    'tag': '@param median Median for this distribution.',\n    'alternatives': [\n      '@param median The median value for this distribution.',\n      '@param median The center value (median) of this distribution.',\n      '@param median The value representing the median in this distribution.',\n      '@param median The middle value of this distribution (median).',\n      '@param median The central value, which is the median, for this distribution.'\n    ]\n  },\n  {\n    'tag': '@param scale Scale parameter for this distribution.',\n    'alternatives': [\n      '@param scale The scaling factor for this distribution.',\n      '@param scale The parameter that determines the scaling of this distribution.',\n      '@param scale The value that controls the scaling of this distribution.',\n      '@param scale The scaling parameter used in this distribution.',\n      '@param scale The factor that determines the scale of this distribution.'\n    ]\n  },\n  {\n    'tag': '@param inverseCumAccuracy Maximum absolute error in inverse\\ncumulative probability estimates\\n(defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\n    'alternatives': [\n      '@param inverseCumAccuracy The maximum absolute error in inverse cumulative probability estimation (default value is {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\n      '@param inverseCumAccuracy The maximum allowable error in inverse cumulative probability estimation (default value is {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\n      '@param inverseCumAccuracy The maximum error value allowed in estimating the inverse cumulative probability (defaulting to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\n      '@param inverseCumAccuracy The maximum amount of error allowed in the estimation of the inverse cumulative probability (default value is {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\n      '@param inverseCumAccuracy The maximum absolute error in estimating the inverse cumulative probability (default is {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).'\n    ]\n  },\n  {\n    'tag': '@param rng Random number generator.',\n    'alternatives': [\n      '@param rng The random number generator.',\n      '@param rng The source of random numbers.',\n      '@param rng The generator for random numbers.',\n      '@param rng The object responsible for generating random numbers.',\n      '@param rng The random number generator used in the calculations.'\n    ]\n  },\n  {\n    'tag': '@return the location parameter.',\n    'alternatives': [\n      '@return the parameter representing the location.',\n      '@return the parameter indicating the location.',\n      '@return the value representing the location parameter.',\n      '@return the value indicating the position parameter.',\n      '@return the location value parameter.'\n    ]\n  },\n  {\n    'tag': '@return the scale parameter.',\n    'alternatives': [\n      '@return the parameter representing the scale.',\n      '@return the parameter indicating the scale.',\n      '@return the value representing the scale parameter.',\n      '@return the value indicating the magnitude parameter.',\n      '@return the scale value parameter.'\n    ]\n  },\n  {\n    'tag': '@return the matrix corresponding to the instance',\n    'alternatives': [\n      '@return the matrix that corresponds to the instance',\n      '@return the matrix which is associated with the instance',\n      '@return the matrix that represents the instance',\n      '@return the matrix that corresponds to the given instance',\n      '@return the matrix that is equivalent to the instance'\n    ]\n  },\n  {\n    'tag': '@return a constant vector',\n    'alternatives': [\n      '@return a vector with constant values',\n      '@return a fixed vector',\n      '@return a vector that remains unchanged',\n      '@return a vector with unchanging elements',\n      '@return a vector that has a constant value'\n    ]\n  },\n  {\n    'tag': '@param u vector to apply the rotation to',\n    'alternatives': [\n      '@param u The vector on which to perform the rotation.',\n      '@param u The vector to be rotated.',\n      '@param u The vector that will undergo the rotation.',\n      '@param u The vector being subjected to the rotation.',\n      '@param u The vector that is used as the input for the rotation.'\n    ]\n  },\n  {\n    'tag': '@return a new vector which is the image of u by the rotation',\n    'alternatives': [\n      '@return a new vector obtained by rotating u.',\n      '@return a new vector resulting from the rotation of u.',\n      '@return a new vector that is the result of rotating u.',\n      '@return a new vector produced by the rotation of u.',\n      '@return a new vector generated by applying the rotation to u.'\n    ]\n  },\n  {\n    'tag': '@param in an array with three items which stores vector to rotate',\n    'alternatives': [\n      '@param in An array containing three elements that stores the vector to be rotated.',\n      '@param in An array that holds a vector with three elements to be rotated.',\n      '@param in An array that stores a vector with three elements that will be subjected to rotation.',\n      '@param in An array consisting of three items that represent the vector to be rotated.',\n      '@param in An array of length three that contains the vector to be rotated.'\n    ]\n  },\n  {\n    'tag': '@param out an array with three items to put result to (it can be the same\\narray as in)',\n    'alternatives': [\n      '@param out An array with three elements to store the result (it can be the same array as input).',\n      '@param out An array used to hold the result, which has three items (it can be the same array as the input).',\n      '@param out An array that will store the result, which has three elements (it can be the same array as the input).',\n      '@param out An array with three positions where the result will be stored (it can be the same array as the input).',\n      '@param out An array of size three to hold the result (it can be the same array as the input).'\n    ]\n  },\n  {\n    'tag': '@param in an array with three items which stores vector to rotate',\n    'alternatives': [\n      '@param in An array containing three elements that stores the vector to be rotated.',\n      '@param in An array that holds a vector with three elements to be rotated.',\n      '@param in An array that stores a vector with three elements that will be subjected to rotation.',\n      '@param in An array consisting of three items that represent the vector to be rotated.',\n      '@param in An array of length three that contains the vector to be rotated.'\n    ]\n  }\n]"