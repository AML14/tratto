"[\n  {\n    'tag': '@param field field to which the time and state vector elements belong',\n    'alternatives': [\n      '@param field field to which the elements of the time and state vector belong',\n      '@param field the field to which the elements of the time and state vector are associated',\n      '@param field field to which the elements of the time and state vector are related'\n    ]\n  },\n  {\n    'tag': '@param nSteps number of steps of the method excluding the one being computed',\n    'alternatives': [\n      '@param nSteps the count of steps in the method excluding the one being computed',\n      '@param nSteps total number of steps in the method except for the one being computed',\n      '@param nSteps the quantity of steps in the method excluding the one being computed'\n    ]\n  },\n  {\n    'tag': '@param minStep minimal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n    'alternatives': [\n      '@param minStep smallest step (sign is not important, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n      '@param minStep minimum step size (sign does not matter, irrespective of\\nintegration direction, forward or backward), the last step may\\nbe smaller than this',\n      '@param minStep minimum step (sign is not important, regardless of\\nintegration direction, forward or backward), the last step may\\nbe smaller than this'\n    ]\n  },\n  {\n    'tag': '@param maxStep maximal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n    'alternatives': [\n      '@param maxStep largest step (sign does not matter, irrespective of\\nintegration direction, forward or backward), the last step may\\nbe smaller than this',\n      '@param maxStep maximum step size (sign has no effect, irrespective of\\nintegration direction, forward or backward), the last step may\\nbe smaller than this',\n      '@param maxStep maximum step (sign is not important, regardless of\\nintegration direction, forward or backward), the last step may\\nbe smaller than this'\n    ]\n  },\n  {\n    'tag': '@param vecAbsoluteTolerance allowed absolute error',\n    'alternatives': [\n      '@param vecAbsoluteTolerance permissible absolute error',\n      '@param vecAbsoluteTolerance acceptable absolute error',\n      '@param vecAbsoluteTolerance authorized absolute error'\n    ]\n  },\n  {\n    'tag': '@param vecRelativeTolerance allowed relative error',\n    'alternatives': [\n      '@param vecRelativeTolerance permissible relative error',\n      '@param vecRelativeTolerance acceptable relative error',\n      '@param vecRelativeTolerance authorized relative error'\n    ]\n  },\n  {\n    'tag': '@throws IllegalArgumentException if order is 1 or less',\n    'alternatives': [\n      '@throws IllegalArgumentException when the order is 1 or less',\n      '@throws IllegalArgumentException if the order is 1 or lower',\n      '@throws IllegalArgumentException in case the order is 1 or less'\n    ]\n  },\n  {\n    'tag': '@param interpolator interpolator to copy from. The copy is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n    'alternatives': [\n      '@param interpolator interpolator to clone from. The cloning is a deep\\ncopy: its arrays are distinct from the original arrays of the\\ninstance',\n      '@param interpolator interpolator to duplicate from. The duplication is a deep\\ncopy: its arrays are separate from the original arrays of the\\ninstance',\n      '@param interpolator interpolator to replicate from. The replication is a deep\\ncopy: its arrays are unconnected from the original arrays of the\\ninstance'\n    ]\n  },\n  {\n    'tag': '@param <T> the type of the field elements',\n    'alternatives': [\n      '@param <T> the kind of the field elements',\n      '@param <T> the category of the field elements',\n      '@param <T> the class of the field elements'\n    ]\n  },\n  {\n    'tag': '@param rows number of rows of the matrix',\n    'alternatives': [\n      '@param rows count of rows in the matrix',\n      '@param rows total number of rows in the matrix',\n      '@param rows quantity of rows in the matrix'\n    ]\n  },\n  {\n    'tag': '@return P matrix',\n    'alternatives': [\n      '@return matrix P',\n      '@return the P matrix',\n      '@return the matrix P'\n    ]\n  },\n  {\n    'tag': \"@param highOrder high order scaled derivatives\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n    'alternatives': [\n      \"@param highOrder scaled high-order derivatives\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n      \"@param highOrder high-order scaled derivatives\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n      \"@param highOrder high order rescaled derivatives\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\"\n    ]\n  },\n  {\n    'tag': '@param start first order scaled derivatives at step start',\n    'alternatives': [\n      '@param start scaled first-order derivatives at step start',\n      '@param start rescaled first-order derivatives at step start',\n      '@param start first order rescaled derivatives at step start'\n    ]\n  },\n  {\n    'tag': '@param end first order scaled derivatives at step end',\n    'alternatives': [\n      '@param end scaled first-order derivatives at step end',\n      '@param end rescaled first-order derivatives at step end',\n      '@param end first order rescaled derivatives at step end'\n    ]\n  },\n  {\n    'tag': \"@param highOrder high order scaled derivatives, will be modified\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n    'alternatives': [\n      \"@param highOrder scaled high-order derivatives, will be modified\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n      \"@param highOrder high-order scaled derivatives, will be modified\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n      \"@param highOrder high order rescaled derivatives, will be modified\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\"\n    ]\n  },\n  {\n    'tag': '@param field field to which the time and state vector elements belong',\n    'alternatives': [\n      '@param field field to which the elements of the time and state vector belong',\n      '@param field the field to which the elements of the time and state vector are associated',\n      '@param field field to which the elements of the time and state vector are related'\n    ]\n  },\n  {\n    'tag': '@param n number of steps of the multistep method\\n(excluding the one being computed)',\n    'alternatives': [\n      '@param n count of steps in the multistep method\\n(excluding the one being computed)',\n      '@param n total number of steps in the multistep method\\n(excluding the one being computed)',\n      '@param n quantity of steps in the multistep method\\n(excluding the one being computed)'\n    ]\n  },\n  {\n    'tag': '@param field field to which the time and state vector elements belong',\n    'alternatives': [\n      '@param field field to which the elements of the time and state vector belong',\n      '@param field the field to which the elements of the time and state vector are associated',\n      '@param field field to which the elements of the time and state vector are related'\n    ]\n  },\n  {\n    'tag': '@param step integration step',\n    'alternatives': [\n      '@param step step of integration',\n      '@param step size of integration',\n      '@param step integration increment'\n    ]\n  },\n  {\n    'tag': '@param equations differential equations to integrate',\n    'alternatives': [\n      '@param equations equations to be integrated',\n      '@param equations differential equations for integration',\n      '@param equations differential equations being integrated'\n    ]\n  },\n  {\n    'tag': '@param t0 initial time',\n    'alternatives': [\n      '@param t0 beginning time',\n      '@param t0 starting time',\n      '@param t0 initial instant'\n    ]\n  }\n]"