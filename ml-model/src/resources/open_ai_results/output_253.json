"[\n  {\n    \"tag\": \"@param operandOffset offset of the operand in its array\",\n    \"alternatives\": [\n      \"@param offset of the operand in its array\",\n      \"@param operand position in the array\",\n      \"@param operandOffset position offset in the array\",\n      \"@param offset in array for the operand\",\n      \"@param position of the operand in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@param n power to apply\",\n    \"alternatives\": [\n      \"@param power to be used\",\n      \"@param exponent to apply\",\n      \"@param value of the power\",\n      \"@param applied power\",\n      \"@param number to be powered\"\n    ]\n  },\n  {\n    \"tag\": \"@param result array where result must be stored (for\\npower the result array <em>cannot</em> be the input\\narray)\",\n    \"alternatives\": [\n      \"@param output array to store the result (the input array cannot be used as the output for power)\",\n      \"@param result array to store the result (cannot use the input array as the result for power)\",\n      \"@param array to hold the result (for power, the result array cannot be the same as the input array)\",\n      \"@param result array to store the outcome (for power, the result array should not be the input array)\",\n      \"@param array to hold the result (the input array cannot be the result for power)\"\n    ]\n  },\n  {\n    \"tag\": \"@param resultOffset offset of the result in its array\",\n    \"alternatives\": [\n      \"@param offset of the result in the array\",\n      \"@param result position offset in the array\",\n      \"@param resultOffset position offset in the array\",\n      \"@param offset in array for the result\",\n      \"@param position of the result in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@param x array holding the base\",\n    \"alternatives\": [\n      \"@param array containing the base\",\n      \"@param base array\",\n      \"@param array that holds the base\",\n      \"@param array to hold the base\",\n      \"@param base stored in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@param xOffset offset of the base in its array\",\n    \"alternatives\": [\n      \"@param offset of the base in the array\",\n      \"@param base position offset in the array\",\n      \"@param xOffset position offset in the array\",\n      \"@param offset in array for the base\",\n      \"@param position of the base in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@param y array holding the exponent\",\n    \"alternatives\": [\n      \"@param array containing the exponent\",\n      \"@param exponent array\",\n      \"@param array that holds the exponent\",\n      \"@param array to hold the exponent\",\n      \"@param exponent stored in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@param yOffset offset of the exponent in its array\",\n    \"alternatives\": [\n      \"@param offset of the exponent in the array\",\n      \"@param exponent position offset in the array\",\n      \"@param yOffset position offset in the array\",\n      \"@param offset in array for the exponent\",\n      \"@param position of the exponent in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@param result array where result must be stored (for\\npower the result array <em>cannot</em> be the input\\narray)\",\n    \"alternatives\": [\n      \"@param output array to store the result (the input array cannot be used as the output for power)\",\n      \"@param result array to store the result (cannot use the input array as the result for power)\",\n      \"@param array to hold the result (for power, the result array cannot be the same as the input array)\",\n      \"@param result array to store the outcome (for power, the result array should not be the input array)\",\n      \"@param array to hold the result (the input array cannot be the result for power)\"\n    ]\n  },\n  {\n    \"tag\": \"@param resultOffset offset of the result in its array\",\n    \"alternatives\": [\n      \"@param offset of the result in the array\",\n      \"@param result position offset in the array\",\n      \"@param resultOffset position offset in the array\",\n      \"@param offset in array for the result\",\n      \"@param position of the result in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@param operand array holding the operand\",\n    \"alternatives\": [\n      \"@param array containing the operand\",\n      \"@param operand array\",\n      \"@param array that holds the operand\",\n      \"@param array to hold the operand\",\n      \"@param operand stored in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@param operandOffset offset of the operand in its array\",\n    \"alternatives\": [\n      \"@param offset of the operand in the array\",\n      \"@param operand position offset in the array\",\n      \"@param operandOffset position offset in the array\",\n      \"@param offset in array for the operand\",\n      \"@param position of the operand in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@param n order of the root\",\n    \"alternatives\": [\n      \"@param root order\",\n      \"@param root magnitude\",\n      \"@param order of the radical\",\n      \"@param root value\",\n      \"@param value of the root\"\n    ]\n  },\n  {\n    \"tag\": \"@param result array where result must be stored (for\\nn<sup>th</sup> root the result array <em>cannot</em> be the input\\narray)\",\n    \"alternatives\": [\n      \"@param output array to store the result (the input array cannot be used as the output for n-th root)\",\n      \"@param result array to store the result (cannot use the input array as the result for n-th root)\",\n      \"@param array to hold the result (for n-th root, the result array cannot be the same as the input array)\",\n      \"@param result array to store the outcome (for n-th root, the result array should not be the input array)\",\n      \"@param array to hold the result (the input array cannot be the result for n-th root)\"\n    ]\n  },\n  {\n    \"tag\": \"@param resultOffset offset of the result in its array\",\n    \"alternatives\": [\n      \"@param offset of the result in the array\",\n      \"@param result position offset in the array\",\n      \"@param resultOffset position offset in the array\",\n      \"@param offset in array for the result\",\n      \"@param position of the result in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@param operand array holding the operand\",\n    \"alternatives\": [\n      \"@param array containing the operand\",\n      \"@param operand array\",\n      \"@param array that holds the operand\",\n      \"@param array to hold the operand\",\n      \"@param operand stored in the array\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IllegalArgumentException if the object type is invalid\",\n    \"alternatives\": [\n      \"@throws IllegalArgumentException when the object type is not valid\",\n      \"@throws IllegalArgumentException if the type of object is invalid\",\n      \"@throws IllegalArgumentException in case of invalid object type\",\n      \"@throws IllegalArgumentException when the object type is invalid\",\n      \"@throws IllegalArgumentException if object type is not valid\"\n    ]\n  },\n  {\n    \"tag\": \"@param index the index to check.\",\n    \"alternatives\": [\n      \"@param check index\",\n      \"@param index that needs to be checked\",\n      \"@param index value to validate\",\n      \"@param index to verify\",\n      \"@param index for validation\"\n    ]\n  },\n  {\n    \"tag\": \"@param iterable the {@link Iterable} to get a value from\",\n    \"alternatives\": [\n      \"@param iterable the {@link Iterable} to retrieve a value from\",\n      \"@param iterable holding the value to be accessed\",\n      \"@param {@link Iterable} to extract a value from\",\n      \"@param iterable to obtain a value from\",\n      \"@param iterable from which to retrieve a value\"\n    ]\n  },\n  {\n    \"tag\": \"@param index the index to get\",\n    \"alternatives\": [\n      \"@param get index\",\n      \"@param index to fetch\",\n      \"@param index position to retrieve\",\n      \"@param index for retrieval\",\n      \"@param index to obtain\"\n    ]\n  },\n  {\n    \"tag\": \"@param <T> the type of object in the {@link Iterable}.\",\n    \"alternatives\": [\n      \"@param <T> the object type in the {@link Iterable}.\",\n      \"@param <T> type of object in the {@link Iterable}.\",\n      \"@param <T> the type of item in the {@link Iterable}.\",\n      \"@param <T> object type in the {@link Iterable}.\",\n      \"@param <T> the type of element in the {@link Iterable}.\"\n    ]\n  },\n  {\n    \"tag\": \"@return the object at the specified index\",\n    \"alternatives\": [\n      \"@return the value at the given index\",\n      \"@return the item located at the index provided\",\n      \"@return the object found in the given index\",\n      \"@return the value contained at the specified index\",\n      \"@return the element at the index specified\"\n    ]\n  },\n  {\n    \"tag\": \"@throws IndexOutOfBoundsException if the index is invalid\",\n    \"alternatives\": [\n      \"@throws IndexOutOfBoundsException when the index is out of bounds\",\n      \"@throws IndexOutOfBoundsException if the index is outside the valid range\",\n      \"@throws IndexOutOfBoundsException in case of an invalid index\",\n      \"@throws IndexOutOfBoundsException when the index is invalid\",\n      \"@throws IndexOutOfBoundsException if the index is not valid\"\n    ]\n  },\n  {\n    \"tag\": \"@param object the object to get a value from\",\n    \"alternatives\": [\n      \"@param object to retrieve a value from\",\n      \"@param object that holds the value to be obtained\",\n      \"@param object holding the value to be accessed\",\n      \"@param object to obtain a value from\",\n      \"@param object from which to get a value\"\n    ]\n  },\n  {\n    \"tag\": \"@param index the index to get\",\n    \"alternatives\": [\n      \"@param get index\",\n      \"@param index to fetch\",\n      \"@param index position to retrieve\",\n      \"@param index for retrieval\",\n      \"@param index to obtain\"\n    ]\n  }\n]"