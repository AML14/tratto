"[\n  {\n    'tag': '@param length the number of elements to include',\n    'alternatives': [\n      '@param length the total count of elements to incorporate',\n      '@param length the count of elements to include',\n      '@param length the number of elements to be included',\n      '@param length the quantity of elements to include',\n      '@param length the size of the elements to be included'\n    ]\n  },\n  {\n    'tag': '@return the sum of the natural logs of the values or Double.NaN if\\nlength = 0',\n    'alternatives': [\n      '@return the summation of the natural logarithms of the values or Double.NaN if\\nlength is equal to zero',\n      '@return the sum of the ln of the elements or Double.NaN if\\nlength equals to zero',\n      '@return the total sum of the natural logarithms for the given values or Double.NaN if\\nlength is equal to zero',\n      '@return the sum of the natural logarithms of the values or Double.NaN if\\nlength is zero',\n      '@return the summation of the natural logarithms of values or Double.NaN if\\nlength is zero'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values the array of inputs',\n      '@param values the array of elements',\n      '@param values the array of values',\n      '@param values the array containing the inputs',\n      '@param values the array with the input values'\n    ]\n  },\n  {\n    'tag': '@return the mean of the values or Double.NaN if the array is empty',\n    'alternatives': [\n      '@return the average of the values or Double.NaN if the array is empty',\n      '@return the average value of the elements or Double.NaN if the array is empty',\n      '@return the arithmetic mean of the values or Double.NaN if the array is empty',\n      '@return the mean value calculated from the values or Double.NaN if the array is empty',\n      '@return the average of the input values or Double.NaN if the array is empty'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values the array of inputs',\n      '@param values the array of elements',\n      '@param values the array of values',\n      '@param values the array containing the inputs',\n      '@param values the array with the input values'\n    ]\n  },\n  {\n    'tag': '@param begin index of the first array element to include',\n    'alternatives': [\n      '@param begin the starting index of the first array element to incorporate',\n      '@param begin the index from where to start including the array elements',\n      '@param begin the index of the first element to include in the array',\n      '@param begin the index indicating the start of the array elements to be included',\n      '@param begin the position of the first element in the array to be included'\n    ]\n  },\n  {\n    'tag': '@param length the number of elements to include',\n    'alternatives': [\n      '@param length the total count of elements to incorporate',\n      '@param length the count of elements to include',\n      '@param length the number of elements to be included',\n      '@param length the quantity of elements to include',\n      '@param length the size of the elements to be included'\n    ]\n  },\n  {\n    'tag': '@return the mean of the values or Double.NaN if length = 0',\n    'alternatives': [\n      '@return the average of the values or Double.NaN if length equals to zero',\n      '@return the average value of the elements or Double.NaN if length is zero',\n      '@return the arithmetic mean of the values or Double.NaN if the length is zero',\n      '@return the mean value calculated from the values or Double.NaN if length is zero',\n      '@return the average of the input values or Double.NaN if the length is zero'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values the array of inputs',\n      '@param values the array of elements',\n      '@param values the array of values',\n      '@param values the array containing the inputs',\n      '@param values the array with the input values'\n    ]\n  },\n  {\n    'tag': '@return the geometric mean of the values or Double.NaN if the array is empty',\n    'alternatives': [\n      '@return the product of all values raised to the power of the reciprocal of the count, or Double.NaN if the array is empty',\n      '@return the geometric average of the elements or Double.NaN if the array is empty',\n      '@return the value calculated as the nth root of the product of the values, or Double.NaN if the array is empty',\n      '@return the geometric mean value obtained from the elements or Double.NaN if the array is empty',\n      '@return the product of the values to the power of 1/n or Double.NaN if the array is empty'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values the array of inputs',\n      '@param values the array of elements',\n      '@param values the array of values',\n      '@param values the array containing the inputs',\n      '@param values the array with the input values'\n    ]\n  },\n  {\n    'tag': '@param begin index of the first array element to include',\n    'alternatives': [\n      '@param begin the starting index of the first array element to incorporate',\n      '@param begin the index from where to start including the array elements',\n      '@param begin the index of the first element to include in the array',\n      '@param begin the index indicating the start of the array elements to be included',\n      '@param begin the position of the first element in the array to be included'\n    ]\n  },\n  {\n    'tag': '@param length the number of elements to include',\n    'alternatives': [\n      '@param length the total count of elements to incorporate',\n      '@param length the count of elements to include',\n      '@param length the number of elements to be included',\n      '@param length the quantity of elements to include',\n      '@param length the size of the elements to be included'\n    ]\n  },\n  {\n    'tag': '@return the geometric mean of the values or Double.NaN if length = 0',\n    'alternatives': [\n      '@return the nth root of the product of the values, or Double.NaN if length is zero',\n      '@return the geometric average of the array elements or Double.NaN if length equals to zero',\n      '@return the result obtained by multiplying the values and taking the nth root or Double.NaN if length is zero',\n      '@return the geometric mean of the given values or Double.NaN if length is zero',\n      '@return the nth root of the product of the values or Double.NaN if length is zero'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values the array of inputs',\n      '@param values the array of elements',\n      '@param values the array of values',\n      '@param values the array containing the inputs',\n      '@param values the array with the input values'\n    ]\n  },\n  {\n    'tag': '@return the variance of the values or Double.NaN if the array is empty',\n    'alternatives': [\n      '@return the measure of how the values differ from the average or Double.NaN if the array is empty',\n      '@return the variance of the elements or Double.NaN if the array is empty',\n      '@return the statistical variance of the values or Double.NaN if the array is empty',\n      '@return the square of the standard deviation calculated from the values or Double.NaN if the array is empty',\n      '@return the variance of the input values or Double.NaN if the array is empty'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values the array of inputs',\n      '@param values the array of elements',\n      '@param values the array of values',\n      '@param values the array containing the inputs',\n      '@param values the array with the input values'\n    ]\n  },\n  {\n    'tag': '@param begin index of the first array element to include',\n    'alternatives': [\n      '@param begin the starting index of the first array element to incorporate',\n      '@param begin the index from where to start including the array elements',\n      '@param begin the index of the first element to include in the array',\n      '@param begin the index indicating the start of the array elements to be included',\n      '@param begin the position of the first element in the array to be included'\n    ]\n  },\n  {\n    'tag': '@param length the number of elements to include',\n    'alternatives': [\n      '@param length the total count of elements to incorporate',\n      '@param length the count of elements to include',\n      '@param length the number of elements to be included',\n      '@param length the quantity of elements to include',\n      '@param length the size of the elements to be included'\n    ]\n  },\n  {\n    'tag': '@return the variance of the values or Double.NaN if length = 0',\n    'alternatives': [\n      '@return the statistical variance of the values or Double.NaN if length is zero',\n      '@return the variance of the elements or Double.NaN if length equals to zero',\n      '@return the measure of how the values differ from the average or Double.NaN if the length is zero',\n      '@return the square of the standard deviation calculated from the values or Double.NaN if length is zero',\n      '@return the variance of the input values or Double.NaN if the length is zero'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values the array of inputs',\n      '@param values the array of elements',\n      '@param values the array of values',\n      '@param values the array containing the inputs',\n      '@param values the array with the input values'\n    ]\n  },\n  {\n    'tag': '@param mean the precomputed mean value',\n    'alternatives': [\n      '@param mean the precalculated average value',\n      '@param mean the predefined value for the average',\n      '@param mean the previously computed mean value',\n      '@param mean the already calculated average value',\n      '@param mean the value for the average that was already determined'\n    ]\n  },\n  {\n    'tag': '@param begin index of the first array element to include',\n    'alternatives': [\n      '@param begin the starting index of the first array element to incorporate',\n      '@param begin the index from where to start including the array elements',\n      '@param begin the index of the first element to include in the array',\n      '@param begin the index indicating the start of the array elements to be included',\n      '@param begin the position of the first element in the array to be included'\n    ]\n  },\n  {\n    'tag': '@param length the number of elements to include',\n    'alternatives': [\n      '@param length the total count of elements to incorporate',\n      '@param length the count of elements to include',\n      '@param length the number of elements to be included',\n      '@param length the quantity of elements to include',\n      '@param length the size of the elements to be included'\n    ]\n  },\n  {\n    'tag': '@return the variance of the values or Double.NaN if length = 0',\n    'alternatives': [\n      '@return the statistical variance of the values or Double.NaN if length is zero',\n      '@return the variance of the elements or Double.NaN if length equals to zero',\n      '@return the measure of how the values differ from the average or Double.NaN if the length is zero',\n      '@return the square of the standard deviation calculated from the values or Double.NaN if length is zero',\n      '@return the variance of the input values or Double.NaN if the length is zero'\n    ]\n  }\n]"