"output=[\n  {\n    'tag': '@param begin index of the first array element to include',\n    'alternatives': [\n      '@param begin starting index of the first element to be included in the array',\n      '@param begin index to start including the array elements',\n      '@param begin the starting index of the first element to include in the array',\n      '@param begin the index of the first element in the array to be included',\n      '@param begin the position of the first element in the array to be included'\n    ]\n  },\n  {\n    'tag': '@param length the number of elements to include',\n    'alternatives': [\n      '@param length number of items to include',\n      '@param length the count of elements to include',\n      '@param length the quantity of elements to be included',\n      '@param length the number of elements that should be included',\n      '@param length the total amount of elements to include'\n    ]\n  },\n  {\n    'tag': '@return the maximum of the values or Double.NaN if length = 0',\n    'alternatives': [\n      '@return the highest value among the values or Double.NaN if length = 0',\n      '@return the maximum value of the given values or Double.NaN if length = 0',\n      '@return the greatest value from the values or Double.NaN if length = 0',\n      '@return the maximum among the values or Double.NaN if length = 0',\n      '@return the largest value or Double.NaN if length = 0'\n    ]\n  },\n  {\n    'tag': '@param source Max to copy',\n    'alternatives': [\n      '@param source Max to duplicate',\n      '@param source Max to replicate',\n      '@param source Max to make a copy of',\n      '@param source Max to clone',\n      '@param source Max to create a copy from'\n    ]\n  },\n  {\n    'tag': '@param dest Max to copy to',\n    'alternatives': [\n      '@param dest Max to duplicate to',\n      '@param dest Max to replicate to',\n      '@param dest Max to make a copy to',\n      '@param dest Max to clone to',\n      '@param dest Max to create a copy to'\n    ]\n  },\n  {\n    'tag': '@param original the {@code Max} instance to copy',\n    'alternatives': [\n      '@param original the {@code Max} object to duplicate',\n      '@param original the instance of {@code Max} to replicate',\n      '@param original the {@code Max} object to make a copy of',\n      '@param original the {@code Max} instance to clone',\n      '@param original the {@code Max} object to create a copy from'\n    ]\n  },\n  {\n    'tag': '@param o object to compare',\n    'alternatives': [\n      '@param o object to compare against',\n      '@param o object to be compared',\n      '@param o object to check for comparison',\n      '@param o object to be compared with',\n      '@param o object to be used for comparison'\n    ]\n  },\n  {\n    'tag': '@return true if {@code o} is a {@code PSquarePercentile} with\\nequivalent internal state',\n    'alternatives': [\n      '@return true if {@code o} represents a {@code PSquarePercentile} with\\nmatching internal state',\n      '@return true if {@code o} is an instance of {@code PSquarePercentile} with\\nidentical internal state',\n      '@return true if {@code o} denotes a {@code PSquarePercentile} with\\nequivalent internal state',\n      '@return true if {@code o} signifies a {@code PSquarePercentile} with\\nequal internal state',\n      '@return true if {@code o} corresponds to a {@code PSquarePercentile} with\\nmatching internal state'\n    ]\n  },\n  {\n    'tag': '@param observation the observation currently being added.',\n    'alternatives': [\n      '@param observation the current observation to be added.',\n      '@param observation the observation to currently include.',\n      '@param observation the currently added observation.',\n      '@param observation the currently included observation.',\n      '@param observation the observation being currently added.'\n    ]\n  },\n  {\n    'tag': '@return string representation of state data',\n    'alternatives': [\n      '@return string representation of data state',\n      '@return string representation of the current state information',\n      '@return string representation of the state data',\n      '@return string representation of the information about the state',\n      '@return string representation of the data state'\n    ]\n  },\n  {\n    'tag': '@param m Input matrix.',\n    'alternatives': [\n      '@param m Matrix as input.',\n      '@param m Input as matrix.',\n      '@param m Matrix to input.',\n      '@param m Matrix to be used as input.',\n      '@param m The input matrix.'\n    ]\n  },\n  {\n    'tag': '@param cols Columns to select.',\n    'alternatives': [\n      '@param cols Columns to choose.',\n      '@param cols Selecting columns.',\n      '@param cols Chosen columns.',\n      '@param cols Columns to be selected.',\n      '@param cols Columns for selection.'\n    ]\n  },\n  {\n    'tag': '@return Matrix representing the selected columns.',\n    'alternatives': [\n      '@return Matrix that represents the selected columns.',\n      '@return Matrix that represents columns being selected.',\n      '@return Matrix representing the chosen columns.',\n      '@return Matrix representing the columns that are selected.',\n      '@return Matrix representing selected columns.'\n    ]\n  },\n  {\n    'tag': '@param m Input matrix.',\n    'alternatives': [\n      '@param m Matrix as input.',\n      '@param m Input as matrix.',\n      '@param m Matrix to input.',\n      '@param m Matrix to be used as input.',\n      '@param m The input matrix.'\n    ]\n  },\n  {\n    'tag': '@param k Diagonal position.',\n    'alternatives': [\n      '@param k Position of the diagonal element.',\n      '@param k Position of the element in the diagonal.',\n      '@param k Diagonal element position.',\n      '@param k Position on the diagonal.',\n      '@param k Position of the element in the diagonal matrix.'\n    ]\n  },\n  {\n    'tag': '@return Upper triangular part of matrix.',\n    'alternatives': [\n      '@return Upper triangular section of the matrix.',\n      '@return Upper triangular portion of the matrix.',\n      '@return Upper triangular region of the matrix.',\n      '@return Upper triangular segment of the matrix.',\n      '@return Upper triangular fragment of the matrix.'\n    ]\n  },\n  {\n    'tag': '@param m Input matrix.',\n    'alternatives': [\n      '@param m Matrix as input.',\n      '@param m Input as matrix.',\n      '@param m Matrix to input.',\n      '@param m Matrix to be used as input.',\n      '@param m The input matrix.'\n    ]\n  },\n  {\n    'tag': '@return Row matrix representing the sums of the rows.',\n    'alternatives': [\n      '@return Row matrix that represents the sums of the rows.',\n      '@return Row matrix that represents the summation of rows.',\n      '@return Row matrix representing the sums of the rows in the input matrix.',\n      '@return Row matrix representing the total sums of the rows.',\n      '@return Row matrix representing the row-wise sums.'\n    ]\n  },\n  {\n    'tag': '@param m Input matrix.',\n    'alternatives': [\n      '@param m Matrix as input.',\n      '@param m Input as matrix.',\n      '@param m Matrix to input.',\n      '@param m Matrix to be used as input.',\n      '@param m The input matrix.'\n    ]\n  },\n  {\n    'tag': '@return the diagonal n-by-n matrix if m is a column matrix or the column\\nmatrix representing the diagonal if m is a n-by-n matrix.',\n    'alternatives': [\n      '@return the n-by-n diagonal matrix if m is a column matrix or the column\\nmatrix that represents the diagonal if m is a n-by-n matrix.',\n      '@return the diagonal matrix of size n-by-n if m is a column matrix or the column\\nmatrix which represents the diagonal if m is a n-by-n matrix.',\n      '@return the diagonal matrix with n-by-n size if m is a column matrix or the column\\nmatrix that represents the diagonal if m is a n-by-n matrix.',\n      '@return the n-by-n diagonal matrix if m is a column matrix or the column\\nmatrix describing the diagonal if m is a n-by-n matrix.',\n      '@return the diagonal matrix of order n-by-n if m is a column matrix or the column\\nmatrix that represents the diagonal if m is a n-by-n matrix.'\n    ]\n  },\n  {\n    'tag': '@param m1 Source matrix.',\n    'alternatives': [\n      '@param m1 Input matrix.',\n      '@param m1 Matrix as source.',\n      '@param m1 Matrix to be copied.',\n      '@param m1 Matrix to copy.',\n      '@param m1 Matrix being the source.'\n    ]\n  },\n  {\n    'tag': '@param col1 Source column.',\n    'alternatives': [\n      '@param col1 Column from source.',\n      '@param col1 Column to be copied.',\n      '@param col1 Column to copy.',\n      '@param col1 Column coming from the source.',\n      '@param col1 Column derived from the source.'\n    ]\n  },\n  {\n    'tag': '@param m2 Target matrix.',\n    'alternatives': [\n      '@param m2 Destination matrix.',\n      '@param m2 Matrix to fill.',\n      '@param m2 Matrix to which data will be copied.',\n      '@param m2 Matrix for the target.',\n      '@param m2 Matrix that will receive the data.'\n    ]\n  },\n  {\n    'tag': '@param col2 Target column.',\n    'alternatives': [\n      '@param col2 Column for target.',\n      '@param col2 Column to be filled.',\n      '@param col2 Column to receive the data.',\n      '@param col2 Column on the target.',\n      '@param col2 Column for storing the data.'\n    ]\n  },\n  {\n    'tag': '@param n Number of rows.',\n    'alternatives': [\n      '@param n Total rows.',\n      '@param n Count of rows.',\n      '@param n Row count.',\n      '@param n Number of total rows.',\n      '@param n Number of rows being considered.'\n    ]\n  }\n]"