"output=[\n{\n  'tag': '@throws MathArithmeticException if the result can not be represented as a\\n{@code long}.',\n  'alternatives': [\n    '@throws MathArithmeticException when the outcome cannot be expressed as a\\n{@code long}.',\n    '@throws MathArithmeticException if the answer cannot be represented as a\\n{@code long}.',\n    '@throws MathArithmeticException if the result is not representable as a\\n{@code long}.',\n    '@throws MathArithmeticException if the final value cannot be stored as a\\n{@code long}.',\n    '@throws MathArithmeticException if the computed result cannot be held as a\\n{@code long}.'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@return \\\\( k^e \\\\)',\n  'alternatives': [\n    '@return the result of raising \\\\( k \\\\) to the power of \\\\( e \\\\)',\n    '@return the value of \\\\( k \\\\) raised to the power of \\\\( e \\\\)',\n    '@return the outcome of raising \\\\( k \\\\) to the exponent \\\\( e \\\\)',\n    '@return the computed value of \\\\( k \\\\) raised to the power of \\\\( e \\\\)',\n    '@return the result of raising \\\\( k \\\\) to the exponent \\\\( e \\\\)'\n  ]\n},\n{\n  'tag': '@throws MathArithmeticException if the result would overflow.',\n  'alternatives': [\n    '@throws MathArithmeticException if the answer would cause overflow.',\n    '@throws MathArithmeticException if the outcome would result in overflow.',\n    '@throws MathArithmeticException if the result would lead to overflow.',\n    '@throws MathArithmeticException if the final value would result in overflow.',\n    '@throws MathArithmeticException if the computed result would overflow.'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@return k<sup>e</sup>',\n  'alternatives': [\n    '@return the value of k raised to the power of e',\n    '@return the result of k raised to the power of e',\n    '@return the outcome of k raised to the exponent e',\n    '@return the computed value of k raised to the power of e',\n    '@return the value obtained by raising k to the power of e'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@return \\\\( k^e \\\\)',\n  'alternatives': [\n    '@return the result of raising \\\\( k \\\\) to the power of \\\\( e \\\\)',\n    '@return the value of \\\\( k \\\\) raised to the power of \\\\( e \\\\)',\n    '@return the outcome of raising \\\\( k \\\\) to the exponent \\\\( e \\\\)',\n    '@return the computed value of \\\\( k \\\\) raised to the power of \\\\( e \\\\)',\n    '@return the result of raising \\\\( k \\\\) to the exponent \\\\( e \\\\)'\n  ]\n},\n{\n  'tag': '@throws MathArithmeticException if the result would overflow.',\n  'alternatives': [\n    '@throws MathArithmeticException if the answer would cause overflow.',\n    '@throws MathArithmeticException if the outcome would result in overflow.',\n    '@throws MathArithmeticException if the result would lead to overflow.',\n    '@throws MathArithmeticException if the final value would result in overflow.',\n    '@throws MathArithmeticException if the computed result would overflow.'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@return k<sup>e</sup>',\n  'alternatives': [\n    '@return the value of k raised to the power of e',\n    '@return the result of k raised to the power of e',\n    '@return the outcome of k raised to the exponent e',\n    '@return the computed value of k raised to the power of e',\n    '@return the value obtained by raising k to the power of e'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@return k<sup>e</sup>',\n  'alternatives': [\n    '@return the value of k raised to the power of e',\n    '@return the result of k raised to the power of e',\n    '@return the outcome of k raised to the exponent e',\n    '@return the computed value of k raised to the power of e',\n    '@return the value obtained by raising k to the power of e'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@return k<sup>e</sup>',\n  'alternatives': [\n    '@return the value of k raised to the power of e',\n    '@return the result of k raised to the power of e',\n    '@return the outcome of k raised to the exponent e',\n    '@return the computed value of k raised to the power of e',\n    '@return the value obtained by raising k to the power of e'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@param k Number to raise.',\n  'alternatives': [\n    '@param k Value to exponentiate.',\n    '@param k Number to elevate.',\n    '@param k Input number to be raised.',\n    '@param k Value to increase.',\n    '@param k Number to be raised.'\n  ]\n},\n{\n  'tag': '@param e Exponent (must be positive or zero).',\n  'alternatives': [\n    '@param e Exponent (should be non-negative).',\n    '@param e Exponent (must be greater than or equal to zero).',\n    '@param e The power (should be positive or zero).',\n    '@param e The exponent (must be non-negative).',\n    '@param e The exponent value (must be greater than or equal to zero).'\n  ]\n},\n{\n  'tag': '@return k<sup>e</sup>',\n  'alternatives': [\n    '@return the value of k raised to the power of e',\n    '@return the result of k raised to the power of e',\n    '@return the outcome of k raised to the exponent e',\n    '@return the computed value of k raised to the power of e',\n    '@return the value obtained by raising k to the power of e'\n  ]\n},\n{\n  'tag': '@throws NotPositiveException if {@code e < 0}.',\n  'alternatives': [\n    '@throws NotPositiveException when {@code e < 0}.',\n    '@throws NotPositiveException if the value of {@code e} is negative.',\n    '@throws NotPositiveException if {@code e} is less than zero.',\n    '@throws NotPositiveException if the provided {@code e} is negative.',\n    '@throws NotPositiveException if the input {@code e} is less than zero.'\n  ]\n},\n{\n  'tag': '@param n the size of the set',\n  'alternatives': [\n    '@param n Size of the given set',\n    '@param n The number of elements in the set',\n    '@param n The size of the provided set',\n    '@param n The total count of elements in the set',\n    '@param n The cardinality of the set'\n  ]\n},\n{\n  'tag': '@param k the number of non-empty subsets',\n  'alternatives': [\n    '@param k Number of subsets that are not empty',\n    '@param k The count of non-empty subsets',\n    '@param k The number of subsets with at least one element',\n    '@param k The total count of subsets with elements',\n    '@param k The quantity of subsets that are not empty'\n  ]\n},\n{\n  'tag': '@return {@code S(n,k)}',\n  'alternatives': [\n    '@return the value of {@code S(n,k)}',\n    '@return the result of {@code S(n,k)}',\n    '@return the outcome of {@code S(n,k)}',\n    '@return the computed value of {@code S(n,k)}',\n    '@return the value obtained from {@code S(n,k)}'\n  ]\n},\n{\n  'tag': '@throws MathArithmeticException if some overflow happens, typically for n exceeding 25 and\\nk between 20 and n-2 (S(n,n-1) is handled specifically and does not overflow)',\n  'alternatives': [\n    '@throws MathArithmeticException if an overflow occurs, commonly when n is greater than 25 and\\nk is between 20 and n-2 (S(n,n-1) is treated differently and does not result in overflow)',\n    '@throws MathArithmeticException if there is an overflow, especially when the value of n is above 25 and\\nk lies between 20 and n-2 (S(n,n-1) is treated specially and does not lead to overflow)',\n    '@throws MathArithmeticException if there is a potential overflow, often when n exceeds 25 and\\nk is in the range 20 to n-2 (S(n,n-1) is handled differently and does not cause overflow)',\n    '@throws MathArithmeticException if overflow occurs, usually when n is greater than 25 and\\nk lies between 20 and n-2 (S(n,n-1) is handled specially and does not result in overflow)',\n    '@throws MathArithmeticException if overflow happens, typically for n exceeding 25 and\\nk between 20 and n-2 (S(n,n-1) is handled specifically and does not result in overflow)'\n  ]\n},\n{\n  'tag': '@param a Addend.',\n  'alternatives': [\n    '@param a Value to be added.',\n    '@param a Input number to add.',\n    '@param a The number to be added.',\n    '@param a Value to increase.',\n    '@param a Number to be summed.'\n  ]\n},\n{\n  'tag': '@param b Addend.',\n  'alternatives': [\n    '@param b Value to be added.',\n    '@param b Input number to add.',\n    '@param b The number to be added.',\n    '@param b Value to increase.',\n    '@param b Number to be summed.'\n  ]\n}\n]"