"output = [\n    {\n      'tag': '@return {@code true} if the argument is a 6to4 address',\n      'alternatives': [\n        '@return {@code true} if the parameter is a 6to4 address',\n        '@return whether the argument is a 6to4 address, returns {@code true} if it is',\n        '@return {@code true} if the input represents a 6to4 address',\n        '@return if the argument is a 6to4 address, it will return {@code true}',\n        '@return the function will return {@code true} if the argument is a 6to4 address'\n      ]\n    },\n    {\n      'tag': '@param ip {@link Inet6Address} to be examined for embedded IPv4 in 6to4 address',\n      'alternatives': [\n        '@param ip the IPv6 address to be inspected for embedded IPv4 in 6to4 address',\n        '@param ip the {@link Inet6Address} to be checked for embedded IPv4 in 6to4 address',\n        '@param ip the IP address derived from {@link Inet6Address} to look for embedded IPv4 in a 6to4 address',\n        '@param ip the Internet Protocol Version 6 (IPv6) address, represented by the associated object {@link Inet6Address}, that will be analyzed for any presence of embedded IPv4 in a 6to4 address',\n        '@param ip the input IPv6 address, which is an object of type {@link Inet6Address}, to be assessed for any contained IPv4 in 6to4 address'\n      ]\n    },\n    {\n      'tag': '@return {@link Inet4Address} of embedded IPv4 in 6to4 address',\n      'alternatives': [\n        '@return {@link Inet4Address} that represents the embedded IPv4 in 6to4 address',\n        '@return the embedded IPv4 in 6to4 address as an {@link Inet4Address}',\n        '@return the IPv4 address embedded in the 6to4 address, returned as an {@link Inet4Address}',\n        '@return the {@link Inet4Address} value that corresponds to the embedded IPv4 in the 6to4 address',\n        '@return the value of the embedded IPv4 in the 6to4 address as a {@link Inet4Address}'\n      ]\n    },\n    {\n      'tag': '@throws IllegalArgumentException if the argument is not a valid IPv6 6to4 address',\n      'alternatives': [\n        '@throws IllegalArgumentException when the parameter does not represent a valid 6to4 address in the IPv6 format',\n        '@throws IllegalArgumentException if the argument does not conform to a valid IPv6 6to4 address',\n        '@throws IllegalArgumentException if the input is not a valid 6to4 address in the IPv6 format',\n        '@throws IllegalArgumentException in case the argument is an invalid IPv6 6to4 address',\n        '@throws IllegalArgumentException if the parameter is not a valid IPv6 6to4 address'\n      ]\n    },\n    {\n      'tag': '@param ip {@link Inet6Address} to be examined for Teredo address format',\n      'alternatives': [\n        '@param ip the IPv6 address to be analyzed for the presence of Teredo address format',\n        '@param ip the {@link Inet6Address} to inspect for Teredo address format',\n        '@param ip the IP address derived from {@link Inet6Address}, which will be checked for the Teredo address format',\n        '@param ip the Internet Protocol Version 6 (IPv6) address, represented by the associated object {@link Inet6Address}, that will be assessed for Teredo address format',\n        '@param ip the input IPv6 address, which is an object of type {@link Inet6Address}, to be investigated for the use of Teredo address format'\n      ]\n    },\n    {\n      'tag': '@return {@code true} if the argument is a Teredo address',\n      'alternatives': [\n        '@return {@code true} if the parameter is a Teredo address',\n        '@return whether the argument is a Teredo address, returns {@code true} if it is',\n        '@return {@code true} if the input represents a Teredo address',\n        '@return if the argument is a Teredo address, it will return {@code true}',\n        '@return the function will return {@code true} if the argument is a Teredo address'\n      ]\n    },\n    {\n      'tag': '@param ip {@link Inet6Address} to be examined for embedded Teredo information',\n      'alternatives': [\n        '@param ip the IPv6 address to be checked for embedded Teredo information',\n        '@param ip the {@link Inet6Address} to be inspected for embedded Teredo information',\n        '@param ip the IP address derived from {@link Inet6Address} to search for embedded Teredo information',\n        '@param ip the Internet Protocol Version 6 (IPv6) address, represented by the associated object {@link Inet6Address}, that will be analyzed for any embedded Teredo information',\n        '@param ip the input IPv6 address, which is an object of type {@link Inet6Address}, to be examined for any embedded Teredo information'\n      ]\n    },\n    {\n      'tag': '@return extracted {@code TeredoInfo}',\n      'alternatives': [\n        '@return returns the extracted {@code TeredoInfo}',\n        '@return the extracted {@code TeredoInfo} will be returned',\n        '@return the function will extract and return {@code TeredoInfo}',\n        '@return the extracted {@code TeredoInfo} object is returned',\n        '@return the value of the extracted {@code TeredoInfo} object is returned'\n      ]\n    },\n    {\n      'tag': '@throws IllegalArgumentException if the argument is not a valid IPv6 Teredo address',\n      'alternatives': [\n        '@throws IllegalArgumentException when the parameter does not represent a valid Teredo address in the IPv6 format',\n        '@throws IllegalArgumentException if the argument does not conform to a valid IPv6 Teredo address',\n        '@throws IllegalArgumentException if the input is not a valid Teredo address in the IPv6 format',\n        '@throws IllegalArgumentException in case the argument is an invalid IPv6 Teredo address',\n        '@throws IllegalArgumentException if the parameter is not a valid IPv6 Teredo address'\n      ]\n    },\n    {\n      'tag': '@param ip {@link Inet6Address} to be examined for ISATAP address format',\n      'alternatives': [\n        '@param ip the IPv6 address to be checked for ISATAP address format',\n        '@param ip the {@link Inet6Address} to be inspected for ISATAP address format',\n        '@param ip the IP address derived from {@link Inet6Address}, which will be verified for ISATAP address format',\n        '@param ip the Internet Protocol Version 6 (IPv6) address, represented by the associated object {@link Inet6Address}, that will be examined for the presence of ISATAP address format',\n        '@param ip the input IPv6 address, which is an object of type {@link Inet6Address}, to be assessed for the usage of ISATAP address format'\n      ]\n    },\n    {\n      'tag': '@return {@code true} if the argument is an ISATAP address',\n      'alternatives': [\n        '@return {@code true} if the parameter is an ISATAP address',\n        '@return whether the argument is an ISATAP address, returns {@code true} if it is',\n        '@return {@code true} if the input represents an ISATAP address',\n        '@return if the argument is an ISATAP address, it will return {@code true}',\n        '@return the function will return {@code true} if the argument is an ISATAP address'\n      ]\n    },\n    {\n      'tag': '@param ip {@link Inet6Address} to be examined for embedded IPv4 in ISATAP address',\n      'alternatives': [\n        '@param ip the IPv6 address to be analyzed for embedded IPv4 in the ISATAP address',\n        '@param ip the {@link Inet6Address} to be checked for embedded IPv4 in the ISATAP address',\n        '@param ip the IP address derived from {@link Inet6Address}, which will be investigated for embedded IPv4 in the ISATAP address',\n        '@param ip the Internet Protocol Version 6 (IPv6) address, represented by the associated object {@link Inet6Address}, that will be assessed for any occurrence of embedded IPv4 in the ISATAP address',\n        '@param ip the input IPv6 address, which is an object of type {@link Inet6Address}, to be inspected for any embedded IPv4 in the ISATAP address'\n      ]\n    },\n    {\n      'tag': '@return {@link Inet4Address} of embedded IPv4 in an ISATAP address',\n      'alternatives': [\n        '@return {@link Inet4Address} that represents the embedded IPv4 in the ISATAP address',\n        '@return the embedded IPv4 in the ISATAP address as an {@link Inet4Address}',\n        '@return the IPv4 address embedded in the ISATAP address, returned as an {@link Inet4Address}',\n        '@return the {@link Inet4Address} value that corresponds to the embedded IPv4 in the ISATAP address',\n        '@return the value of the embedded IPv4 in the ISATAP address as a {@link Inet4Address}'\n      ]\n    },\n    {\n      'tag': '@throws IllegalArgumentException if the argument is not a valid IPv6 ISATAP address',\n      'alternatives': [\n        '@throws IllegalArgumentException when the parameter does not represent a valid ISATAP address in the IPv6 format',\n        '@throws IllegalArgumentException if the argument does not conform to a valid IPv6 ISATAP address',\n        '@throws IllegalArgumentException if the input is not a valid ISATAP address in the IPv6 format',\n        '@throws IllegalArgumentException in case the argument is an invalid IPv6 ISATAP address',\n        '@throws IllegalArgumentException if the parameter is not a valid IPv6 ISATAP address'\n      ]\n    },\n    {\n      'tag': '@param ip {@link Inet6Address} to be examined for embedded IPv4 client address',\n      'alternatives': [\n        '@param ip the IPv6 address to be inspected for embedded IPv4 client address',\n        '@param ip the {@link Inet6Address} to be checked for embedded IPv4 client address',\n        '@param ip the IP address derived from {@link Inet6Address}, which will be analyzed for embedded IPv4 client address',\n        '@param ip the Internet Protocol Version 6 (IPv6) address, represented by the associated object {@link Inet6Address}, that will be examined for any embedded IPv4 client address',\n        '@param ip the input IPv6 address, which is an object of type {@link Inet6Address}, to be assessed for any contained IPv4 in client address'\n      ]\n    },\n    {\n      'tag': '@return {@code true} if there is an embedded IPv4 client address',\n      'alternatives': [\n        '@return {@code true} if there is a contained IPv4 client address',\n        '@return whether there is an embedded IPv4 client address, returns {@code true} if there is',\n        '@return {@code true} if the input has an embedded IPv4 client address',\n        '@return if there is an embedded IPv4 client address, it will return {@code true}',\n        '@return the function will return {@code true} if there is an embedded IPv4 client address'\n      ]\n    },\n    {\n      'tag': '@param ip {@link Inet6Address} to be examined for embedded IPv4 client address',\n      'alternatives': [\n        '@param ip the IPv6 address to be checked for embedded IPv4 client address',\n        '@param ip the {@link Inet6Address} to be inspected for embedded IPv4 client address',\n        '@param ip the IP address derived from {@link Inet6Address}, which will be verified for embedded IPv4 client address',\n        '@param ip the Internet Protocol Version 6 (IPv6) address, represented by the associated object {@link Inet6Address}, that will be investigated for the presence of embedded IPv4 client address',\n        '@param ip the input IPv6 address, which is an object of type {@link Inet6Address}, to be analyzed for the usage of embedded IPv4 client address'\n      ]\n    },\n    {\n      'tag': '@return {@link Inet4Address} of embedded IPv4 client address',\n      'alternatives': [\n        '@return {@link Inet4Address} that represents the embedded IPv4 client address',\n        '@return the embedded IPv4 client address as an {@link Inet4Address}',\n        '@return the IPv4 address embedded in the client address, returned as an {@link Inet4Address}',\n        '@return the {@link Inet4Address} value that corresponds to the embedded IPv4 client address',\n        '@return the value of the embedded IPv4 client address as a {@link Inet4Address}'\n      ]\n    },\n    {\n      'tag': '@throws IllegalArgumentException if the argument does not have a valid embedded IPv4 address',\n      'alternatives': [\n        '@throws IllegalArgumentException when the parameter does not contain a valid embedded IPv4 address',\n        '@throws IllegalArgumentException if the argument does not have a valid"