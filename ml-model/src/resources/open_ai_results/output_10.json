"[\n  {\n    'tag': '@param iterable the iterable to search, may be null',\n    'alternatives': [\n      '@param collection the iterable to search, may be null',\n      '@param items the iterable to search, may be null',\n      '@param sequence the iterable to search, may be null',\n      '@param data the iterable to search, may be null',\n      '@param objects the iterable to search, may be null'\n    ]\n  },\n  {\n    'tag': '@return the index of the first element which matches the predicate or -1 if none matches',\n    'alternatives': [\n      '@return the position of the initial element that fulfills the predicate or -1 if none meet the criteria',\n      '@return the position of the first object that satisfies the predicate or -1 if no object matches',\n      '@return the index of the initial element that meets the predicate condition, or -1 if no element matches',\n      '@return the position of the first element that matches the given condition or -1 if no match is found',\n      '@return the index of the first item which satisfies the predicate, or -1 if no item satisfies'\n    ]\n  },\n  {\n    'tag': '@param <E> the type of object the {@link Iterable} contains',\n    'alternatives': [\n      '@param <E> the object type that the {@link Iterable} holds',\n      '@param <E> the data type of the items in the {@link Iterable}',\n      '@param <E> the element type that the {@link Iterable} includes',\n      '@param <E> the class of the objects in the {@link Iterable}',\n      '@param <E> the type of elements present in the {@link Iterable}'\n    ]\n  },\n  {\n    'tag': '@param iterable the {@link Iterable} to use, may be null',\n    'alternatives': [\n      '@param collection the {@link Iterable} to utilize, may be null',\n      '@param items the {@link Iterable} to employ, may be null',\n      '@param sequence the {@link Iterable} to utilize, may be null',\n      '@param data the {@link Iterable} to use, may be null',\n      '@param objects the {@link Iterable} to employ, may be null'\n    ]\n  },\n  {\n    'tag': '@return true if every element of the collection matches the predicate or if the\\n  collection is empty, false otherwise', \n    'alternatives': [\n      '@return true if each item in the collection satisfies the predicate or if the\\ncollection is empty, false otherwise',\n      '@return true if all elements in the collection meet the predicate or if the\\ncollection is empty, false otherwise',\n      '@return true if every object in the collection fulfills the predicate or if the\\ncollection is empty, false otherwise',\n      '@return true if all items in the collection satisfy the predicate or if the\\ncollection is empty, false otherwise',\n      '@return true if each element of the collection matches the predicate or if the\\ncollection is empty, false otherwise'\n    ]\n  },\n  {\n    'tag': '@param input the {@link Iterable} to get the input from, may be null',\n    'alternatives': [\n      '@param source the {@link Iterable} to obtain the input from, may be null',\n      '@param items the {@link Iterable} to fetch the input from, may be null',\n      '@param data the {@link Iterable} to retrieve the input from, may be null',\n      '@param objects the {@link Iterable} to obtain the input from, may be null',\n      '@param sequence the {@link Iterable} to get the input from, may be null'\n    ]\n  },\n  {\n    'tag': '@return true if any element of the collection matches the predicate, false otherwise',\n    'alternatives': [\n      '@return true if at least one element in the collection satisfies the predicate, false otherwise',\n      '@return true if any object in the collection fulfills the predicate, false otherwise',\n      '@return true if there is any item in the collection that meets the predicate, false otherwise',\n      '@return true if some element of the collection matches the predicate, false otherwise',\n      '@return true if at least one item in the collection satisfies the predicate, false otherwise'\n    ]\n  },\n  {\n    'tag': '@param object the object to check',\n    'alternatives': [\n      '@param item the object to verify',\n      '@param element the object to examine',\n      '@param target the object to validate',\n      '@param subject the object to inspect',\n      '@param instance the object to test'\n    ]\n  },\n  {\n    'tag': '@return true if the object is contained in the iterable, false otherwise',\n    'alternatives': [\n      '@return true if the item is present in the iterable, false otherwise',\n      '@return true if the element exists in the iterable, false otherwise',\n      '@return true if the object is found in the iterable, false otherwise',\n      '@return true if the target is included in the iterable, false otherwise',\n      '@return true if the instance is contained in the iterable, false otherwise'\n    ]\n  },\n  {\n    'tag': '@param <T> the element type of the object to find',\n    'alternatives': [\n      '@param <T> the type of element for the object to locate',\n      '@param <T> the class of the item to search for',\n      '@param <T> the data type of the object to find',\n      '@param <T> the type of object to search for',\n      '@param <T> the element class of the object to locate'\n    ]\n  },\n  {\n    'tag': '@param obj the object to find the cardinality of',\n    'alternatives': [\n      '@param item the object to determine the cardinality of',\n      '@param element the object to calculate the cardinality of',\n      '@param target the object to find the cardinality of',\n      '@param subject the object to compute the cardinality of',\n      '@param instance the object to evaluate the cardinality of'\n    ]\n  },\n  {\n    'tag': '@return the the number of occurrences of obj in iterable',\n    'alternatives': [\n      '@return the count of obj appearances in iterable',\n      '@return the total occurrences of obj in iterable',\n      '@return the number of times obj appears in iterable',\n      '@return the quantity of obj in iterable',\n      '@return the total count of obj in iterable'\n    ]\n  }\n]"