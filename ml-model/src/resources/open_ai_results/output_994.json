"output=[\n    {\n        'tag': '@param column Column to be set.',\n        'alternatives': [\n            '@param column Column to be assigned.', \n            '@param column Column to set.', \n            '@param column Column to be updated.',\n            '@param column Column to be modified.',\n            '@param column Column to be changed.'\n        ]\n    },\n    {\n        'tag': '@param vector Column vector (must have the same number of rows\\nas the instance).',\n        'alternatives': [\n            '@param vector Column vector (must have the same number of rows\\nas the object).',\n            '@param vector Column vector (with the same number of rows\\nas the instance).',\n            '@param vector Vector in the column (must have the same number of rows\\nas the instance).',\n            '@param vector Column vector (should have the same number of rows\\nas the instance).',\n            '@param vector Column vector (needs to have the same number of rows\\nas the instance).'\n        ]\n    },\n    {\n        'tag': '@throws OutOfRangeException if the specified column index is invalid.',\n        'alternatives': [\n            '@throws OutOfRangeException if the column index specified is invalid.',\n            '@throws OutOfRangeException when the specified column index is invalid.',\n            '@throws OutOfRangeException if the specified index for the column is invalid.',\n            '@throws OutOfRangeException if the column index provided is invalid.',\n            '@throws OutOfRangeException if the index of the column is invalid.'\n        ]\n    },\n    {\n        'tag': '@throws MatrixDimensionMismatchException if the vector dimension does not\\nmatch one instance column.',\n        'alternatives': [\n            '@throws MatrixDimensionMismatchException if the dimension of the vector does not\\nmatch one instance column.',\n            '@throws MatrixDimensionMismatchException when the dimension of the vector does not\\nmatch one instance column.',\n            '@throws MatrixDimensionMismatchException if the size of the vector does not\\nmatch one instance column.',\n            '@throws MatrixDimensionMismatchException if the length of the vector does not\\nmatch one instance column.',\n            '@throws MatrixDimensionMismatchException if the vector size does not\\nmatch one instance column.'\n        ]\n    },\n    {\n        'tag': '@param row Row to be fetched.',\n        'alternatives': [\n            '@param row Row to retrieve.',\n            '@param row Row to obtain.',\n            '@param row Row to get.',\n            '@param row Row to fetch.',\n            '@param row Row to access.'\n        ]\n    },\n    {\n        'tag': '@return array of entries in the row.',\n        'alternatives': [\n            '@return array containing the elements in the row.',\n            '@return array of elements in the row.',\n            '@return array with the entries in the row.',\n            '@return array that holds the row entries.',\n            '@return array representing the row entries.'\n        ]\n    },\n    {\n        'tag': '@throws OutOfRangeException if the specified row index is not valid.',\n        'alternatives': [\n            '@throws OutOfRangeException if the row index provided is not valid.',\n            '@throws OutOfRangeException if the specified index for the row is not valid.',\n            '@throws OutOfRangeException when the specified row index is not valid.',\n            '@throws OutOfRangeException if the index of the row is not valid.',\n            '@throws OutOfRangeException if the row index specified is not valid.'\n        ]\n    },\n    {\n        'tag': '@param row Row to be set.',\n        'alternatives': [\n            '@param row Row to assign.',\n            '@param row Row to update.',\n            '@param row Row to change.',\n            '@param row Row to modify.',\n            '@param row Row to adjust.'\n        ]\n    },\n    {\n        'tag': '@param array Row matrix (must have the same number of columns as\\nthe instance).',\n        'alternatives': [\n            '@param array Row matrix (must have the same number of columns as\\nthe object).',\n            '@param array Row matrix (should have the same number of columns as\\nthe instance).',\n            '@param array Matrix in the row (must have the same number of columns as\\nthe instance).',\n            '@param array Row matrix (with the same number of columns as\\nthe instance).',\n            '@param array Row matrix (needs to have the same number of columns as\\nthe instance).'\n        ]\n    },\n    {\n        'tag': '@throws OutOfRangeException if the specified row index is invalid.',\n        'alternatives': [\n            '@throws OutOfRangeException if the row index specified is invalid.',\n            '@throws OutOfRangeException when the specified row index is invalid.',\n            '@throws OutOfRangeException if the specified index for the row is invalid.',\n            '@throws OutOfRangeException if the row index provided is invalid.',\n            '@throws OutOfRangeException if the index of the row is invalid.'\n        ]\n    },\n    {\n        'tag': '@throws MatrixDimensionMismatchException if the array size does not match\\none instance row.',\n        'alternatives': [\n            '@throws MatrixDimensionMismatchException if the size of the array does not match\\none instance row.',\n            '@throws MatrixDimensionMismatchException when the size of the array does not match\\none instance row.',\n            '@throws MatrixDimensionMismatchException if the length of the array does not match\\none instance row.',\n            '@throws MatrixDimensionMismatchException if the array dimension does not match\\none instance row.',\n            '@throws MatrixDimensionMismatchException if the array size provided does not match\\none instance row.'\n        ]\n    },\n    {\n        'tag': '@param column the column to be fetched',\n        'alternatives': [\n            '@param column the column to retrieve',\n            '@param column the column to obtain',\n            '@param column the column to get',\n            '@param column the column to access',\n            '@param column the column to fetch'\n        ]\n    },\n    {\n        'tag': '@return array of entries in the column',\n        'alternatives': [\n            '@return array containing the elements in the column',\n            '@return array of elements in the column',\n            '@return array with the entries in the column',\n            '@return array that holds the column entries',\n            '@return array representing the column entries'\n        ]\n    },\n    {\n        'tag': '@throws OutOfRangeException if the specified column index is not valid.',\n        'alternatives': [\n            '@throws OutOfRangeException if the column index provided is not valid.',\n            '@throws OutOfRangeException if the specified index for the column is not valid.',\n            '@throws OutOfRangeException when the specified column index is not valid.',\n            '@throws OutOfRangeException if the index of the column is not valid.',\n            '@throws OutOfRangeException if the column index specified is not valid.'\n        ]\n    },\n    {\n        'tag': '@param column the column to be set',\n        'alternatives': [\n            '@param column the column to assign',\n            '@param column the column to update',\n            '@param column the column to change',\n            '@param column the column to modify',\n            '@param column the column to adjust'\n        ]\n    },\n    {\n        'tag': '@param array column array (must have the same number of rows as the instance)',\n        'alternatives': [\n            '@param array column array (must have the same number of rows as the object)',\n            '@param array column array (should have the same number of rows as the instance)',\n            '@param array array in the column (must have the same number of rows as the instance)',\n            '@param array column array (with the same number of rows as the instance)',\n            '@param array column array (needs to have the same number of rows as the instance)'\n        ]\n    },\n    {\n        'tag': '@throws OutOfRangeException if the specified column index is invalid.',\n        'alternatives': [\n            '@throws OutOfRangeException if the column index specified is invalid.',\n            '@throws OutOfRangeException when the specified column index is invalid.',\n            '@throws OutOfRangeException if the specified index for the column is invalid.',\n            '@throws OutOfRangeException if the column index provided is invalid.',\n            '@throws OutOfRangeException if the index of the column is invalid.'\n        ]\n    },\n    {\n        'tag': '@throws MatrixDimensionMismatchException if the array size does not match\\none instance column.',\n        'alternatives': [\n            '@throws MatrixDimensionMismatchException if the size of the array does not match\\none instance column.',\n            '@throws MatrixDimensionMismatchException when the size of the array does not match\\none instance column.',\n            '@throws MatrixDimensionMismatchException if the length of the array does not match\\none instance column.',\n            '@throws MatrixDimensionMismatchException if the array dimension does not match\\none instance column.',\n            '@throws MatrixDimensionMismatchException if the array size provided does not match\\none instance column.'\n        ]\n    },\n    {\n        'tag': '@param row row location of entry to be fetched',\n        'alternatives': [\n            '@param row location of the row entry to be obtained',\n            '@param row location of the row entry to retrieve',\n            '@param row location of the row entry to access',\n            '@param row location of the row entry to fetch',\n            '@param row location of the row entry to get'\n        ]\n    },\n    {\n        'tag': '@param column column location of entry to be fetched',\n        'alternatives': [\n            '@param column location of the column entry to be obtained',\n            '@param column location of the column entry to retrieve',\n            '@param column location of the column entry to access',\n            '@param column location of the column entry to fetch',\n            '@param column location of the column entry to get'\n        ]\n    },\n    {\n        'tag': '@return matrix entry in row,column',\n        'alternatives': [\n            '@return entry in the matrix at row,column',\n            '@return entry in the matrix in row,column',\n            '@return entry in the matrix for row,column',\n            '@return matrix element in row,column',\n            '@return matrix element at row,column'\n        ]\n    },\n    {\n        'tag': '@throws OutOfRangeException if the row or column index is not valid.',\n        'alternatives': [\n            '@throws OutOfRangeException if the row or column index provided is not valid.',\n            '@throws OutOfRangeException if the specified row or column index is not valid.',\n            '@throws OutOfRangeException when the row or column index is not valid.',\n            '@throws OutOfRangeException if the index of the row or column is not valid.',\n            '@throws OutOfRangeException if the row index or column index is not valid.'\n        ]\n    },\n    {\n        'tag': '@param row row location of entry to be set',\n        'alternatives': [\n            '@param row location of the row entry to be assigned',\n            '@param row location of the row entry to update',\n            '@param row location of the row entry to change',\n            '@param row location of the row entry to modify',\n            '@param row location of the row entry to adjust'\n        ]\n    },\n    {\n        'tag': '@param column column location of entry to be set',\n        'alternatives': [\n            '@param column location of the column entry to be assigned',\n            '@param column location of the column entry to update',\n            '@param column location of the column entry to change',\n            '@param column location of the column entry to modify',\n            '@param column location of the column entry to adjust'\n        ]\n    },\n    {\n        'tag': '@param value matrix entry to be set in row,column',\n        'alternatives': [\n            '@param value matrix entry to assign in row,column',\n            '@param value matrix entry to update in row,column',\n            '@param value matrix entry to change in row,column',\n            '@param value matrix entry to modify in row,column',\n            '@param value matrix entry to adjust in row,column'\n        ]\n    }\n]"