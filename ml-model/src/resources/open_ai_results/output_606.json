"output = [\r\n  {\r\n    'tag': '@return The sum of squares',\r\n    'alternatives': [\r\n      '@return The square sum',\r\n      '@return The squared total',\r\n      '@return The sum of the squared values',\r\n      '@return The total of the squares',\r\n      '@return The sum of the values squared'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the mean',\r\n    'alternatives': [\r\n      '@return the average',\r\n      '@return the arithmetic mean',\r\n      '@return the expected value',\r\n      '@return the statistical mean',\r\n      '@return the average value'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the standard deviation',\r\n    'alternatives': [\r\n      '@return the SD',\r\n      '@return the std dev',\r\n      '@return the square root of the variance',\r\n      '@return the dispersion',\r\n      '@return the measure of variability'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return The quadratic mean or {@code Double.NaN} if no values\\nhave been added.',\r\n    'alternatives': [\r\n      '@return The root mean square or {@code Double.NaN} if no values have been added.',\r\n      '@return The RMS value or {@code Double.NaN} if no values have been added.',\r\n      '@return The square root of the average of the squares or {@code Double.NaN} if no values have been added.',\r\n      '@return The RMS root value or {@code Double.NaN} if no values have been added.',\r\n      '@return The square root of the mean of the squares or {@code Double.NaN} if no values have been added.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the variance',\r\n    'alternatives': [\r\n      '@return the variability',\r\n      '@return the degree of dispersion',\r\n      '@return the spread',\r\n      '@return the variability from the mean',\r\n      '@return the measure of statistical dispersion'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the population variance',\r\n    'alternatives': [\r\n      '@return the population variability',\r\n      '@return the population level dispersion',\r\n      '@return the spread in the population',\r\n      '@return the population variability from the mean',\r\n      '@return the measure of statistical dispersion in the population'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the maximum',\r\n    'alternatives': [\r\n      '@return the largest value',\r\n      '@return the highest number',\r\n      '@return the maximum value',\r\n      '@return the greatest element',\r\n      '@return the largest element'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the minimum',\r\n    'alternatives': [\r\n      '@return the smallest value',\r\n      '@return the lowest number',\r\n      '@return the minimum value',\r\n      '@return the smallest element',\r\n      '@return the lowest element'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the geometric mean',\r\n    'alternatives': [\r\n      '@return the GM',\r\n      '@return the product mean',\r\n      '@return the average growth factor',\r\n      '@return the mean proportional value',\r\n      '@return the average scale factor'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the sum of logs',\r\n    'alternatives': [\r\n      '@return the logarithmic sum',\r\n      '@return the total log',\r\n      '@return the log total',\r\n      '@return the sum of logarithms',\r\n      '@return the logarithmic total'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return second central moment statistic',\r\n    'alternatives': [\r\n      '@return the second central moment',\r\n      '@return the variance',\r\n      '@return the dispersion measure',\r\n      '@return the second moment about the mean',\r\n      '@return the measure of distribution spread'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return String with line feeds displaying statistics',\r\n    'alternatives': [\r\n      '@return String with statistics displayed in separate lines',\r\n      '@return String with formatted statistics',\r\n      '@return Statistics as a formatted string with line breaks',\r\n      '@return Formatted string showing statistics with line breaks',\r\n      '@return String representation of statistics with line breaks'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param object the object to test equality against.',\r\n    'alternatives': [\r\n      '@param object the object to compare for equality.',\r\n      '@param object the object to check for equality.',\r\n      '@param object the object to validate equality.',\r\n      '@param object the object to verify equality against.',\r\n      '@param object the object to assess equality with.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return true if object equals this',\r\n    'alternatives': [\r\n      '@return true if object is equal to this',\r\n      '@return true if object is identical to this',\r\n      '@return true if object matches this',\r\n      '@return true if object has the same value as this',\r\n      '@return true if object compares equal to this'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return hash code',\r\n    'alternatives': [\r\n      '@return the hash',\r\n      '@return the hash value',\r\n      '@return the hash code value',\r\n      '@return the numeric hash',\r\n      '@return the computed hash code'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the StorelessUnivariateStatistic implementing the sum',\r\n    'alternatives': [\r\n      '@return the sum implementation of StorelessUnivariateStatistic',\r\n      '@return the implementation of StorelessUnivariateStatistic for computing the sum',\r\n      '@return the StorelessUnivariateStatistic that calculates the sum',\r\n      '@return the StorelessUnivariateStatistic which performs the sum operation',\r\n      '@return the sum calculator based on StorelessUnivariateStatistic'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param sumImpl the StorelessUnivariateStatistic instance to use for\\n       computing the Sum',\r\n    'alternatives': [\r\n      '@param sumImpl the StorelessUnivariateStatistic object for computing the Sum',\r\n      '@param sumImpl the StorelessUnivariateStatistic implementation for calculating the Sum',\r\n      '@param sumImpl the StorelessUnivariateStatistic instance to be used for Sum computation',\r\n      '@param sumImpl the StorelessUnivariateStatistic object to compute the Sum',\r\n      '@param sumImpl the StorelessUnivariateStatistic implementation for Sum calculation'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws MathIllegalStateException if data has already been added (i.e if n >0)',\r\n    'alternatives': [\r\n      '@throws MathIllegalStateException if data has been already added (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has been previously added (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has already been included (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has been added earlier (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has been already inserted (i.e if n > 0)'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the StorelessUnivariateStatistic implementing the sum of squares',\r\n    'alternatives': [\r\n      '@return the sum of squares implementation of StorelessUnivariateStatistic',\r\n      '@return the implementation of StorelessUnivariateStatistic for calculating the sum of squares',\r\n      '@return the StorelessUnivariateStatistic that computes the sum of squares',\r\n      '@return the StorelessUnivariateStatistic which performs the sum of squares operation',\r\n      '@return the sum of squares calculator based on StorelessUnivariateStatistic'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param sumsqImpl the StorelessUnivariateStatistic instance to use for\\n       computing the sum of squares',\r\n    'alternatives': [\r\n      '@param sumsqImpl the StorelessUnivariateStatistic object for computing the sum of squares',\r\n      '@param sumsqImpl the StorelessUnivariateStatistic implementation for calculating the sum of squares',\r\n      '@param sumsqImpl the StorelessUnivariateStatistic instance to be used for sum of squares computation',\r\n      '@param sumsqImpl the StorelessUnivariateStatistic object to compute the sum of squares',\r\n      '@param sumsqImpl the StorelessUnivariateStatistic implementation for sum of squares calculation'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws MathIllegalStateException if data has already been added (i.e if n > 0)',\r\n    'alternatives': [\r\n      '@throws MathIllegalStateException if data has been already added (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has been previously added (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has already been included (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has been added earlier (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has been already inserted (i.e if n > 0)'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the StorelessUnivariateStatistic implementing the minimum',\r\n    'alternatives': [\r\n      '@return the minimum implementation of StorelessUnivariateStatistic',\r\n      '@return the implementation of StorelessUnivariateStatistic for calculating the minimum',\r\n      '@return the StorelessUnivariateStatistic that provides the minimum value',\r\n      '@return the StorelessUnivariateStatistic which finds the minimum',\r\n      '@return the minimum finder based on StorelessUnivariateStatistic'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param minImpl the StorelessUnivariateStatistic instance to use for\\n       computing the minimum',\r\n    'alternatives': [\r\n      '@param minImpl the StorelessUnivariateStatistic object for computing the minimum',\r\n      '@param minImpl the StorelessUnivariateStatistic implementation for calculating the minimum',\r\n      '@param minImpl the StorelessUnivariateStatistic instance to be used for minimum computation',\r\n      '@param minImpl the StorelessUnivariateStatistic object to compute the minimum',\r\n      '@param minImpl the StorelessUnivariateStatistic implementation for minimum calculation'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws MathIllegalStateException if data has already been added (i.e if n > 0)',\r\n    'alternatives': [\r\n      '@throws MathIllegalStateException if data has been already added (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has been previously added (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has already been included (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has been added earlier (i.e if n > 0)',\r\n      '@throws MathIllegalStateException if data has been already inserted (i.e if n > 0)'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the StorelessUnivariateStatistic implementing the maximum',\r\n    'alternatives': [\r\n      '@return the maximum implementation of StorelessUnivariateStatistic',\r\n      '@return the implementation of StorelessUnivariateStatistic for calculating the maximum',\r\n      '@return the StorelessUnivariateStatistic that provides the maximum value',\r\n      '@return the StorelessUnivariateStatistic which finds the maximum',\r\n      '@return the maximum finder based on StorelessUnivariateStatistic'\r\n    ]\r\n  }\r\n]\r\n"