"output=[\n  {\n    'tag': '@return the distance between two vectors.',\n    'alternatives': [\n      '@return the distance between a pair of vectors.',\n      '@return the distance of two vectors.',\n      '@return the length between two vectors.',\n      '@return the magnitude between two vectors.',\n      '@return the size between two vectors.'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if {@code v} is not the same size as\\n{@code this} vector.',\n    'alternatives': [\n      '@throws DimensionMismatchException if {@code this} vector and {@code v} are not the same size.',\n      '@throws DimensionMismatchException if the size of {@code v} is different from {@code this} vector.',\n      '@throws DimensionMismatchException if the vector {@code v} has a different size from the vector {@code this}.',\n      '@throws DimensionMismatchException if the size of {@code v} does not match the size of {@code this} vector.',\n      '@throws DimensionMismatchException if the size of {@code v} is not equal to the size of the vector {@code this}.'\n    ]\n  },\n  {\n    'tag': '@param v Vector to which distance is requested.',\n    'alternatives': [\n      '@param v Vector for which the distance is needed.',\n      '@param v Vector to calculate the distance from.',\n      '@param v Vector to find the distance to.',\n      '@param v Vector to compute the distance towards.',\n      '@param v Vector to obtain the distance for.'\n    ]\n  },\n  {\n    'tag': '@return the index of the minimum entry or -1 if vector length is 0\\nor all entries are {@code NaN}.',\n    'alternatives': [\n      '@return the minimum entry index or -1 if the vector has length 0 or all entries are {@code NaN}.',\n      '@return the index of the smallest entry or -1 if the vector length is 0 or all entries are {@code NaN}.',\n      '@return the index of the lowest entry or -1 if the vector has no entries or all entries are {@code NaN}.',\n      '@return the index of the minimal entry or -1 if the vector length is 0 or all entries are {@code NaN}.',\n      '@return the index of the smallest value or -1 if the vector has size 0 or all entries are {@code NaN}.'\n    ]\n  },\n  {\n    'tag': '@return the value of the minimum entry or {@code NaN} if all\\nentries are {@code NaN}.',\n    'alternatives': [\n      '@return the minimum entry value or {@code NaN} if all entries are {@code NaN}.',\n      '@return the value of the smallest entry or {@code NaN} if all entries are {@code NaN}.',\n      '@return the value of the lowest entry or {@code NaN} if all entries are {@code NaN}.',\n      '@return the value of the minimal entry or {@code NaN} if all entries are {@code NaN}.',\n      '@return the value of the smallest value or {@code NaN} if all entries are {@code NaN}.'\n    ]\n  },\n  {\n    'tag': '@return the index of the maximum entry or -1 if vector length is 0\\nor all entries are {@code NaN}',\n    'alternatives': [\n      '@return the maximum entry index or -1 if the vector has length 0 or all entries are {@code NaN}.',\n      '@return the index of the largest entry or -1 if the vector length is 0 or all entries are {@code NaN}.',\n      '@return the index of the highest entry or -1 if the vector has no entries or all entries are {@code NaN}.',\n      '@return the index of the maximal entry or -1 if the vector length is 0 or all entries are {@code NaN}.',\n      '@return the index of the largest value or -1 if the vector has size 0 or all entries are {@code NaN}.'\n    ]\n  },\n  {\n    'tag': '@return the value of the maximum entry or {@code NaN} if all\\nentries are {@code NaN}.',\n    'alternatives': [\n      '@return the maximum entry value or {@code NaN} if all entries are {@code NaN}.',\n      '@return the value of the largest entry or {@code NaN} if all entries are {@code NaN}.',\n      '@return the value of the highest entry or {@code NaN} if all entries are {@code NaN}.',\n      '@return the value of the maximal entry or {@code NaN} if all entries are {@code NaN}.',\n      '@return the value of the largest value or {@code NaN} if all entries are {@code NaN}.'\n    ]\n  },\n  {\n    'tag': '@param d Multiplication factor.',\n    'alternatives': [\n      '@param d Factor for multiplication.',\n      '@param d Scalar for multiplication.',\n      '@param d Multiplier.',\n      '@param d Scaling factor.',\n      '@param d Value for multiplication.'\n    ]\n  },\n  {\n    'tag': '@return {@code this} * {@code d}.',\n    'alternatives': [\n      '@return the result of multiplying {@code this} by {@code d}.',\n      '@return the product of {@code this} multiplied by {@code d}.',\n      '@return the value obtained by multiplying {@code this} with {@code d}.',\n      '@return the multiplication of {@code this} and {@code d}.',\n      '@return the outcome of {@code this} multiplied by {@code d}.'\n    ]\n  },\n  {\n    'tag': '@param d Value to be subtracted.',\n    'alternatives': [\n      '@param d Subtraction value.',\n      '@param d Value to subtract.',\n      '@param d Subtrahend.',\n      '@param d Value for subtraction.',\n      '@param d Value to be removed.'\n    ]\n  },\n  {\n    'tag': '@return {@code this} - {@code d}.',\n    'alternatives': [\n      '@return the result of subtracting {@code d} from {@code this}.',\n      '@return the subtraction of {@code d} from {@code this}.',\n      '@return the difference between {@code this} and {@code d}.',\n      '@return {@code this} minus {@code d}.',\n      '@return the value obtained by subtracting {@code d} from {@code this}.'\n    ]\n  },\n  {\n    'tag': '@param d Value to divide by.',\n    'alternatives': [\n      '@param d Divisor.',\n      '@param d Value for division.',\n      '@param d Quotient.',\n      '@param d Value to be divided.',\n      '@param d Value to divide into.'\n    ]\n  },\n  {\n    'tag': '@return {@code this} / {@code d}.',\n    'alternatives': [\n      '@return the result of dividing {@code this} by {@code d}.',\n      '@return the division of {@code this} by {@code d}.',\n      '@return the quotient of {@code this} divided by {@code d}.',\n      '@return the value obtained by dividing {@code this} by {@code d}.',\n      '@return the outcome of the division between {@code this} and {@code d}.'\n    ]\n  },\n  {\n    'tag': '@param v Vector with which outer product should be computed.',\n    'alternatives': [\n      '@param v Vector used to compute the outer product.',\n      '@param v Vector for the computation of the outer product.',\n      '@param v Vector for which the outer product needs to be calculated.',\n      '@param v Vector to be used in the outer product calculation.',\n      '@param v Vector to perform the outer product with.'\n    ]\n  },\n  {\n    'tag': '@return the matrix outer product between this instance and {@code v}.',\n    'alternatives': [\n      '@return the outer product matrix of this instance with {@code v}.',\n      '@return the result of calculating the outer product matrix between this instance and {@code v}.',\n      '@return the matrix obtained by computing the outer product between this instance and {@code v}.',\n      '@return the product matrix resulting from the outer product between this instance and {@code v}.',\n      '@return the outcome of the matrix outer product between this instance and {@code v}.'\n    ]\n  },\n  {\n    'tag': '@param v vector onto which instance must be projected.',\n    'alternatives': [\n      '@param v vector on which instance should be projected.',\n      '@param v vector for the projection of the instance.',\n      '@param v vector used for projecting the instance.',\n      '@param v vector to project the instance onto.',\n      '@param v vector to perform the projection onto.'\n    ]\n  },\n  {\n    'tag': '@return projection of the instance onto {@code v}.',\n    'alternatives': [\n      '@return the instance projected onto {@code v}.',\n      '@return the result of projecting the instance onto {@code v}.',\n      '@return the projection obtained by projecting the instance onto {@code v}.',\n      '@return the outcome of the projection of the instance onto {@code v}.',\n      '@return the value resulting from projecting the instance onto {@code v}.'\n    ]\n  }\n]"