"output=[\n  {\n    'tag': '@param field field to which the time and state vector elements belong',\n    'alternatives': [\n      '@param field field to which the elements of time and state vector belong',\n      '@param field field to which the elements of state vector and time belong',\n      '@param field field to which the elements of vector state and time belong',\n      '@param field field to which the elements of state and time vector belong',\n      '@param field field to which the elements of vector and time state belong'\n    ]\n  },\n  {\n    'tag': '@param forward integration direction indicator',\n    'alternatives': [\n      '@param indicator forward integration direction',\n      '@param direction forward integration indicator',\n      '@param indicator indicating forward integration direction',\n      '@param indicator indicating direction of forward integration',\n      '@param direction indicator for forward integration'\n    ]\n  },\n  {\n    'tag': '@param yDotK slopes at the intermediate points',\n    'alternatives': [\n      '@param slopes yDotK at the intermediate points',\n      '@param slopes at the intermediate points yDotK',\n      '@param intermediate points slopes yDotK',\n      '@param intermediate points yDotK slopes',\n      '@param yDotK at the intermediate slopes points'\n    ]\n  },\n  {\n    'tag': '@param globalPreviousState start of the global step',\n    'alternatives': [\n      '@param start of the global step globalPreviousState',\n      '@param beginning of the global step globalPreviousState',\n      '@param globalPreviousState, start of the global step',\n      '@param globalPreviousState, beginning of the global step',\n      '@param globalPreviousState as the start of the global step'\n    ]\n  },\n  {\n    'tag': '@param globalCurrentState end of the global step',\n    'alternatives': [\n      '@param end of the global step globalCurrentState',\n      '@param termination of the global step globalCurrentState',\n      '@param globalCurrentState, end of the global step',\n      '@param globalCurrentState, termination of the global step',\n      '@param globalCurrentState as the end of the global step'\n    ]\n  },\n  {\n    'tag': '@param softPreviousState start of the restricted step',\n    'alternatives': [\n      '@param start of the restricted step softPreviousState',\n      '@param beginning of the restricted step softPreviousState',\n      '@param softPreviousState as the start of the restricted step',\n      '@param softPreviousState, start of the restricted step',\n      '@param restricted step start softPreviousState'\n    ]\n  },\n  {\n    'tag': '@param softCurrentState end of the restricted step',\n    'alternatives': [\n      '@param end of the restricted step softCurrentState',\n      '@param termination of the restricted step softCurrentState',\n      '@param softCurrentState as the end of the restricted step',\n      '@param softCurrentState, end of the restricted step',\n      '@param restricted step end softCurrentState'\n    ]\n  },\n  {\n    'tag': '@param mapper equations mapper for the all equations',\n    'alternatives': [\n      '@param equations mapper for all the equations',\n      '@param equations mapper for every single equation',\n      '@param equations mapper for each of the equations',\n      '@param equations mapper for all equations',\n      '@param equations mapper for the equations'\n    ]\n  },\n  {\n    'tag': '@param step integration step',\n    'alternatives': [\n      '@param integration step step',\n      '@param step for integration',\n      '@param step of integration',\n      '@param integration step',\n      '@param step for the integration'\n    ]\n  },\n  {\n    'tag': '@param step integration step',\n    'alternatives': [\n      '@param integration step step',\n      '@param step for integration',\n      '@param step of integration',\n      '@param integration step',\n      '@param step for the integration'\n    ]\n  },\n  {\n    'tag': '@param nSteps number of steps of the multistep method\\n(excluding the one being computed)',\n    'alternatives': [\n      '@param number of multistep method steps\\n(excluding the one being computed) nSteps',\n      '@param nSteps number of steps for the multistep method\\n(excluding the one being computed)',\n      '@param number of steps for the multistep method nSteps\\n(excluding the one being computed)',\n      '@param nSteps number of steps of the multistep method, excluding the one being computed',\n      '@param number of steps of the multistep method nSteps, excluding the computed one'\n    ]\n  },\n  {\n    'tag': '@return Nordsieck transformer for the specified number of steps',\n    'alternatives': [\n      '@return Nordsieck transformer for the number of steps provided',\n      '@return transformer of Nordsieck for the given number of steps',\n      '@return Nordsieck transformer for the number of specified steps',\n      '@return transformer of Nordsieck for the specified number of steps',\n      '@return Nordsieck transformer for the steps specified'\n    ]\n  },\n  {\n    'tag': '@return number of steps of the method\\n(excluding the one being computed)',\n    'alternatives': [\n      '@return number of method steps\\n(excluding the one being computed)',\n      '@return number of steps for the method\\n(excluding the one being computed)',\n      '@return the number of method steps\\n(excluding the one being computed)',\n      '@return the count of steps of the method\\n(excluding the one being computed)',\n      '@return number of steps for the method, excluding the one being computed'\n    ]\n  },\n  {\n    'tag': '@param rows number of rows of the matrix',\n    'alternatives': [\n      '@param number of matrix rows rows',\n      '@param rows of the matrix',\n      '@param matrix rows',\n      '@param number of rows in the matrix',\n      '@param matrix row count rows'\n    ]\n  },\n  {\n    'tag': '@return P matrix',\n    'alternatives': [\n      '@return matrix P',\n      '@return the P matrix',\n      '@return matrix of P',\n      '@return P as matrix',\n      '@return matrix representing P'\n    ]\n  },\n  {\n    'tag': '@param raw input buffer',\n    'alternatives': [\n      '@param input buffer raw',\n      '@param raw buffer for input',\n      '@param buffer for input raw',\n      '@param raw input',\n      '@param buffer to store raw input'\n    ]\n  },\n  {\n    'tag': '@param encoded output buffer',\n    'alternatives': [\n      '@param encoded buffer for output',\n      '@param buffer for encoded output',\n      '@param output buffer encoded',\n      '@param encoded output',\n      '@param buffer to store encoded output'\n    ]\n  },\n  {\n    'tag': '@param raw input buffer',\n    'alternatives': [\n      '@param input buffer raw',\n      '@param raw buffer for input',\n      '@param buffer for input raw',\n      '@param raw input',\n      '@param buffer to store raw input'\n    ]\n  },\n  {\n    'tag': '@param encoded output buffer',\n    'alternatives': [\n      '@param encoded buffer for output',\n      '@param buffer for encoded output',\n      '@param output buffer encoded',\n      '@param encoded output',\n      '@param buffer to store encoded output'\n    ]\n  },\n  {\n    'tag': '@param serializableObject The object to encode',\n    'alternatives': [\n      '@param The object to encode serializableObject',\n      '@param The serializable object to encode',\n      '@param Object to encode serializableObject',\n      '@param The object serializable to encode',\n      '@param Serializable object to be encoded serializableObject'\n    ]\n  },\n  {\n    'tag': '@return The Base64-encoded object',\n    'alternatives': [\n      '@return Base64-encoded object',\n      '@return The object encoded in Base64',\n      '@return Base64-encoded version of the object',\n      '@return The object, encoded with Base64',\n      '@return The object represented in Base64 encoding'\n    ]\n  },\n  {\n    'tag': '@throws java.io.IOException if there is an error',\n    'alternatives': [\n      '@throws java.io.IOException in case of an error',\n      '@throws java.io.IOException if an error occurs',\n      '@throws if there is an error java.io.IOException',\n      '@throws java.io.IOException in the event of an error',\n      '@throws if an error occurs java.io.IOException'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if serializedObject is null',\n    'alternatives': [\n      '@throws if serializedObject is null NullPointerException',\n      '@throws NullPointerException if null serializedObject',\n      '@throws if serializedObject is null, NullPointerException',\n      '@throws NullPointerException if serializedObject equals null',\n      '@throws if null serializedObject NullPointerException'\n    ]\n  },\n  {\n    'tag': '@param serializableObject The object to encode',\n    'alternatives': [\n      '@param The object to encode serializableObject',\n      '@param The serializable object to encode',\n      '@param Object to encode serializableObject',\n      '@param The object serializable to encode',\n      '@param Serializable object to be encoded serializableObject'\n    ]\n  },\n  {\n    'tag': '@param options Specified options',\n    'alternatives': [\n      '@param Specified options options',\n      '@param options specified as input',\n      '@param specified options for input',\n      '@param options provided in input',\n      '@param input specified options options'\n    ]\n  }\n]"