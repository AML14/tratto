"[\n  {\n    'tag': '@param iterator1 the first iterators to use, not null',\n    'alternatives': [\n      '@param iterator1 the initial iterators to employ, not null',\n      '@param iterator1 the starting iterators to utilize, not null',\n      '@param iterator1 the first iterators to utilize, must not be null',\n      '@param iterator1 the initial iterators to be used, cannot be null',\n      '@param iterator1 the iterators to be used in the beginning, not null'\n    ]\n  },\n  {\n    'tag': '@param iterator2 the first iterators to use, not null',\n    'alternatives': [\n      '@param iterator2 the initial iterators to employ, not null',\n      '@param iterator2 the starting iterators to utilize, not null',\n      '@param iterator2 the first iterators to utilize, must not be null',\n      '@param iterator2 the initial iterators to be used, cannot be null',\n      '@param iterator2 the iterators to be used in the beginning, not null'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if iterators array is null or contains a null value',\n    'alternatives': [\n      '@throws NullPointerException if the array of iterators is null or contains a null value',\n      '@throws NullPointerException when the iterators array is null or contains a null value',\n      '@throws NullPointerException if the array of iterators is null or has a null value',\n      '@throws NullPointerException when the iterators array is null or has a null value',\n      '@throws NullPointerException if the array of iterators is null or includes a null value'\n    ]\n  },\n  {\n    'tag': '@param iterators the iterators to use, not null or empty or contain nulls',\n    'alternatives': [\n      '@param iterators the iterators to utilize, must not be null, empty, or contain nulls',\n      '@param iterators the iterators to be used, not null or empty, and should not include nulls',\n      '@param iterators the iterators to use, cannot be null or empty, and must not contain nulls',\n      '@param iterators the iterators to employ, not null or empty, and should not contain nulls',\n      '@param iterators the iterators to utilize, should be neither null nor empty, and must not contain nulls'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if iterators collection is null or contains a null',\n    'alternatives': [\n      '@throws NullPointerException if the collection of iterators is null or contains a null',\n      '@throws NullPointerException when the iterators collection is null or contains a null',\n      '@throws NullPointerException if the collection of iterators is null or has a null',\n      '@throws NullPointerException when the iterators collection is null or has a null',\n      '@throws NullPointerException if the collection of iterators is null or includes a null'\n    ]\n  },\n  {\n    'tag': '@param iterators the iterators to use, not null or empty or contain nulls',\n    'alternatives': [\n      '@param iterators the iterators to utilize, must not be null, empty, or contain nulls',\n      '@param iterators the iterators to be used, not null or empty, and should not include nulls',\n      '@param iterators the iterators to use, cannot be null or empty, and must not contain nulls',\n      '@param iterators the iterators to employ, not null or empty, and should not contain nulls',\n      '@param iterators the iterators to utilize, should be neither null nor empty, and must not contain nulls'\n    ]\n  },\n  {\n    'tag': '@param transformer the transformer to use, see above, null uses no effect transformer',\n    'alternatives': [\n      '@param transformer the transformer to be utilized, refer to the description above, null applies no transformation',\n      '@param transformer the transformer to employ, check the information above, null means no transformation will be performed',\n      '@param transformer the transformer to utilize, see above, null implies no transformation will be applied',\n      '@param transformer the transformer to be used, as described above, null indicates no transformation will take place',\n      '@param transformer the transformer to use, as explained above, null indicates no transformation will be applied'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if either parameter is null',\n    'alternatives': [\n      '@throws NullPointerException if any of the parameters is null',\n      '@throws NullPointerException when either parameter is null',\n      '@throws NullPointerException if either of the parameters is null',\n      '@throws NullPointerException when any of the parameters is null',\n      '@throws NullPointerException if one of the parameters is null'\n    ]\n  },\n  {\n    'tag': '@param iterator the iterator to use, not null',\n    'alternatives': [\n      '@param iterator the iterator to utilize, must not be null',\n      '@param iterator the iterator to be used, not null',\n      '@param iterator the iterator to employ, should not be null',\n      '@param iterator the iterator to utilize, cannot be null',\n      '@param iterator the iterator to be employed, must not be null'\n    ]\n  },\n  {\n    'tag': '@param transform the transform to use, not null',\n    'alternatives': [\n      '@param transform the transform to utilize, must not be null',\n      '@param transform the transform to be used, not null',\n      '@param transform the transform to employ, should not be null',\n      '@param transform the transform to utilize, cannot be null',\n      '@param transform the transform to be employed, must not be null'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if either parameter is null',\n    'alternatives': [\n      '@throws NullPointerException if any of the parameters is null',\n      '@throws NullPointerException when either parameter is null',\n      '@throws NullPointerException if either of the parameters is null',\n      '@throws NullPointerException when any of the parameters is null',\n      '@throws NullPointerException if one of the parameters is null'\n    ]\n  },\n  {\n    'tag': '@param iterator the iterator to use, not null',\n    'alternatives': [\n      '@param iterator the iterator to utilize, must not be null',\n      '@param iterator the iterator to be used, not null',\n      '@param iterator the iterator to employ, should not be null',\n      '@param iterator the iterator to utilize, cannot be null',\n      '@param iterator the iterator to be employed, must not be null'\n    ]\n  },\n  {\n    'tag': '@param predicate the predicate to use as a filter, not null',\n    'alternatives': [\n      '@param predicate the predicate to utilize for filtering, must not be null',\n      '@param predicate the predicate to be used as a filter, not null',\n      '@param predicate the predicate to employ as a filter, should not be null',\n      '@param predicate the predicate to utilize for filtering, cannot be null',\n      '@param predicate the predicate to be employed as a filter, must not be null'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if either parameter is null',\n    'alternatives': [\n      '@throws NullPointerException if any of the parameters is null',\n      '@throws NullPointerException when either parameter is null',\n      '@throws NullPointerException if either of the parameters is null',\n      '@throws NullPointerException when any of the parameters is null',\n      '@throws NullPointerException if one of the parameters is null'\n    ]\n  },\n  {\n    'tag': '@param listIterator the list iterator to use, not null',\n    'alternatives': [\n      '@param listIterator the list iterator to utilize, must not be null',\n      '@param listIterator the list iterator to be used, not null',\n      '@param listIterator the list iterator to employ, should not be null',\n      '@param listIterator the list iterator to utilize, cannot be null',\n      '@param listIterator the list iterator to be employed, must not be null'\n    ]\n  },\n  {\n    'tag': '@param predicate the predicate to use as a filter, not null',\n    'alternatives': [\n      '@param predicate the predicate to utilize for filtering, must not be null',\n      '@param predicate the predicate to be used as a filter, not null',\n      '@param predicate the predicate to employ as a filter, should not be null',\n      '@param predicate the predicate to utilize for filtering, cannot be null',\n      '@param predicate the predicate to be employed as a filter, must not be null'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if the collection is null',\n    'alternatives': [\n      '@throws NullPointerException if the collection is null',\n      '@throws NullPointerException if the collection is null',\n      '@throws NullPointerException if the collection is null',\n      '@throws NullPointerException if the collection is null',\n      '@throws NullPointerException if the collection is null'\n    ]\n  },\n  {\n    'tag': '@param coll the collection to iterate over, not null',\n    'alternatives': [\n      '@param coll the collection to utilize for iteration, must not be null',\n      '@param coll the collection to be used for iteration, not null',\n      '@param coll the collection to employ for iteration, should not be null',\n      '@param coll the collection to utilize for iteration, cannot be null',\n      '@param coll the collection to be employed for iteration, must not be null'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if the list is null',\n    'alternatives': [\n      '@throws NullPointerException if the list is null',\n      '@throws NullPointerException if the list is null',\n      '@throws NullPointerException if the list is null',\n      '@throws NullPointerException if the list is null',\n      '@throws NullPointerException if the list is null'\n    ]\n  },\n  {\n    'tag': '@param list the list to iterate over, not null',\n    'alternatives': [\n      '@param list the list to utilize for iteration, must not be null',\n      '@param list the list to be used for iteration, not null',\n      '@param list the list to employ for iteration, should not be null',\n      '@param list the list to utilize for iteration, cannot be null',\n      '@param list the list to be employed for iteration, must not be null'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if nodeList is null',\n    'alternatives': [\n      '@throws NullPointerException if nodeList is null',\n      '@throws NullPointerException if nodeList is null',\n      '@throws NullPointerException if nodeList is null',\n      '@throws NullPointerException if nodeList is null',\n      '@throws NullPointerException if nodeList is null'\n    ]\n  },\n  {\n    'tag': '@param nodeList the node list to use, may not be null',\n    'alternatives': [\n      '@param nodeList the node list to utilize, must not be null',\n      '@param nodeList the node list to be used, may not be null',\n      '@param nodeList the node list to employ, may not be null',\n      '@param nodeList the node list to utilize, cannot be null',\n      '@param nodeList the node list to be employed, must not be null'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if node is null',\n    'alternatives': [\n      '@throws NullPointerException if node is null',\n      '@throws NullPointerException if node is null',\n      '@throws NullPointerException if node is null',\n      '@throws NullPointerException if node is null',\n      '@throws NullPointerException if node is null'\n    ]\n  },\n  {\n    'tag': '@param node the node to use, may not be null',\n    'alternatives': [\n      '@param node the node to utilize, must not be null',\n      '@param node the node to be used, may not be null',\n      '@param node the node to employ, may not be null',\n      '@param node the node to utilize, cannot be null',\n      '@param node the node to be employed, must not be null'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if the iterator is null',\n    'alternatives': [\n      '@throws NullPointerException if the iterator is null',\n      '@throws NullPointerException if the iterator is null',\n      '@throws NullPointerException if the iterator is null',\n      '@throws NullPointerException if the iterator is null',\n      '@throws NullPointerException if the iterator is null'\n    ]\n  }\n]"