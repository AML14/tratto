"output = [\r\n  {\r\n    'tag': '@param n power to apply',\r\n    'alternatives': [\r\n      '@param n exponent to use',\r\n      '@param n the exponent value',\r\n      '@param n the power value',\r\n      '@param n the value of the power',\r\n      '@param n the value representing the power'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return this<sup>n</sup>',\r\n    'alternatives': [\r\n      '@return this raised to the power of n',\r\n      '@return the result of raising this to the power of n',\r\n      '@return the value of this exponentiated by n',\r\n      '@return this raised to the nth power',\r\n      '@return the value obtained when this is raised to the power of n'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param e exponent',\r\n    'alternatives': [\r\n      '@param e the power value',\r\n      '@param e the value of the exponent',\r\n      '@param e the value representing the exponent',\r\n      '@param e the number used as the exponent',\r\n      '@param e the value that determines the exponent'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return this<sup>e</sup>',\r\n    'alternatives': [\r\n      '@return the result of raising this to the power of e',\r\n      '@return this exponentiated by e',\r\n      '@return this raised to the exponent e',\r\n      '@return the value obtained when this is raised to the power of e',\r\n      '@return the value of this raised to the power of e'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws DimensionMismatchException if number of free parameters or orders are inconsistent',\r\n    'alternatives': [\r\n      '@throws DimensionMismatchException when the number of free parameters or orders is inconsistent',\r\n      '@throws DimensionMismatchException if there is inconsistency between the number of free parameters and orders',\r\n      '@throws DimensionMismatchException if the number of free parameters or orders do not match',\r\n      '@throws DimensionMismatchException if the number of free parameters or orders are not compatible',\r\n      '@throws DimensionMismatchException in case of inconsistency between the number of free parameters and orders'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return exponential of the instance',\r\n    'alternatives': [\r\n      '@return the exponentiation of the instance',\r\n      '@return the exponential value of the instance',\r\n      '@return the result of performing exponential function on the instance',\r\n      '@return the value obtained by exponentiating the instance',\r\n      '@return the value of the instance after being exponentiated'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return exponential minus one of the instance',\r\n    'alternatives': [\r\n      '@return the result of exponential function minus one for the instance',\r\n      '@return the value obtained by subtracting one from the exponential of the instance',\r\n      '@return the value of the instance after performing exponential function minus one',\r\n      '@return the exponential value of the instance minus one',\r\n      '@return the difference between the exponential value of the instance and one'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return logarithm of the instance',\r\n    'alternatives': [\r\n      '@return the logarithm of the instance',\r\n      '@return the result of taking the logarithm of the instance',\r\n      '@return the value obtained by applying logarithm function on the instance',\r\n      '@return the logarithmic value of the instance',\r\n      '@return the value of the instance after being logarithmically transformed'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return logarithm of one plus the instance',\r\n    'alternatives': [\r\n      '@return the result of taking logarithm function of one plus the instance',\r\n      '@return the value obtained by applying logarithm function to one plus the instance',\r\n      '@return the logarithmic value of one plus the instance',\r\n      '@return the value of the instance after adding one and then taking logarithm',\r\n      '@return the logarithm of the value obtained by adding one to the instance'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return cos(this)',\r\n    'alternatives': [\r\n      '@return the cosine of this',\r\n      '@return the result of taking the cosine of this',\r\n      '@return the value obtained by applying cosine function on this',\r\n      '@return the cosine value of this',\r\n      '@return the value of this after being cosine-transformed'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param vertex vertex in one of the graphs',\r\n    'alternatives': [\r\n      '@param vertex a vertex in one of the graphs',\r\n      '@param vertex the vertex belonging to one of the graphs',\r\n      '@param vertex the graph vertex to consider',\r\n      '@param vertex the vertex residing in one of the graphs',\r\n      '@param vertex the specific vertex in one of the graphs'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param forward if true, uses mapping from graph1 to graph2; if false, use\\nmapping from graph2 to graph1',\r\n    'alternatives': [\r\n      '@param forward determines whether to use the mapping from graph1 to graph2 or graph2 to graph1',\r\n      '@param forward specifies the mapping to be used: graph1 to graph2 if true, graph2 to graph1 if false',\r\n      '@param forward a boolean indicating whether to use the mapping from graph1 to graph2 or graph2 to graph1',\r\n      '@param forward indicates the mapping direction: from graph1 to graph2 if true, from graph2 to graph1 if false',\r\n      '@param forward if true, the mapping from graph1 to graph2 will be used; if false, the mapping from graph2 to graph1 will be used'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return corresponding vertex in other graph, or null if none',\r\n    'alternatives': [\r\n      '@return the corresponding vertex in the other graph, or null if not present',\r\n      '@return the vertex that corresponds to this vertex in the other graph, or null if no correspondence',\r\n      '@return the vertex in the other graph that corresponds to this vertex, or null if no corresponding vertex',\r\n      '@return the corresponding vertex present in the other graph, or null if not found',\r\n      '@return the vertex from the other graph that corresponds to this vertex, or null if there is no matching vertex'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param edge edge in one of the graphs',\r\n    'alternatives': [\r\n      '@param edge an edge in one of the graphs',\r\n      '@param edge the edge belonging to one of the graphs',\r\n      '@param edge the graph edge to consider',\r\n      '@param edge the edge residing in one of the graphs',\r\n      '@param edge the specific edge in one of the graphs'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return corresponding edge in other graph, or null if none',\r\n    'alternatives': [\r\n      '@return the corresponding edge in the other graph, or null if not present',\r\n      '@return the edge that corresponds to this edge in the other graph, or null if no correspondence',\r\n      '@return the edge in the other graph that corresponds to this edge, or null if no corresponding edge',\r\n      '@return the corresponding edge present in the other graph, or null if not found',\r\n      '@return the edge from the other graph that corresponds to this edge, or null if there is no matching edge'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param e the vertex event.',\r\n    'alternatives': [\r\n      '@param e the event for the vertex.',\r\n      '@param e the vertex event to process.',\r\n      '@param e the event related to the vertex.',\r\n      '@param e the event associated with the vertex.',\r\n      '@param e the vertex-specific event.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the traversed edge.',\r\n    'alternatives': [\r\n      '@return the edge that has been traversed.',\r\n      '@return the edge that was traversed.',\r\n      '@return the edge through which traversal occurred.',\r\n      '@return the edge that the traversal passed through.',\r\n      '@return the edge crossed during the traversal.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param eventSource the source of the event.',\r\n    'alternatives': [\r\n      '@param eventSource the event source.',\r\n      '@param eventSource the source emitting the event.',\r\n      '@param eventSource the source that triggered the event.',\r\n      '@param eventSource the source object of the event.',\r\n      '@param eventSource the object from which the event originated.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param edge the traversed edge.',\r\n    'alternatives': [\r\n      '@param edge the edge that has been traversed.',\r\n      '@param edge the edge that was traversed.',\r\n      '@param edge the edge through which traversal occurred.',\r\n      '@param edge the edge that the traversal passed through.',\r\n      '@param edge the edge crossed during the traversal.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param e the traversal event.',\r\n    'alternatives': [\r\n      '@param e the event representing the traversal.',\r\n      '@param e the traversal-related event.',\r\n      '@param e the event that occurred during traversal.',\r\n      '@param e the event associated with the traversal.',\r\n      '@param e the specific event for the traversal.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param e the edge traversal event.',\r\n    'alternatives': [\r\n      '@param e the event representing the traversal of an edge.',\r\n      '@param e the traversal-related event involving an edge.',\r\n      '@param e the event that occurred during edge traversal.',\r\n      '@param e the event associated with the traversal of an edge.',\r\n      '@param e the specific event for the traversal of an edge.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param e the vertex traversal event.',\r\n    'alternatives': [\r\n      '@param e the event representing the traversal of a vertex.',\r\n      '@param e the traversal-related event involving a vertex.',\r\n      '@param e the event that occurred during vertex traversal.',\r\n      '@param e the event associated with the traversal of a vertex.',\r\n      '@param e the specific event for the traversal of a vertex.'\r\n    ]\r\n  }\r\n]"