"[\n  {\n    'tag': '@param t current value of the independent <I>time</I> variable',\n    'alternatives': [\n      '@param t current value of the autonomous <I>time</I> parameter',\n      '@param t the current value of the independent <I>time</I> variable',\n      '@param t the current value of the independent <I>time</I> quantity',\n      '@param t value of the independent <I>time</I> variable at the present moment',\n      '@param t the current value of the independent <I>time</I> parameter'\n    ]\n  },\n  {\n    'tag': '@param y array containing the current value of the complete state vector',\n    'alternatives': [\n      '@param y array holding the current value of the complete state vector',\n      '@param y the array that stores the current value of the complete state vector',\n      '@param y array with the current value of the complete state vector',\n      '@param y the array that contains the current value of the complete state vector',\n      '@param y array that represents the current value of the complete state vector'\n    ]\n  },\n  {\n    'tag': '@return time derivative of the complete state vector',\n    'alternatives': [\n      '@return derivative of the complete state vector with respect to time',\n      '@return velocity of change of the complete state vector',\n      '@return rate of change of the complete state vector',\n      '@return time rate of change of the complete state vector',\n      '@return time derivative of the entire state vector'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException when the maximum number of functions evaluations is surpassed',\n      '@throws MaxCountExceededException if the function evaluations exceed the specified limit',\n      '@throws MaxCountExceededException if the count of function evaluations surpasses the maximum',\n      '@throws MaxCountExceededException when the number of evaluations of the function exceeds the maximum allowed count',\n      '@throws MaxCountExceededException if the number of function evaluations goes beyond the specified limit'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if arrays dimensions do not match equations settings',\n    'alternatives': [\n      '@throws DimensionMismatchException when the dimensions of the arrays do not correspond to the equation settings',\n      '@throws DimensionMismatchException if the dimensions of the arrays do not align with the equation settings',\n      '@throws DimensionMismatchException if the dimensions of the arrays do not match the equation configurations',\n      '@throws DimensionMismatchException when the arrays dimensions do not fit the equation settings',\n      '@throws DimensionMismatchException if the arrays dimensions do not coincide with the equation settings'\n    ]\n  },\n  {\n    'tag': '@param primary the primary set of differential equations to be integrated.',\n    'alternatives': [\n      '@param primary the main system of differential equations to be integrated.',\n      '@param primary the primary differential equations set to be integrated.',\n      '@param primary the principal set of differential equations to be integrated.',\n      '@param primary the primary system of differential equations that will be integrated.',\n      '@param primary the main set of differential equations that need to be integrated.'\n    ]\n  },\n  {\n    'tag': '@return dimension of the underlying FODE',\n    'alternatives': [\n      '@return size of the basic FODE',\n      '@return dimension of the underlying first-order differential equations',\n      '@return number of elements in the underlying FODE',\n      '@return dimension of the fundamental FODE',\n      '@return size of the underlying FODE'\n    ]\n  },\n  {\n    'tag': '@param y array containing the current value of the state vector',\n    'alternatives': [\n      '@param y array holding the current value of the state vector',\n      '@param y the array that stores the current value of the state vector',\n      '@param y array with the current value of the state vector',\n      '@param y the array that contains the current value of the state vector',\n      '@param y array that represents the current value of the state vector'\n    ]\n  },\n  {\n    'tag': '@param yDot placeholder array where to put the time derivative of the state vector',\n    'alternatives': [\n      '@param yDot array to store the time derivative of the state vector',\n      '@param yDot array that serves as a placeholder for the time derivative of the state vector',\n      '@param yDot placeholder array for the calculated time derivative of the state vector',\n      '@param yDot array where the time derivative of the state vector should be placed',\n      '@param yDot array acting as a placeholder for the time derivative of the state vector'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException when the maximum number of functions evaluations is surpassed',\n      '@throws MaxCountExceededException if the function evaluations exceed the specified limit',\n      '@throws MaxCountExceededException if the count of function evaluations surpasses the maximum',\n      '@throws MaxCountExceededException when the number of evaluations of the function exceeds the maximum allowed count',\n      '@throws MaxCountExceededException if the number of function evaluations goes beyond the specified limit'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if arrays dimensions do not match equations settings',\n    'alternatives': [\n      '@throws DimensionMismatchException when the dimensions of the arrays do not correspond to the equation settings',\n      '@throws DimensionMismatchException if the dimensions of the arrays do not align with the equation settings',\n      '@throws DimensionMismatchException if the dimensions of the arrays do not match the equation configurations',\n      '@throws DimensionMismatchException when the arrays dimensions do not fit the equation settings',\n      '@throws DimensionMismatchException if the arrays dimensions do not coincide with the equation settings'\n    ]\n  },\n  {\n    'tag': '@param ode original first order differential equations',\n    'alternatives': [\n      '@param ode initial first order differential equations',\n      '@param ode original set of first order differential equations',\n      '@param ode initial system of first order differential equations',\n      '@param ode original equations in first order differential form',\n      '@param ode initial set of first order differential equations'\n    ]\n  },\n  {\n    'tag': '@param t0 start value of the independent <i>time</i> variable',\n    'alternatives': [\n      '@param t0 initial value of the autonomous <i>time</i> parameter',\n      '@param t0 the starting value of the independent <i>time</i> variable',\n      '@param t0 the initial value of the independent <i>time</i> quantity',\n      '@param t0 value of the independent <i>time</i> variable at the beginning',\n      '@param t0 the initial value of the independent <i>time</i> parameter'\n    ]\n  },\n  {\n    'tag': '@param y0 array containing the start value of the state vector',\n    'alternatives': [\n      '@param y0 array holding the start value of the state vector',\n      '@param y0 the array that stores the start value of the state vector',\n      '@param y0 array with the start value of the state vector',\n      '@param y0 the array that contains the start value of the state vector',\n      '@param y0 array that represents the start value of the state vector'\n    ]\n  },\n  {\n    'tag': '@param t target time for the integration',\n    'alternatives': [\n      '@param t desired time for the integration',\n      '@param t the time at which the integration is aimed',\n      '@param t time value to which the integration is targeted',\n      '@param t target time point for the integration',\n      '@param t time to which the integration should reach'\n    ]\n  },\n  {\n    'tag': '@param equations equations to set',\n    'alternatives': [\n      '@param equations equations to define',\n      '@param equations equations to establish',\n      '@param equations equations to assign',\n      '@param equations equations to specify',\n      '@param equations equations to determine'\n    ]\n  },\n  {\n    'tag': '@return differential equations to integrate',\n    'alternatives': [\n      '@return equations of motion to be integrated',\n      '@return equations that need to be integrated',\n      '@return equations for integration',\n      '@return equations to be integrated',\n      '@return equations to undergo integration'\n    ]\n  },\n  {\n    'tag': '@return evaluations counter',\n    'alternatives': [\n      '@return counter of evaluations',\n      '@return number of evaluations performed',\n      '@return count of evaluations',\n      '@return evaluation tally',\n      '@return number of performed evaluations'\n    ]\n  },\n  {\n    'tag': '@return evaluations counter',\n    'alternatives': [\n      '@return counter of evaluations',\n      '@return number of evaluations performed',\n      '@return count of evaluations',\n      '@return evaluation tally',\n      '@return number of performed evaluations'\n    ]\n  },\n  {\n    'tag': '@param equations complete set of differential equations to integrate',\n    'alternatives': [\n      '@param equations total system of differential equations to integrate',\n      '@param equations full set of differential equations to be integrated',\n      '@param equations comprehensive collection of differential equations for integration',\n      '@param equations all encompassing set of differential equations to integrate',\n      '@param equations complete array of differential equations to be integrated'\n    ]\n  },\n  {\n    'tag': '@param t target time for the integration\\n(can be set to a value smaller than <code>t0</code> for backward integration)',\n    'alternatives': [\n      '@param t target time for the integration\\n(can be specified to a value less than <code>t0</code> for backward integration)',\n      '@param t target time for the integration\\n(can be chosen to a value smaller than <code>t0</code> for backward integration)',\n      '@param t target time for the integration\\n(can be set to a value less than <code>t0</code> to perform backward integration)',\n      '@param t target time for the integration\\n(can be assigned to a value smaller than <code>t0</code> for backward integration)',\n      '@param t target time for the integration\\n(can be adjusted to a value less than <code>t0</code> for backward integration)'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooSmallException if integration step is too small',\n    'alternatives': [\n      '@throws NumberIsTooSmallException when the integration step size is excessively small',\n      '@throws NumberIsTooSmallException if the integration step is below an acceptable threshold',\n      '@throws NumberIsTooSmallException if the integration step size is smaller than the minimum allowable value',\n      '@throws NumberIsTooSmallException when the integration step becomes too insignificant',\n      '@throws NumberIsTooSmallException if the integration step is too minor'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if the dimension of the complete state does not\\nmatch the complete equations sets dimension',\n    'alternatives': [\n      '@throws DimensionMismatchException if the dimension of the complete state does not\\ncoincide with the dimension of the complete equations sets',\n      '@throws DimensionMismatchException if the complete state dimension does not\\nalign with the dimension of the complete equations sets',\n      '@throws DimensionMismatchException if the dimension of the complete state does not\\nmatch the dimension of the complete equations sets',\n      '@throws DimensionMismatchException if the complete state dimension does not\\nfit the dimension of the complete equations sets',\n      '@throws DimensionMismatchException if the dimension of the complete state does not\\ncorrespond to the dimension of the complete equations sets'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException when the maximum number of functions evaluations is surpassed',\n      '@throws MaxCountExceededException if the function evaluations exceed the specified limit',\n      '@throws MaxCountExceededException if the count of function evaluations surpasses the maximum',\n      '@throws MaxCountExceededException when the number of evaluations of the function exceeds the maximum allowed count',\n      '@throws MaxCountExceededException if the number of function evaluations goes beyond the specified limit'\n    ]\n  }\n]"