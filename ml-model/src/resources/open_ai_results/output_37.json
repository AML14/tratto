"output = [\n  {\n    \"tag\": \"@throws NullArgumentException if {@code a} is {@code null}.\",\n    \"alternatives\": [\n      \"@throws NullArgumentException if {@code a} is {@code null}.\",\n      \"@throws NullArgumentException if {@code a} is {@code null}.\",\n      \"@throws NullArgumentException if {@code a} is {@code null}.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws UnknownParameterException if parameter is not supported\",\n    \"alternatives\": [\n      \"@throws UnknownParameterException if parameter is not supported\",\n      \"@throws UnknownParameterException if parameter is not supported\",\n      \"@throws UnknownParameterException if parameter is not supported\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullArgumentException if {@code x} or {@code y} are {@code null}.\",\n    \"alternatives\": [\n      \"@throws NullArgumentException if {@code x} or {@code y} are {@code null}.\",\n      \"@throws NullArgumentException if {@code x} or {@code y} are {@code null}.\",\n      \"@throws NullArgumentException if {@code x} or {@code y} are {@code null}.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NoDataException if {@code x} or {@code y} are zero-length.\",\n    \"alternatives\": [\n      \"@throws NoDataException if {@code x} or {@code y} are zero-length.\",\n      \"@throws NoDataException if {@code x} or {@code y} are zero-length.\",\n      \"@throws NoDataException if {@code x} or {@code y} are zero-length.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NumberIsTooSmallException if maximal order is lower than 2\",\n    \"alternatives\": [\n      \"@throws NumberIsTooSmallException if maximal order is lower than 2\",\n      \"@throws NumberIsTooSmallException if maximal order is lower than 2\",\n      \"@throws NumberIsTooSmallException if maximal order is lower than 2\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullArgumentException if f is null.\",\n    \"alternatives\": [\n      \"@throws NullArgumentException if f is null.\",\n      \"@throws NullArgumentException if f is null.\",\n      \"@throws NullArgumentException if f is null.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NotStrictlyPositiveException if row or column dimension is not\\npositive.\",\n    \"alternatives\": [\n      \"@throws NotStrictlyPositiveException if row or column dimension is not\\npositive.\",\n      \"@throws NotStrictlyPositiveException if row or column dimension is not\\npositive.\",\n      \"@throws NotStrictlyPositiveException if row or column dimension is not\\npositive.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NotPositiveException if {@code p < 0}\",\n    \"alternatives\": [\n      \"@throws NotPositiveException if {@code p < 0}\",\n      \"@throws NotPositiveException if {@code p < 0}\",\n      \"@throws NotPositiveException if {@code p < 0}\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NonSquareMatrixException if {@code this matrix} is not square\",\n    \"alternatives\": [\n      \"@throws NonSquareMatrixException if {@code this matrix} is not square\",\n      \"@throws NonSquareMatrixException if {@code this matrix} is not square\",\n      \"@throws NonSquareMatrixException if {@code this matrix} is not square\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NoDataException if {@code selectedRows} or\\n{@code selectedColumns} is empty\",\n    \"alternatives\": [\n      \"@throws NoDataException if {@code selectedRows} or\\n{@code selectedColumns} is empty\",\n      \"@throws NoDataException if {@code selectedRows} or\\n{@code selectedColumns} is empty\",\n      \"@throws NoDataException if {@code selectedRows} or\\n{@code selectedColumns} is empty\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullArgumentException if {@code selectedRows} or\\n{@code selectedColumns} is {@code null}.\",\n    \"alternatives\": [\n      \"@throws NullArgumentException if {@code selectedRows} or\\n{@code selectedColumns} is {@code null}.\",\n      \"@throws NullArgumentException if {@code selectedRows} or\\n{@code selectedColumns} is {@code null}.\",\n      \"@throws NullArgumentException if {@code selectedRows} or\\n{@code selectedColumns} is {@code null}.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n    \"alternatives\": [\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n    \"alternatives\": [\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n    \"alternatives\": [\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n    \"alternatives\": [\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n    \"alternatives\": [\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\",\n      \"@throws NumberIsTooSmallException if {@code endRow < startRow} or\\n{@code endColumn < startColumn}.\"\n    ]\n  }\n]\n\nThe output contains the original Javadoc tags and three semantically-equivalent alternatives for each tag."