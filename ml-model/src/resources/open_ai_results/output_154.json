"output = [\n  {\n    'tag': '@throws NotStrictlyPositiveException if {@code max <= 0}.',\n    'alternatives': [\n      '@throws NotStrictlyPositiveException if {@code max <= 0}.',\n      '@throws NotStrictlyPositiveException if {@code max <= 0}.',\n      '@throws NotStrictlyPositiveException if the value of {@code max} is less than or equal to zero.'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if {@code manager} is {@code null}',\n    'alternatives': [\n      '@throws NullArgumentException if {@code manager} is {@code null}',\n      '@throws NullArgumentException if {@code manager} is {@code null}',\n      '@throws NullArgumentException if the argument {@code manager} is null.'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if one of the parameters is {@code null}',\n    'alternatives': [\n      '@throws NullArgumentException if one of the parameters is {@code null}',\n      '@throws NullArgumentException if one of the parameters is {@code null}',\n      '@throws NullArgumentException if any of the parameters is null.'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if f is null.',\n    'alternatives': [\n      '@throws NullArgumentException if f is null.',\n      '@throws NullArgumentException if f is null.',\n      '@throws NullArgumentException if the variable f is null.'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooSmallException if maximal order is lower than 2',\n    'alternatives': [\n      '@throws NumberIsTooSmallException if maximal order is lower than 2',\n      '@throws NumberIsTooSmallException if the maximal order is less than 2',\n      '@throws NumberIsTooSmallException if the maximum order is below 2.'\n    ]\n  },\n  {\n    'tag': '@throws NotStrictlyPositiveException if {@code shape <= 0} or\\n{@code scale <= 0}.',\n    'alternatives': [\n      '@throws NotStrictlyPositiveException if {@code shape <= 0} or\\n{@code scale <= 0}.',\n      '@throws NotStrictlyPositiveException if {@code shape <= 0} or\\n{@code scale <= 0}.',\n      '@throws NotStrictlyPositiveException if either {@code shape} or {@code scale} is less than or equal to zero.'\n    ]\n  },\n  {\n    'tag': '@return {@code true}',\n    'alternatives': [\n      '@return {@code true}',\n      '@return {@code true}',\n      '@return the value true.'\n    ]\n  },\n  {\n    'tag': '@throws org.apache.commons.math3.exception.NotPositiveException if {@code n < 0}.',\n    'alternatives': [\n      '@throws org.apache.commons.math3.exception.NotPositiveException if {@code n < 0}.',\n      '@throws org.apache.commons.math3.exception.NotPositiveException if {@code n < 0}.',\n      '@throws org.apache.commons.math3.exception.NotPositiveException if the value of {@code n} is negative.'\n    ]\n  },\n  {\n    'tag': '@throws org.apache.commons.math3.exception.NumberIsTooLargeException if {@code k > n}.',\n    'alternatives': [\n      '@throws org.apache.commons.math3.exception.NumberIsTooLargeException if {@code k > n}.',\n      '@throws org.apache.commons.math3.exception.NumberIsTooLargeException if {@code k > n}.',\n      '@throws org.apache.commons.math3.exception.NumberIsTooLargeException if the value of {@code k} is greater than {@code n}.'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if {@code data} is null',\n    'alternatives': [\n      '@throws NullArgumentException if {@code data} is null',\n      '@throws NullArgumentException if {@code data} is null',\n      '@throws NullArgumentException if the argument {@code data} is null.'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if either {@code x} or {@code y} is null',\n    'alternatives': [\n      '@throws NullArgumentException if either {@code x} or {@code y} is null',\n      '@throws NullArgumentException if either {@code x} or {@code y} is null',\n      '@throws NullArgumentException if either the variable {@code x} or {@code y} is null.'\n    ]\n  },\n  {\n    'tag': '@return \\\\(P(D_n < d)\\\\)',\n    'alternatives': [\n      '@return \\\\(P(D_n < d)\\\\)',\n      '@return \\\\(P(D_n < d)\\\\)',\n      '@return the probability \\\\(P(D_n < d)\\\\).'\n    ]\n  }\n]"