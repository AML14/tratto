"output = [\n  {\n    'tag': '@param subtrahendRowIndex row index',\n    'alternatives': [\n      '@param subtrahendRowIndex index of the row',\n      '@param subtrahendRowIndex index of the row to subtract',\n      '@param subtrahendRowIndex position of the row in the matrix',\n      '@param subtrahendRowIndex index of the row to be used',\n      '@param subtrahendRowIndex the index of the row to subtract'\n    ]\n  },\n  {\n    'tag': '@param multiplier multiplication factor',\n    'alternatives': [\n      '@param multiplier factor for the multiplication',\n      '@param multiplier factor used for the multiplication',\n      '@param multiplier value to multiply with',\n      '@param multiplier factor of the multiplication',\n      '@param multiplier number to multiply by'\n    ]\n  },\n  {\n    'tag': '@return width of the tableau',\n    'alternatives': [\n      '@return width of the matrix',\n      '@return the width of the table',\n      '@return the width dimension of the tableau',\n      '@return the width of the board',\n      '@return the width size of the tableau'\n    ]\n  },\n  {\n    'tag': '@return height of the tableau',\n    'alternatives': [\n      '@return height of the matrix',\n      '@return the height of the table',\n      '@return the height dimension of the tableau',\n      '@return the height of the board',\n      '@return the height size of the tableau'\n    ]\n  },\n  {\n    'tag': '@param row row index',\n    'alternatives': [\n      '@param row index of the row',\n      '@param row index of the specific row',\n      '@param row position of the row',\n      '@param row index for the row',\n      '@param row identifier for the row'\n    ]\n  },\n  {\n    'tag': '@param column column index',\n    'alternatives': [\n      '@param column index of the column',\n      '@param column index of the specific column',\n      '@param column position of the column',\n      '@param column index for the column',\n      '@param column identifier for the column'\n    ]\n  },\n  {\n    'tag': '@return entry at (row, column)',\n    'alternatives': [\n      '@return value of the entry at (row, column)',\n      '@return element at position (row, column)',\n      '@return the value located at (row, column)',\n      '@return the entry stored at (row, column)',\n      '@return the content of the entry at (row, column)'\n    ]\n  },\n  {\n    'tag': '@param row row index',\n    'alternatives': [\n      '@param row index of the row',\n      '@param row index of the specific row',\n      '@param row position of the row',\n      '@param row index for the row',\n      '@param row identifier for the row'\n    ]\n  },\n  {\n    'tag': '@param column column index',\n    'alternatives': [\n      '@param column index of the column',\n      '@param column index of the specific column',\n      '@param column position of the column',\n      '@param column index for the column',\n      '@param column identifier for the column'\n    ]\n  },\n  {\n    'tag': '@param value for the entry',\n    'alternatives': [\n      '@param value to assign to the entry',\n      '@param entry value to be set',\n      '@param value to be stored in the entry',\n      '@param value for the specific entry',\n      '@param entry value for the assignment'\n    ]\n  },\n  {\n    'tag': '@return offset of the first slack variable',\n    'alternatives': [\n      '@return offset of the initial slack variable',\n      '@return the offset value for the first slack variable',\n      '@return the starting position of the slack variable',\n      '@return the offset index of the first slack variable',\n      '@return the initial offset of the slack variable'\n    ]\n  },\n  {\n    'tag': '@return offset of the first artificial variable',\n    'alternatives': [\n      '@return offset of the initial artificial variable',\n      '@return the offset value for the first artificial variable',\n      '@return the starting position of the artificial variable',\n      '@return the offset index of the first artificial variable',\n      '@return the initial offset of the artificial variable'\n    ]\n  },\n  {\n    'tag': '@return offset of the right hand side',\n    'alternatives': [\n      '@return offset of the RHS',\n      '@return the offset value for the RHS',\n      '@return the starting position of the right hand side',\n      '@return the offset index of the right hand side',\n      '@return the initial offset of the right hand side'\n    ]\n  },\n  {\n    'tag': '@return number of decision variables',\n    'alternatives': [\n      '@return count of decision variables',\n      '@return the total number of decision variables',\n      '@return the amount of decision variables',\n      '@return the number of variables for decision making',\n      '@return the quantity of decision variables'\n    ]\n  },\n  {\n    'tag': '@return original number of decision variables',\n    'alternatives': [\n      '@return initial count of decision variables',\n      '@return the original total number of decision variables',\n      '@return the starting amount of decision variables',\n      '@return the number of variables for decision making at the beginning',\n      '@return the quantity of decision variables in the original state'\n    ]\n  },\n  {\n    'tag': '@return number of slack variables',\n    'alternatives': [\n      '@return count of slack variables',\n      '@return the total number of slack variables',\n      '@return the amount of slack variables',\n      '@return the number of extra variables',\n      '@return the quantity of slack variables'\n    ]\n  },\n  {\n    'tag': '@return number of artificial variables',\n    'alternatives': [\n      '@return count of artificial variables',\n      '@return the total number of artificial variables',\n      '@return the amount of artificial variables',\n      '@return the number of extra variables',\n      '@return the quantity of artificial variables'\n    ]\n  },\n  {\n    'tag': '@param row the row index',\n    'alternatives': [\n      '@param row index of the row',\n      '@param row index of the specific row',\n      '@param row position of the row',\n      '@param row index for the row',\n      '@param row identifier for the row'\n    ]\n  },\n  {\n    'tag': '@return the reference to the underlying row data',\n    'alternatives': [\n      '@return the reference to the data of the row',\n      '@return the underlying row data reference',\n      '@return a reference to the data stored in the row',\n      '@return the reference to the row datum',\n      '@return the data reference of the row'\n    ]\n  },\n  {\n    'tag': '@return tableau data',\n    'alternatives': [\n      '@return matrix data',\n      '@return the data stored in the table',\n      '@return the table content',\n      '@return data of the tableau',\n      '@return the information in the tableau'\n    ]\n  },\n  {\n    'tag': '@param oos stream where object should be written',\n    'alternatives': [\n      '@param oos stream to write the object',\n      '@param oos output stream to store the object',\n      '@param oos stream for object serialization',\n      '@param oos stream to save the object',\n      '@param oos target stream for the object'\n    ]\n  },\n  {\n    'tag': '@throws IOException if object cannot be written to stream',\n    'alternatives': [\n      '@throws IOException in case object cannot be stored in the stream',\n      '@throws IOException if the object fails to be written to the stream',\n      '@throws IOException when object fails to be written to stream',\n      '@throws IOException if unable to write object to stream',\n      '@throws IOException if the write operation to the stream fails'\n    ]\n  },\n  {\n    'tag': '@param ois stream from which the object should be read',\n    'alternatives': [\n      '@param ois stream to read the object from',\n      '@param ois input stream to retrieve the object',\n      '@param ois stream for object deserialization',\n      '@param ois stream to load the object from',\n      '@param ois source stream for the object'\n    ]\n  },\n  {\n    'tag': '@throws ClassNotFoundException if a class in the stream cannot be found',\n    'alternatives': [\n      '@throws ClassNotFoundException in case class cannot be found in the stream',\n      '@throws ClassNotFoundException if a class is missing in the stream',\n      '@throws ClassNotFoundException when a class cannot be found in the stream',\n      '@throws ClassNotFoundException if unable to load class from stream',\n      '@throws ClassNotFoundException if the class cannot be located in the stream'\n    ]\n  },\n  {\n    'tag': '@throws IOException if object cannot be read from the stream',\n    'alternatives': [\n      '@throws IOException in case object cannot be retrieved from the stream',\n      '@throws IOException if the object fails to be read from the stream',\n      '@throws IOException when object fails to be read from the stream',\n      '@throws IOException if unable to read object from stream',\n      '@throws IOException if the read operation from the stream fails'\n    ]\n  }\n]"