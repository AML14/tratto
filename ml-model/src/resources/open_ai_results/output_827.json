"output = [\n  {\n    'tag': '@return {@code this} + {@code m}.',\n    'alternatives': [\n      '@return the sum of {@code this} and {@code m}.',\n      '@return the result of adding {@code this} and {@code m}.',\n      '@return the addition of {@code this} and {@code m}.',\n      '@return the value obtained by adding {@code this} and {@code m}.',\n      '@return the sum of {@code this} and {@code m} will be returned.'\n    ]\n  },\n  {\n    'tag': '@throws MatrixDimensionMismatchException if {@code m} is not the same\\nsize as {@code this}.',\n    'alternatives': [\n      '@throws MatrixDimensionMismatchException when the size of {@code m} is different from {@code this}.',\n      '@throws MatrixDimensionMismatchException if the size of {@code m} does not match {@code this}.',\n      '@throws MatrixDimensionMismatchException if {@code m} and {@code this} have different sizes.',\n      '@throws MatrixDimensionMismatchException if the dimensions of {@code m} are not equal to {@code this}.',\n      '@throws MatrixDimensionMismatchException if {@code m} is not the same size as {@code this} matrix.'\n    ]\n  },\n  {\n    'tag': '@param m Matrix to be subtracted.',\n    'alternatives': [\n      '@param m Subtrahend matrix.',\n      '@param m Matrix that will be subtracted.',\n      '@param m Matrix to subtract.',\n      '@param m The matrix that will be subtracted.',\n      '@param m The matrix from which to subtract.'\n    ]\n  },\n  {\n    'tag': '@return {@code this} - {@code m}.',\n    'alternatives': [\n      '@return the result of subtracting {@code m} from {@code this}.',\n      '@return the subtraction of {@code m} from {@code this}.',\n      '@return the value obtained by subtracting {@code m} from {@code this}.',\n      '@return the difference between {@code this} and {@code m}.',\n      '@return the result of {@code this} minus {@code m}.'\n    ]\n  },\n  {\n    'tag': '@throws MatrixDimensionMismatchException if {@code m} is not the same\\nsize as {@code this}.',\n    'alternatives': [\n      '@throws MatrixDimensionMismatchException when the size of {@code m} is different from {@code this}.',\n      '@throws MatrixDimensionMismatchException if the size of {@code m} does not match {@code this}.',\n      '@throws MatrixDimensionMismatchException if {@code m} and {@code this} have different sizes.',\n      '@throws MatrixDimensionMismatchException if the dimensions of {@code m} are not equal to {@code this}.',\n      '@throws MatrixDimensionMismatchException if {@code m} is not the same size as {@code this} matrix.'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooLargeException if {@code m} is an\\n{@code OpenMapRealMatrix}, and the total number of entries of the product\\nis larger than {@code Integer.MAX_VALUE}.',\n    'alternatives': [\n      '@throws NumberIsTooLargeException if the total number of entries in the product of {@code this} and {@code m} is larger than {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the product of {@code this} and {@code m} has a total number of entries greater than {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the result of multiplying {@code this} and {@code m} contains more entries than {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the number of entries in the product of {@code this} and {@code m} exceeds {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the total number of entries in the matrix product exceeds {@code Integer.MAX_VALUE}.'\n    ]\n  },\n  {\n    'tag': '@param m Matrix to postmultiply by.',\n    'alternatives': [\n      '@param m Matrix to be multiplied after {@code this}.',\n      '@param m Matrix that will be multiplied after {@code this}.',\n      '@param m Matrix for post-multiplication.',\n      '@param m The matrix that will be postmultiplied.',\n      '@param m The matrix that will be applied after {@code this}.'\n    ]\n  },\n  {\n    'tag': '@return {@code this} * {@code m}.',\n    'alternatives': [\n      '@return the result of multiplying {@code this} by {@code m}.',\n      '@return the product of {@code this} and {@code m}.',\n      '@return the value obtained by multiplying {@code this} and {@code m}.',\n      '@return the multiplication of {@code this} and {@code m}.',\n      '@return the result of {@code this} multiplied by {@code m}.'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if the number of rows of {@code m}\\ndiffer from the number of columns of {@code this} matrix.',\n    'alternatives': [\n      '@throws DimensionMismatchException if the number of rows in {@code m} is different from the number of columns in {@code this} matrix.',\n      '@throws DimensionMismatchException when the row count of {@code m} does not match the column count of {@code this} matrix.',\n      '@throws DimensionMismatchException if the number of rows in {@code m} is not equal to the number of columns in {@code this} matrix.',\n      '@throws DimensionMismatchException if the dimensions of {@code m} and {@code this} matrix are incompatible.',\n      '@throws DimensionMismatchException if the row count of {@code m} differs from the column count of {@code this} matrix.'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooLargeException if the total number of entries of the\\nproduct is larger than {@code Integer.MAX_VALUE}.',\n    'alternatives': [\n      '@throws NumberIsTooLargeException if the product of the matrices has a total number of entries greater than {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the result of the matrix product exceeds {@code Integer.MAX_VALUE} entries.',\n      '@throws NumberIsTooLargeException if the total number of entries in the product of the matrices is larger than {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the number of entries in the matrix product exceeds {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the total number of entries in the product of the matrices is greater than {@code Integer.MAX_VALUE}.'\n    ]\n  },\n  {\n    'tag': '@param row row index of the matrix element',\n    'alternatives': [\n      '@param row The index of the row of the matrix element.',\n      '@param row The index of the row for the matrix element.',\n      '@param row The row index of the element in the matrix.',\n      '@param row The index of the matrix element row.',\n      '@param row The row index of the matrix element.'\n    ]\n  },\n  {\n    'tag': '@param column column index of the matrix element',\n    'alternatives': [\n      '@param column The index of the column of the matrix element.',\n      '@param column The index of the column for the matrix element.',\n      '@param column The column index of the element in the matrix.',\n      '@param column The index of the matrix element column.',\n      '@param column The column index of the matrix element.'\n    ]\n  },\n  {\n    'tag': '@return key within the map to access the matrix element',\n    'alternatives': [\n      '@return the map key to access the matrix element.',\n      '@return the key used to access the matrix element within the map.',\n      '@return the key in the map that corresponds to the matrix element.',\n      '@return the key that can be used to retrieve the matrix element in the map.',\n      '@return the map key that corresponds to the matrix element.'\n    ]\n  },\n  {\n    'tag': '@param rowDimension Number of rows of the matrix.',\n    'alternatives': [\n      '@param rowDimension The number of rows in the matrix.',\n      '@param rowDimension The number of rows of the matrix.',\n      '@param rowDimension The total count of rows in the matrix.',\n      '@param rowDimension The dimension of the matrix in the row direction.',\n      '@param rowDimension The size of the matrix in the row dimension.'\n    ]\n  },\n  {\n    'tag': '@param columnDimension Number of columns of the matrix.',\n    'alternatives': [\n      '@param columnDimension The number of columns in the matrix.',\n      '@param columnDimension The number of columns of the matrix.',\n      '@param columnDimension The total count of columns in the matrix.',\n      '@param columnDimension The dimension of the matrix in the column direction.',\n      '@param columnDimension The size of the matrix in the column dimension.'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooLargeException if the total number of entries of the\\nmatrix is larger than {@code Integer.MAX_VALUE}.',\n    'alternatives': [\n      '@throws NumberIsTooLargeException if the total number of entries in the matrix is greater than {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the matrix has more entries than {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the number of entries in the matrix exceeds {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the total count of entries in the matrix is larger than {@code Integer.MAX_VALUE}.',\n      '@throws NumberIsTooLargeException if the total number of elements in the matrix is greater than {@code Integer.MAX_VALUE}.'\n    ]\n  },\n  {\n    'tag': '@param matrix matrix to copy.',\n    'alternatives': [\n      '@param matrix The matrix that will be copied.',\n      '@param matrix The matrix to be duplicated.',\n      '@param matrix The matrix that needs to be replicated.',\n      '@param matrix The original matrix to be cloned.',\n      '@param matrix The matrix that will be recreated.'\n    ]\n  },\n  {\n    'tag': '@return the U matrix',\n    'alternatives': [\n      '@return the matrix U.',\n      '@return the resulting matrix U.',\n      '@return the U-type matrix.',\n      '@return the matrix U will be returned.',\n      '@return the matrix representing U will be returned.'\n    ]\n  },\n  {\n    'tag': '@return the B matrix',\n    'alternatives': [\n      '@return the matrix B.',\n      '@return the resulting matrix B.',\n      '@return the B-type matrix.',\n      '@return the matrix B will be returned.',\n      '@return the matrix representing B will be returned.'\n    ]\n  },\n  {\n    'tag': '@return the V matrix',\n    'alternatives': [\n      '@return the matrix V.',\n      '@return the resulting matrix V.',\n      '@return the V-type matrix.',\n      '@return the matrix V will be returned.',\n      '@return the matrix representing V will be returned.'\n    ]\n  },\n  {\n    'tag': '@return the main diagonal elements of the B matrix',\n    'alternatives': [\n      '@return the main diagonal elements of matrix B.',\n      '@return the diagonal entries for matrix B.',\n      '@return the primary diagonal elements of matrix B.',\n      '@return the elements on the main diagonal of matrix B.',\n      '@return the elements that lie on the diagonal of matrix B.'\n    ]\n  },\n  {\n    'tag': '@return the main diagonal elements of the B matrix',\n    'alternatives': [\n      '@return the main diagonal elements of matrix B.',\n      '@return the diagonal entries for matrix B.',\n      '@return the primary diagonal elements of matrix B.',\n      '@return the elements on the main diagonal of matrix B.',\n      '@return the elements that lie on the diagonal of matrix B.'\n    ]\n  },\n  {\n    'tag': '@return the secondary diagonal elements of the B matrix',\n    'alternatives': [\n      '@return the secondary diagonal elements of matrix B.',\n      '@return the anti-diagonal entries for matrix B.',\n      '@return the non-primary diagonal elements of matrix B.',\n      '@return the elements on the secondary diagonal of matrix B.',\n      '@return the elements that lie on the anti-diagonal of matrix B.'\n    ]\n  },\n  {\n    'tag': '@return true if the matrix is transformed to upper bi-diagonal',\n    'alternatives': [\n      '@return true if the matrix is converted to upper bi-diagonal form.',\n      '@return true if the matrix has been changed to upper bi-diagonal.',\n      '@return true if the matrix has been transformed into upper bi-diagonal.',\n      '@return true if the matrix is modified to upper bi-diagonal.',\n      '@return true if the matrix is in the upper bi-diagonal form.'\n    ]\n  },\n  {\n    'tag': '@param matrix the matrix to transform.',\n    'alternatives': [\n      '@param matrix The matrix that will undergo transformation.',\n      '@param matrix The matrix to be converted.',\n      '@param matrix The matrix to be changed.',\n      '@param matrix The matrix to be transformed.',\n      '@param matrix The matrix that will be modified.'\n    ]\n  }\n]"