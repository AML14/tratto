"output = [\n  {\n    'tag': '@return 2-dimensional array of entries',\n    'alternatives': [\n      '@return array of entries in a 2-dimensional format',\n      '@return entries arranged in a 2-dimensional array',\n      '@return array containing entries in a 2-dimensional structure',\n      '@return array with a 2-dimensional arrangement of entries',\n      '@return 2D array containing the entries'\n    ]\n  },\n  {\n    'tag': '@return norm',\n    'alternatives': [\n      '@return magnitude',\n      '@return measure',\n      '@return value of the norm',\n      '@return norm value',\n      '@return calculated norm'\n    ]\n  },\n  {\n    'tag': '@return norm',\n    'alternatives': [\n      '@return magnitude',\n      '@return measure',\n      '@return value of the norm',\n      '@return norm value',\n      '@return calculated norm'\n    ]\n  },\n  {\n    'tag': '@param startRow Initial row index',\n    'alternatives': [\n      '@param startRow Index of the initial row',\n      '@param startRow Row index to start from',\n      '@param startRow Index of the starting row',\n      '@param startRow Initial index of the row',\n      '@param startRow Row index at the beginning'\n    ]\n  },\n  {\n    'tag': '@param endRow Final row index (inclusive)',\n    'alternatives': [\n      '@param endRow Index of the final row (inclusive)',\n      '@param endRow Last row index (inclusive)',\n      '@param endRow Final index of the row (inclusive)',\n      '@param endRow Index of the row to end (inclusive)',\n      '@param endRow Row index at the end (inclusive)'\n    ]\n  },\n  {\n    'tag': '@param startColumn Initial column index',\n    'alternatives': [\n      '@param startColumn Index of the initial column',\n      '@param startColumn Column index to start from',\n      '@param startColumn Index of the starting column',\n      '@param startColumn Initial index of the column',\n      '@param startColumn Column index at the beginning'\n    ]\n  },\n  {\n    'tag': '@param endColumn Final column index (inclusive)',\n    'alternatives': [\n      '@param endColumn Index of the final column (inclusive)',\n      '@param endColumn Last column index (inclusive)',\n      '@param endColumn Final index of the column (inclusive)',\n      '@param endColumn Index of the column to end (inclusive)',\n      '@param endColumn Column index at the end (inclusive)'\n    ]\n  },\n  {\n    'tag': '@return The subMatrix containing the data of the\\nspecified rows and columns.',\n    'alternatives': [\n      '@return SubMatrix that stores the data of the specified rows and columns.',\n      '@return subMatrix with the data of the specified rows and columns.',\n      '@return The subset of the matrix that contains the data from the specified rows and columns.',\n      '@return Matrix containing the data of the specified rows and columns as a subMatrix.',\n      '@return SubMatrix that includes the data of the specified rows and columns.'\n    ]\n  },\n  {\n    'tag': '@throws OutOfRangeException if the indices are not valid.',\n    'alternatives': [\n      '@throws OutOfRangeException in case of invalid indices.',\n      '@throws OutOfRangeException if the provided indices are not valid.',\n      '@throws OutOfRangeException when the indices are out of range.',\n      '@throws OutOfRangeException if the indices provided are invalid.',\n      '@throws OutOfRangeException if the indices exceed the valid range.'\n    ]\n  },\n  {\n    'tag': '@param selectedRows Array of row indices.',\n    'alternatives': [\n      '@param selectedRows List of row indices.',\n      '@param selectedRows Array containing the indices of rows.',\n      '@param selectedRows List of indices indicating rows.',\n      '@param selectedRows Array that holds the row indices.',\n      '@param selectedRows Array of integers representing row indices.'\n    ]\n  },\n  {\n    'tag': '@return minimum spanning-tree edges set',\n    'alternatives': [\n      '@return set of edges for the minimum spanning tree',\n      '@return set of edges forming the minimum spanning tree',\n      '@return edges that make up the minimum spanning tree',\n      '@return set of edges comprising the minimum spanning tree',\n      '@return set of edges representing the minimum spanning tree'\n    ]\n  },\n  {\n    'tag': '@return minimum spanning-tree total weight',\n    'alternatives': [\n      '@return total weight of the minimum spanning tree',\n      '@return weight of the minimum spanning tree',\n      '@return total weight assigned to the minimum spanning tree',\n      '@return weight of the spanning tree that has the minimum weight',\n      '@return total weight of the spanning tree with the least weight'\n    ]\n  },\n  {\n    'tag': '@return weight of a matching found',\n    'alternatives': [\n      '@return weight of a discovered matching',\n      '@return weight obtained from a found matching',\n      '@return weight associated with a matching that is found',\n      '@return weight assigned to a matching that is found',\n      '@return weight of a matching that has been found'\n    ]\n  },\n  {\n    'tag': '@return the graph inspected by this StrongConnectivityAlgorithm',\n    'alternatives': [\n      '@return the graph being analyzed by this StrongConnectivityAlgorithm',\n      '@return the graph under investigation by this StrongConnectivityAlgorithm',\n      '@return the graph that is examined by this StrongConnectivityAlgorithm',\n      '@return the graph being inspected by this StrongConnectivityAlgorithm',\n      '@return the graph that is being explored by this StrongConnectivityAlgorithm'\n    ]\n  },\n  {\n    'tag': '@return true if the graph is strongly connected, false otherwise',\n    'alternatives': [\n      '@return true if the graph exhibits strong connectivity, false otherwise',\n      '@return true if the graph demonstrates strong connectedness, false otherwise',\n      '@return true if the graph shows strong connectivity, false otherwise',\n      '@return true if the graph has strong connectivity, false otherwise',\n      '@return true if the graph possesses strong connectedness, false otherwise'\n    ]\n  },\n  {\n    'tag': '@return <code>List</code> of <code>Set</code> s containing the strongly\\nconnected components',\n    'alternatives': [\n      '@return <code>List</code> of <code>Set</code> objects that hold the strongly connected components',\n      '@return <code>List</code> of <code>Set</code> containers containing the strongly connected components',\n      '@return <code>List</code> of <code>Set</code> s that store the strongly connected components',\n      '@return <code>List</code> of <code>Set</code> instances encompassing the strongly connected components',\n      '@return <code>List</code> of <code>Set</code> s representing the strongly connected components'\n    ]\n  },\n  {\n    'tag': '@return a list of subgraphs representing the strongly connected\\ncomponents',\n    'alternatives': [\n      '@return a list of subgraphs that depict the strongly connected components',\n      '@return a list of subgraphs showing the strongly connected components',\n      '@return a list of subgraphs representing the components with strong connectivity',\n      '@return a list of subgraphs that represent the strongly connected components',\n      '@return a list of subgraphs containing the strongly connected components'\n    ]\n  },\n  {\n    'tag': '@param source source of the flow inside the network',\n    'alternatives': [\n      '@param source starting point of the flow in the network',\n      '@param source node where the flow inside the network originates',\n      '@param source node that acts as the source of the flow in the network',\n      '@param source point from where the flow begins in the network',\n      '@param source origin of the flow within the network'\n    ]\n  },\n  {\n    'tag': '@param sink sink of the flow inside the network',\n    'alternatives': [\n      '@param sink endpoint of the flow in the network',\n      '@param sink node where the flow inside the network terminates',\n      '@param sink node that serves as the sink of the flow in the network',\n      '@param sink point where the flow ends in the network',\n      '@param sink termination point of the flow within the network'\n    ]\n  },\n  {\n    'tag': '@return maximum flow',\n    'alternatives': [\n      '@return the maximum amount of flow',\n      '@return maximum flow value',\n      '@return the maximum flow of the network',\n      '@return value representing the maximum flow',\n      '@return maximum flow amount'\n    ]\n  },\n  {\n    'tag': '@param vertexLabels Map that gives a label for each vertex.',\n    'alternatives': [\n      '@param vertexLabels Map providing a label for each vertex.',\n      '@param vertexLabels Mapping that assigns a label to each vertex.',\n      '@param vertexLabels Map that maps each vertex to its label.',\n      '@param vertexLabels Key-value pairs that associate a label with each vertex.',\n      '@param vertexLabels Map containing the labels for each vertex.'\n    ]\n  },\n  {\n    'tag': '@return Vertex with the maximal label.',\n    'alternatives': [\n      '@return Vertex having the highest label.',\n      '@return Vertex that possesses the maximum label.',\n      '@return Vertex with the greatest label.',\n      '@return Vertex with the highest assigned label.',\n      '@return Vertex that has the largest label.'\n    ]\n  },\n  {\n    'tag': \"@param k vertex' label\",\n    'alternatives': [\n      \"@param k label of the vertex\",\n      \"@param k vertex's assigned label\",\n      \"@param k label associated with the vertex\",\n      \"@param k label of the specified vertex\",\n      \"@param k vertex label to consider\"\n    ]\n  },\n  {\n    'tag': '@param v the vertex',\n    'alternatives': [\n      '@param v the specified vertex',\n      '@param v vertex to consider',\n      '@param v the given vertex',\n      '@param v vertex being referred to',\n      '@param v the designated vertex'\n    ]\n  },\n  {\n    'tag': '@param r the reach structure.',\n    'alternatives': [\n      '@param r the specified reach structure.',\n      '@param r reach structure to use',\n      '@param r the provided reach structure.',\n      '@param r structure to determine reachability.',\n      '@param r the designated reach structure.'\n    ]\n  }\n]"