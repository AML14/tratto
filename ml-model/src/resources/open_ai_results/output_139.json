"[\n  {\n    \"tag\": \"@throws UnsupportedOperationException always\",\n    \"alternatives\": [\n      \"@throws UnsupportedOperationException always\",\n      \"@throws UnsupportedOperationException always\",\n      \"@throws UnsupportedOperationException always\",\n      \"@throws UnsupportedOperationException always\",\n      \"@throws UnsupportedOperationException always\"\n    ]\n  },\n  {\n    \"tag\": \"@return the <code>none</code> predicate\",\n    \"alternatives\": [\n      \"@return the <code>none</code> predicate\",\n      \"@return the <code>none</code> predicate\",\n      \"@return the <code>none</code> predicate\",\n      \"@return the <code>none</code> predicate\",\n      \"@return the <code>none</code> predicate\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NullPointerException if any predicate in the collection is null\",\n    \"alternatives\": [\n      \"@throws NullPointerException if any predicate in the collection is null\",\n      \"@throws NullPointerException if any predicate in the collection is null\",\n      \"@throws NullPointerException if any predicate in the collection is null\",\n      \"@throws NullPointerException if any predicate in the collection is null\",\n      \"@throws NullPointerException if any predicate in the collection is null\"\n    ]\n  },\n  {\n    \"tag\": \"@param <T> the type that the predicate queries\",\n    \"alternatives\": [\n      \"@param <T> the type that the predicate queries\",\n      \"@param <T> the type that the predicate queries\",\n      \"@param <T> the type that the predicate queries\",\n      \"@param <T> the type that the predicate queries\",\n      \"@param <T> the type that the predicate queries\"\n    ]\n  },\n  {\n    \"tag\": \"@param transformer the transformer to call first\",\n    \"alternatives\": [\n      \"@param transformer the transformer to call first\",\n      \"@param transformer the transformer to call first\",\n      \"@param transformer the transformer to call first\",\n      \"@param transformer the transformer to call first\",\n      \"@param transformer the transformer to call first\"\n    ]\n  },\n  {\n    \"tag\": \"@param predicate the predicate to call with the result of the transform\",\n    \"alternatives\": [\n      \"@param predicate the predicate to call with the result of the transform\",\n      \"@param predicate the predicate to call with the result of the transform\",\n      \"@param predicate the predicate to call with the result of the transform\",\n      \"@param predicate the predicate to call with the result of the transform\",\n      \"@param predicate the predicate to call with the result of the transform\"\n    ]\n  },\n  {\n    \"tag\": \"@return the total size of the map\",\n    \"alternatives\": [\n      \"@return the total size of the map\",\n      \"@return the total size of the map\",\n      \"@return the total size of the map\",\n      \"@return the total size of the map\",\n      \"@return the total size of the map\"\n    ]\n  },\n  {\n    \"tag\": \"@return {@code true} if this map contains no key-value mappings\",\n    \"alternatives\": [\n      \"@return {@code true} if this map contains no key-value mappings\",\n      \"@return {@code true} if this map contains no key-value mappings\",\n      \"@return {@code true} if this map contains no key-value mappings\",\n      \"@return {@code true} if this map contains no key-value mappings\",\n      \"@return {@code true} if this map contains no key-value mappings\"\n    ]\n  },\n  {\n    \"tag\": \"@param key key whose presence in this map is to be tested\",\n    \"alternatives\": [\n      \"@param key key whose presence in this map is to be tested\",\n      \"@param key key whose presence in this map is to be tested\",\n      \"@param key key whose presence in this map is to be tested\",\n      \"@param key key whose presence in this map is to be tested\",\n      \"@param key key whose presence in this map is to be tested\"\n    ]\n  }\n]"