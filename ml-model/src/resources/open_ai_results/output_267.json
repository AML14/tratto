"[\n    {\n        'tag': '@param y0 initial value of the state vector at t0',\n        'alternatives': [\n            '@param y0 initial value of the state vector at time t0',\n            '@param y0 initial value of the state vector at start time',\n            '@param y0 initial value of the state vector at the beginning'\n        ]\n    },\n    {\n        'tag': '@param t target time for the integration\\n(can be set to a value smaller than {@code t0} for backward integration)',\n        'alternatives': [\n            '@param t target time for the integration\\n(can be set to a smaller value than {@code t0} for backward integration)',\n            '@param t target time for integrating\\n(possible to set a value smaller than {@code t0} for backward integration)',\n            '@param t target time for the integration\\n(can be adjusted to a smaller value than {@code t0} for backward integration)'\n        ]\n    },\n    {\n        'tag': '@return state vector at {@code t}',\n        'alternatives': [\n            '@return state vector at time {@code t}',\n            '@return vector of states at {@code t}',\n            '@return the current state vector at {@code t}'\n        ]\n    },\n    {\n        'tag': '@param name name of the method',\n        'alternatives': [\n            '@param name method name',\n            '@param name method identifier',\n            '@param name identifier of the method'\n        ]\n    },\n    {\n        'tag': '@param c time steps from Butcher array (without the first zero)',\n        'alternatives': [\n            '@param c computed time steps from Butcher array (excluding the first zero)',\n            '@param c time increments from Butcher array (excluding the initial zero)',\n            '@param c time steps obtained from Butcher array (excluding the first zero)'\n        ]\n    },\n    {\n        'tag': '@param a internal weights from Butcher array (without the first empty row)',\n        'alternatives': [\n            '@param a internal coefficients from Butcher array (excluding the first empty row)',\n            '@param a internal values from Butcher array (excluding the initial empty row)',\n            '@param a internal factors from Butcher array (excluding the first empty row)'\n        ]\n    },\n    {\n        'tag': '@param b propagation weights for the high order method from Butcher array',\n        'alternatives': [\n            '@param b weighting factors for the high order method from Butcher array',\n            '@param b weights used for propagation in the high order method from Butcher array',\n            '@param b propagation coefficients for the high order method from Butcher array'\n        ]\n    },\n    {\n        'tag': '@param prototype prototype of the step interpolator to use',\n        'alternatives': [\n            '@param prototype step interpolator prototype to be utilized',\n            '@param prototype prototype of the interpolator for the steps',\n            '@param prototype prototype of the step interpolator for usage'\n        ]\n    },\n    {\n        'tag': '@param step integration step',\n        'alternatives': [\n            '@param step size of the integration',\n            '@param step size for integrating',\n            '@param step integration increment'\n        ]\n    },\n    {\n        'tag': '@param previousState state vector at step start',\n        'alternatives': [\n            '@param previousState state vector at the beginning of the step',\n            '@param previousState state vector at the start of the step',\n            '@param previousState state vector at the initial step position'\n        ]\n    },\n    {\n        'tag': '@param predictedState predicted state vector at step end',\n        'alternatives': [\n            '@param predictedState state vector predicted at the end of the step',\n            '@param predictedState predicted state vector at the step conclusion',\n            '@param predictedState state vector anticipated at the conclusion of the step'\n        ]\n    },\n    {\n        'tag': '@param predictedScaled predicted value of the scaled derivatives at step end',\n        'alternatives': [\n            '@param predictedScaled predicted value of the scaled derivatives at the end of the step',\n            '@param predictedScaled anticipated value of the scaled derivatives at the step conclusion',\n            '@param predictedScaled value obtained from scaling the derivatives at the conclusion of the step'\n        ]\n    },\n    {\n        'tag': '@param predictedNordsieck predicted value of the Nordsieck vector at step end',\n        'alternatives': [\n            '@param predictedNordsieck predicted value of the Nordsieck vector at the end of the step',\n            '@param predictedNordsieck value of the Nordsieck vector anticipated at the conclusion of the step',\n            '@param predictedNordsieck value obtained for the Nordsieck vector at the step conclusion'\n        ]\n    },\n    {\n        'tag': '@return estimated normalized local discretization error',\n        'alternatives': [\n            '@return estimated error in the local discretization',\n            '@return local discretization error estimation',\n            '@return approximated value of the local discretization error'\n        ]\n    },\n    {\n        'tag': '@param field field to which the time and state vector elements belong',\n        'alternatives': [\n            '@param field field associated with the time and state vector elements',\n            '@param field field that the time and state vector elements belong to',\n            '@param field field to which the time and state vector elements pertain'\n        ]\n    },\n    {\n        'tag': '@param nSteps number of steps of the method excluding the one being computed',\n        'alternatives': [\n            '@param nSteps number of steps not considering the one currently computed',\n            '@param nSteps number of steps except the one being calculated',\n            '@param nSteps number of steps excluding the one under computation'\n        ]\n    },\n    {\n        'tag': '@param minStep minimal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n        'alternatives': [\n            '@param minStep smallest step size (sign is insignificant, regardless of\\nintegration direction, forward or backward), the final step can\\nbe lesser than this',\n            '@param minStep minimum integration step (sign does not matter, regardless of\\ndirection, forward or backward), the last step can\\nbe smaller than this',\n            '@param minStep smallest admissible step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe less than this'\n        ]\n    },\n    {\n        'tag': '@param maxStep maximal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n        'alternatives': [\n            '@param maxStep largest step size (sign is insignificant, regardless of\\nintegration direction, forward or backward), the final step can\\nbe lesser than this',\n            '@param maxStep maximum integration step (sign does not matter, regardless of\\ndirection, forward or backward), the last step can\\nbe smaller than this',\n            '@param maxStep greatest admissible step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe less than this'\n        ]\n    },\n    {\n        'tag': '@param scalAbsoluteTolerance allowed absolute error',\n        'alternatives': [\n            '@param scalAbsoluteTolerance permissible absolute error',\n            '@param scalAbsoluteTolerance acceptable absolute deviation',\n            '@param scalAbsoluteTolerance admissible absolute tolerance'\n        ]\n    },\n    {\n        'tag': '@param scalRelativeTolerance allowed relative error',\n        'alternatives': [\n            '@param scalRelativeTolerance permissible relative error',\n            '@param scalRelativeTolerance acceptable relative deviation',\n            '@param scalRelativeTolerance admissible relative tolerance'\n        ]\n    },\n    {\n        'tag': '@throws NumberIsTooSmallException if order is 1 or less',\n        'alternatives': [\n            '@throws NumberIsTooSmallException if the order is less than or equal to 1',\n            '@throws NumberIsTooSmallException when the order is less than 2',\n            '@throws NumberIsTooSmallException if order is smaller than 2'\n        ]\n    }\n]"