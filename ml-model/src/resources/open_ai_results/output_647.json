"output=[\r\n  {\r\n    'tag': '@param next the next entry in sequence',\r\n    'alternatives': [\r\n      '@param next the subsequent entry in the sequence',\r\n      '@param next the following entry in the sequence',\r\n      '@param next the entry that comes next in the sequence',\r\n      '@param next the entry that follows in the sequence',\r\n      '@param next the entry immediately succeeding in the sequence'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param hashCode the hash code to use',\r\n    'alternatives': [\r\n      '@param hashCode the hash code to utilize',\r\n      '@param hashCode the hash code to employ',\r\n      '@param hashCode the hash code to apply',\r\n      '@param hashCode the hash code to utilize',\r\n      '@param hashCode the hash code to make use of'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param key the key to store',\r\n    'alternatives': [\r\n      '@param key the key to save',\r\n      '@param key the key to retain',\r\n      '@param key the key to hold',\r\n      '@param key the key to preserve',\r\n      '@param key the key to maintain'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param value the value to store',\r\n    'alternatives': [\r\n      '@param value the value to save',\r\n      '@param value the value to retain',\r\n      '@param value the value to hold',\r\n      '@param value the value to preserve',\r\n      '@param value the value to maintain'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the newly created entry',\r\n    'alternatives': [\r\n      '@return the recently created entry',\r\n      '@return the freshly created entry',\r\n      '@return the newly formed entry',\r\n      '@return the newly generated entry',\r\n      '@return the entry that has just been created'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param entry the entry to add',\r\n    'alternatives': [\r\n      '@param entry the entry to include',\r\n      '@param entry the entry to insert',\r\n      '@param entry the entry to append',\r\n      '@param entry the entry to incorporate',\r\n      '@param entry the entry to put'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param hashIndex the index into the data array to store at',\r\n    'alternatives': [\r\n      '@param hashIndex the index to store at within the data array',\r\n      '@param hashIndex the position in the data array to store at',\r\n      '@param hashIndex the location in the data array where the storage will occur',\r\n      '@param hashIndex the array index to use for storage',\r\n      '@param hashIndex the index in the data array where the storing will happen'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param entry the entry to remove',\r\n    'alternatives': [\r\n      '@param entry the entry to delete',\r\n      '@param entry the entry to eliminate',\r\n      '@param entry the entry to eradicate',\r\n      '@param entry the entry to exclude',\r\n      '@param entry the entry to expunge'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param hashIndex the index into the data structure',\r\n    'alternatives': [\r\n      '@param hashIndex the index within the data structure',\r\n      '@param hashIndex the position in the data structure',\r\n      '@param hashIndex the location in the data structure',\r\n      '@param hashIndex the array index',\r\n      '@param hashIndex the index in the data structure'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param previous the previous entry in the chain',\r\n    'alternatives': [\r\n      '@param previous the entry that comes before in the chain',\r\n      '@param previous the entry that precedes in the chain',\r\n      '@param previous the entry right before in the chain',\r\n      '@param previous the entry immediately preceding in the chain',\r\n      '@param previous the entry just prior in the chain'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param entry the entry to destroy',\r\n    'alternatives': [\r\n      '@param entry the entry to demolish',\r\n      '@param entry the entry to annihilate',\r\n      '@param entry the entry to obliterate',\r\n      '@param entry the entry to eliminate',\r\n      '@param entry the entry to eradicate'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param newCapacity the new capacity of the array (a power of two, less or equal to max)',\r\n    'alternatives': [\r\n      '@param newCapacity the updated capacity of the array (a power of two, not greater than max)',\r\n      '@param newCapacity the revised capacity of the array (a power of two, smaller or equal to max)',\r\n      '@param newCapacity the modified capacity of the array (a power of two, less than or equal to max)',\r\n      '@param newCapacity the changed capacity of the array (a power of two, not exceeding max)',\r\n      '@param newCapacity the adjusted capacity of the array (a power of two, equal to or less than max)'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param proposedCapacity the proposed capacity',\r\n    'alternatives': [\r\n      '@param proposedCapacity the suggested capacity',\r\n      '@param proposedCapacity the recommended capacity',\r\n      '@param proposedCapacity the estimated capacity',\r\n      '@param proposedCapacity the planned capacity',\r\n      '@param proposedCapacity the anticipated capacity'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the normalized new capacity',\r\n    'alternatives': [\r\n      '@return the standardized new capacity',\r\n      '@return the regularized new capacity',\r\n      '@return the adjusted new capacity',\r\n      '@return the normalized capacity',\r\n      '@return the capacity that has been normalized'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param newCapacity the new capacity',\r\n    'alternatives': [\r\n      '@param newCapacity the updated capacity',\r\n      '@param newCapacity the revised capacity',\r\n      '@param newCapacity the modified capacity',\r\n      '@param newCapacity the changed capacity',\r\n      '@param newCapacity the adjusted capacity'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param factor the load factor',\r\n    'alternatives': [\r\n      '@param factor the filling factor',\r\n      '@param factor the occupancy rate',\r\n      '@param factor the utilization factor',\r\n      '@param factor the packing density',\r\n      '@param factor the ratio of used space'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the new resize threshold',\r\n    'alternatives': [\r\n      '@return the updated resize threshold',\r\n      '@return the revised resize threshold',\r\n      '@return the modified resize threshold',\r\n      '@return the changed resize threshold',\r\n      '@return the adjusted resize threshold'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param entry the entry to query, must not be null',\r\n    'alternatives': [\r\n      '@param entry the entry to inquire, should not be null',\r\n      '@param entry the entry to examine, cannot be null',\r\n      '@param entry the entry to investigate, must not be null',\r\n      '@param entry the entry to inspect, must be non-null',\r\n      '@param entry the entry to check, should not be null'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the <code>next</code> field of the entry',\r\n    'alternatives': [\r\n      '@return the <code>next</code> attribute of the entry',\r\n      '@return the <code>next</code> property of the entry',\r\n      '@return the entry\\'s <code>next</code> field',\r\n      '@return the entry\\'s <code>next</code> value',\r\n      '@return the <code>next</code> value stored in the entry'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws NullPointerException if the entry is null',\r\n    'alternatives': [\r\n      '@throws NullPointerException when the entry is null',\r\n      '@throws NullPointerException if the entry is missing',\r\n      '@throws NullPointerException in case the entry is null',\r\n      '@throws NullPointerException if the entry is absent',\r\n      '@throws NullPointerException if the entry does not exist'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param entry the entry to query, must not be null',\r\n    'alternatives': [\r\n      '@param entry the entry to inquire, should not be null',\r\n      '@param entry the entry to examine, cannot be null',\r\n      '@param entry the entry to investigate, must not be null',\r\n      '@param entry the entry to inspect, must be non-null',\r\n      '@param entry the entry to check, should not be null'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the <code>hashCode</code> field of the entry',\r\n    'alternatives': [\r\n      '@return the <code>hashCode</code> attribute of the entry',\r\n      '@return the <code>hashCode</code> property of the entry',\r\n      '@return the entry\\'s <code>hashCode</code> field',\r\n      '@return the entry\\'s <code>hashCode</code> value',\r\n      '@return the <code>hashCode</code> value stored in the entry'\r\n    ]\r\n  }\r\n]"