"Output: \n\n[\n  {\n    \"tag\": \"@param y reference to the integrator array holding the state at\\nthe end of the step\",\n    \"alternatives\": [\n      \"@param y reference to the integrator array holding the state at\\nthe end of the time interval\",\n      \"@param y reference to the array in the integrator that holds the state at\\nthe end of the step\",\n      \"@param y reference to the integrator array that contains the state at\\nthe end of the step\"\n    ]\n  },\n  {\n    \"tag\": \"@param yDotArray reference to the integrator array holding all the\\nintermediate slopes\",\n    \"alternatives\": [\n      \"@param yDotArray reference to the array in the integrator that holds all the\\nintermediate slopes\",\n      \"@param yDotArray reference to the integrator array that contains all the\\nintermediate slopes\",\n      \"@param yDotArray reference to the integrator array that stores all the\\nintermediate slopes\"\n    ]\n  },\n  {\n    \"tag\": \"@param forward integration direction indicator\",\n    \"alternatives\": [\n      \"@param indicator indicating the forward integration direction\",\n      \"@param indicator to specify the forward integration direction\",\n      \"@param indicator for indicating the direction of forward integration\"\n    ]\n  },\n  {\n    \"tag\": \"@param primaryMapper equations mapper for the primary equations set\",\n    \"alternatives\": [\n      \"@param primaryMapper mapper for the primary set of equations\",\n      \"@param primaryMapper equations mapper for the set of primary equations\",\n      \"@param primaryMapper mapper for the equations in the primary set\"\n    ]\n  },\n  {\n    \"tag\": \"@param secondaryMappers equations mappers for the secondary equations sets\",\n    \"alternatives\": [\n      \"@param secondaryMappers mappers for the sets of secondary equations\",\n      \"@param secondaryMappers equations mappers for the secondary sets of equations\",\n      \"@param secondaryMappers mappers for the equations in the secondary equation sets\"\n    ]\n  },\n  {\n    \"tag\": \"@param interpolator interpolator to copy from.\",\n    \"alternatives\": [\n      \"@param interpolator interpolator from which to make a copy.\",\n      \"@param interpolator interpolator to be duplicated.\",\n      \"@param interpolator interpolator for creating a copy.\"\n    ]\n  },\n  {\n    \"tag\": \"@param interpolator interpolator to copy from. The copy is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance\",\n    \"alternatives\": [\n      \"@param interpolator interpolator for duplication. The duplication is performed deeply where the arrays in the copy are distinct from those in the original instance\",\n      \"@param interpolator interpolator from which to create a deep copy. The deep copy ensures that the arrays in the copy are separate from the arrays in the original instance\",\n      \"@param interpolator interpolator for producing a deep copy. The deep copy guarantees that the arrays in the copy are isolated from the arrays in the original instance\"\n    ]\n  },\n  {\n    \"tag\": \"@param field field to which the time and state vector elements belong\",\n    \"alternatives\": [\n      \"@param field field that contains the time and state vector elements\",\n      \"@param field field that holds the time and state vector elements\",\n      \"@param field field associated with the time and state vector elements\"\n    ]\n  },\n  {\n    \"tag\": \"@param forward integration direction indicator\",\n    \"alternatives\": [\n      \"@param indicator specifying the forward integration direction\",\n      \"@param indicator that determines the direction of forward integration\",\n      \"@param indicator indicating the direction of forward integration\"\n    ]\n  },\n  {\n    \"tag\": \"@param yDotK slopes at the intermediate points\",\n    \"alternatives\": [\n      \"@param yDotK slopes at the points between the start and end\",\n      \"@param yDotK slopes at the intermediate stages\",\n      \"@param yDotK slopes at the middle points\"\n    ]\n  },\n  {\n    \"tag\": \"@param globalPreviousState start of the global step\",\n    \"alternatives\": [\n      \"@param globalPreviousState initial state of the global step\",\n      \"@param globalPreviousState beginning of the global step\",\n      \"@param globalPreviousState initial condition for the global step\"\n    ]\n  },\n  {\n    \"tag\": \"@param globalCurrentState end of the global step\",\n    \"alternatives\": [\n      \"@param globalCurrentState final state of the global step\",\n      \"@param globalCurrentState conclusion of the global step\",\n      \"@param globalCurrentState end condition for the global step\"\n    ]\n  },\n  {\n    \"tag\": \"@param softPreviousState start of the restricted step\",\n    \"alternatives\": [\n      \"@param softPreviousState initial state of the restricted step\",\n      \"@param softPreviousState beginning of the restricted step\",\n      \"@param softPreviousState initial condition for the restricted step\"\n    ]\n  },\n  {\n    \"tag\": \"@param softCurrentState end of the restricted step\",\n    \"alternatives\": [\n      \"@param softCurrentState final state of the restricted step\",\n      \"@param softCurrentState conclusion of the restricted step\",\n      \"@param softCurrentState end condition for the restricted step\"\n    ]\n  },\n  {\n    \"tag\": \"@param mapper equations mapper for the all equations\",\n    \"alternatives\": [\n      \"@param mapper equations mapper for all the equations\",\n      \"@param equationsMapper mapper for the entire set of equations\",\n      \"@param mapper mapping function for the entire equation set\"\n    ]\n  },\n  {\n    \"tag\": \"@param minStep minimal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this\",\n    \"alternatives\": [\n      \"@param minStep smallest step allowed (the sign doesn't matter, whether forward or backward), the final step may be less than this\",\n      \"@param minStep minimum step size (the sign doesn't matter, either forward or backward), the last step could be smaller than this\",\n      \"@param minStep minimum step (sign doesn't matter, regardless of being forward or backward), the last step may be smaller than this\"\n    ]\n  },\n  {\n    \"tag\": \"@param maxStep maximal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this\",\n    \"alternatives\": [\n      \"@param maxStep largest step allowed (the sign doesn't matter, whether forward or backward), the final step may be less than this\",\n      \"@param maxStep maximum step size (the sign doesn't matter, either forward or backward), the last step could be smaller than this\",\n      \"@param maxStep maximum step (sign doesn't matter, regardless of being forward or backward), the last step may be smaller than this\"\n    ]\n  },\n  {\n    \"tag\": \"@param scalAbsoluteTolerance allowed absolute error\",\n    \"alternatives\": [\n      \"@param scalAbsoluteTolerance permissible absolute error\",\n      \"@param scalAbsoluteTolerance acceptable absolute error\",\n      \"@param scalAbsoluteTolerance allowed absolute deviation\"\n    ]\n  },\n  {\n    \"tag\": \"@param scalRelativeTolerance allowed relative error\",\n    \"alternatives\": [\n      \"@param scalRelativeTolerance permissible relative error\",\n      \"@param scalRelativeTolerance acceptable relative error\",\n      \"@param scalRelativeTolerance allowed relative deviation\"\n    ]\n  },\n  {\n    \"tag\": \"@param minStep minimal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this\",\n    \"alternatives\": [\n      \"@param minStep smallest step allowed (the sign doesn't matter, whether forward or backward), the final step may be less than this\",\n      \"@param minStep minimum step size (the sign doesn't matter, either forward or backward), the last step could be smaller than this\",\n      \"@param minStep minimum step (sign doesn't matter, regardless of being forward or backward), the last step may be smaller than this\"\n    ]\n  },\n  {\n    \"tag\": \"@param maxStep maximal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this\",\n    \"alternatives\": [\n      \"@param maxStep largest step allowed (the sign doesn't matter, whether forward or backward), the final step may be less than this\",\n      \"@param maxStep maximum step size (the sign doesn't matter, either forward or backward), the last step could be smaller than this\",\n      \"@param maxStep maximum step (sign doesn't matter, regardless of being forward or backward), the last step may be smaller than this\"\n    ]\n  },\n  {\n    \"tag\": \"@param vecAbsoluteTolerance allowed absolute error\",\n    \"alternatives\": [\n      \"@param vecAbsoluteTolerance permissible absolute error\",\n      \"@param vecAbsoluteTolerance acceptable absolute error\",\n      \"@param vecAbsoluteTolerance allowed absolute deviation\"\n    ]\n  },\n  {\n    \"tag\": \"@param vecRelativeTolerance allowed relative error\",\n    \"alternatives\": [\n      \"@param vecRelativeTolerance permissible relative error\",\n      \"@param vecRelativeTolerance acceptable relative error\",\n      \"@param vecRelativeTolerance allowed relative deviation\"\n    ]\n  },\n  {\n    \"tag\": \"@param highOrder high order scaled derivatives\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n    \"alternatives\": [\n      \"@param highOrder high order scaled derivatives\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! f(k))\",\n      \"@param highOrder high order scaled derivatives\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! f(k))\",\n      \"@param highOrder high order scaled derivatives\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! g(k))\"\n    ]\n  },\n  {\n    \"tag\": \"@param start first order scaled derivatives at step start\",\n    \"alternatives\": [\n      \"@param start first order scaled derivatives at the beginning of the step\",\n      \"@param start first order scaled derivatives at the start of the step\",\n      \"@param start first order scaled derivatives at the onset of the step\"\n    ]\n  }\n]"