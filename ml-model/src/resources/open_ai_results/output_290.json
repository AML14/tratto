"output=[\n  {\n    'tag': '@param out an array with three items to put result to',\n    'alternatives': [\n      '@param out an array with three items to store the result',\n      '@param out an array with three elements to hold the output',\n      '@param out an array containing three items to store the result',\n      '@param out an array with three slots to store the output',\n      '@param out an array with three positions to store the result'\n    ]\n  },\n  {\n    'tag': '@param r rotation to apply',\n    'alternatives': [\n      '@param r rotation to be applied',\n      '@param r rotation to be used',\n      '@param r rotation for applying',\n      '@param r rotation for use',\n      '@param r rotation to perform'\n    ]\n  },\n  {\n    'tag': '@param u vector to apply the rotation to',\n    'alternatives': [\n      '@param u vector to be rotated',\n      '@param u vector for applying the rotation',\n      '@param u vector to use the rotation on',\n      '@param u vector for rotation application',\n      '@param u vector to be subjected to the rotation'\n    ]\n  },\n  {\n    'tag': '@param <T> the type of the field elements',\n    'alternatives': [\n      '@param <T> the type of elements in the field',\n      '@param <T> the field element type',\n      '@param <T> the element type of the field',\n      '@param <T> the type of elements within the field',\n      '@param <T> the type of the elements in the field'\n    ]\n  },\n  {\n    'tag': '@return a new vector which is the image of u by the rotation',\n    'alternatives': [\n      '@return a new vector resulting from rotating u',\n      '@return a new vector obtained by applying the rotation to u',\n      '@return a new vector that is the result of rotating u',\n      '@return a new vector produced by the rotation of u',\n      '@return a new vector representing the image of u after rotation'\n    ]\n  },\n  {\n    'tag': '@param u vector to apply the inverse of the rotation to',\n    'alternatives': [\n      '@param u vector to be inversely rotated',\n      '@param u vector for applying the inverse rotation',\n      '@param u vector to reverse the rotation on',\n      '@param u vector for inverse rotation application',\n      '@param u vector to be subjected to the inverse rotation'\n    ]\n  },\n  {\n    'tag': '@return a new vector which such that u is its image by the rotation',\n    'alternatives': [\n      '@return a new vector such that u is transformed by the rotation',\n      '@return a new vector where u is the result of the rotation',\n      '@return a new vector such that the rotation maps u to it',\n      '@return a new vector that is the image of u under the rotation',\n      '@return a new vector obtained by applying the rotation to u'\n    ]\n  },\n  {\n    'tag': '@param in an array with three items which stores vector to rotate',\n    'alternatives': [\n      '@param in an array containing three items that hold the vector to rotate',\n      '@param in an array of size three which contains the vector to be rotated',\n      '@param in an array with three slots that stores the vector for rotation',\n      '@param in an array with three elements to store the vector to be rotated',\n      '@param in an array that holds the vector to be subjected to rotation'\n    ]\n  },\n  {\n    'tag': '@param out an array with three items to put result to (it can be the same\\narray as in)',\n    'alternatives': [\n      '@param out an array with three spots to store the output (can be the same array as in)',\n      '@param out an array containing three elements to hold the result (may be the same array as in)',\n      '@param out an array with three positions to store the result (it can be the same array as in)',\n      '@param out an array with three items to save the result (it can be the same array as in)',\n      '@param out an array that receives the result with three items (it can be the same array as in)'\n    ]\n  },\n  {\n    'tag': '@param r rotation to apply the rotation to',\n    'alternatives': [\n      '@param r rotation to be applied on top of the given rotation',\n      '@param r rotation to be used for the subsequent rotation',\n      '@param r rotation to perform in addition to the existing rotation',\n      '@param r rotation for applying an additional rotation',\n      '@param r rotation to combine with the current rotation'\n    ]\n  },\n  {\n    'tag': '@return a new rotation which is the composition of r by the instance',\n    'alternatives': [\n      '@return a new rotation resulting from the composition of r with the current instance',\n      '@return a new rotation obtained by combining r with the existing rotation',\n      '@return a new rotation that is the result of the composition of r with the instance',\n      '@return a new rotation produced by the combination of r and the current rotation',\n      '@return a new rotation representing the composition of r with the instance'\n    ]\n  },\n  {\n    'tag': '@param convention convention to use for the semantics of the angle',\n    'alternatives': [\n      '@param convention the chosen convention for interpreting the angle',\n      '@param convention the convention employed for angle interpretation',\n      '@param convention to specify the semantics of the angle',\n      '@param convention to define the meaning of the angle',\n      '@param convention for determining the interpretation of the angle'\n    ]\n  },\n  {\n    'tag': '@return a new rotation which is the composition of r by the instance',\n    'alternatives': [\n      '@return a new rotation resulting from the composition of r with the current instance',\n      '@return a new rotation obtained by combining r with the existing rotation',\n      '@return a new rotation that is the result of the composition of r with the instance',\n      '@return a new rotation produced by the combination of r and the current rotation',\n      '@return a new rotation representing the composition of r with the instance'\n    ]\n  },\n  {\n    'tag': '@return a new rotation which is the composition of r by the instance\\nusing vector operator convention',\n    'alternatives': [\n      '@return a new rotation resulting from the composition of r and the instance, using the vector operator convention',\n      '@return a new rotation obtained by combining r and the instance, with respect to the vector operator convention',\n      '@return a new rotation that is the result of the composition of r and the instance, following the vector operator convention',\n      '@return a new rotation produced by the combination of r and the instance, based on the vector operator convention',\n      '@return a new rotation representing the composition of r and the instance, according to the vector operator convention'\n    ]\n  },\n  {\n    'tag': '@param r rotation to apply the rotation to',\n    'alternatives': [\n      '@param r rotation to be applied on top of the given rotation',\n      '@param r rotation to be used for the subsequent rotation',\n      '@param r rotation to perform in addition to the existing rotation',\n      '@param r rotation for applying an additional rotation',\n      '@param r rotation to combine with the current rotation'\n    ]\n  }\n]"