"output = [\n  {\n    'tag': '@return leaf node just after the internal node',\n    'alternatives': [\n      '@return leaf node immediately following the internal node',\n      '@return leaf node directly after the internal node',\n      '@return leaf node positioned right after the internal node',\n      '@return leaf node that comes next to the internal node',\n      '@return leaf node situated right after the internal node'\n    ]\n  },\n  {\n    'tag': '@param node child node considered',\n    'alternatives': [\n      '@param node node being considered as the child',\n      '@param node the child node being evaluated',\n      '@param node node that is being examined as the child',\n      '@param node the child node being taken into account',\n      '@param node node under consideration as the child'\n    ]\n  },\n  {\n    'tag': '@return true is the node has a parent end is before it in trigonometric order',\n    'alternatives': [\n      '@return true if the node has a parent and it is positioned before it in trigonometric order',\n      '@return true if the node's parent comes before it in trigonometric order',\n      '@return true if the node is preceded by its parent in trigonometric order',\n      '@return true if the node's parent appears ahead of it in trigonometric order',\n      '@return true if the node is positioned earlier than its parent in trigonometric order'\n    ]\n  },\n  {\n    'tag': '@param node child node considered',\n    'alternatives': [\n      '@param node node being considered as the child',\n      '@param node the child node being evaluated',\n      '@param node node that is being examined as the child',\n      '@param node the child node being taken into account',\n      '@param node node under consideration as the child'\n    ]\n  },\n  {\n    'tag': '@return true is the node has a parent end is after it in trigonometric order',\n    'alternatives': [\n      '@return true if the node has a parent and it is positioned after it in trigonometric order',\n      '@return true if the node's parent comes after it in trigonometric order',\n      '@return true if the node is followed by its parent in trigonometric order',\n      '@return true if the node's parent appears behind it in trigonometric order',\n      '@return true if the node is positioned later than its parent in trigonometric order'\n    ]\n  },\n  {\n    'tag': '@param node internal node at which the sub-tree starts',\n    'alternatives': [\n      '@param node starting internal node of the sub-tree',\n      '@param node internal node from where the sub-tree begins',\n      '@param node internal node indicating the start of the sub-tree',\n      '@param node internal node where the sub-tree initiates',\n      '@param node internal node marking the commencement of the sub-tree'\n    ]\n  },\n  {\n    'tag': '@return child node just before the internal node',\n    'alternatives': [\n      '@return child node immediately prior to the internal node',\n      '@return child node right before the internal node',\n      '@return child node positioned right before the internal node',\n      '@return child node that comes right before the internal node',\n      '@return child node situated just before the internal node'\n    ]\n  },\n  {\n    'tag': '@param node internal node at which the sub-tree starts',\n    'alternatives': [\n      '@param node starting internal node of the sub-tree',\n      '@param node internal node from where the sub-tree begins',\n      '@param node internal node indicating the start of the sub-tree',\n      '@param node internal node where the sub-tree initiates',\n      '@param node internal node marking the commencement of the sub-tree'\n    ]\n  },\n  {\n    'tag': '@return child node just after the internal node',\n    'alternatives': [\n      '@return child node immediately following the internal node',\n      '@return child node directly after the internal node',\n      '@return child node positioned right after the internal node',\n      '@return child node that comes next to the internal node',\n      '@return child node situated right after the internal node'\n    ]\n  },\n  {\n    'tag': '@param node internal node to check',\n    'alternatives': [\n      '@param node internal node to verify',\n      '@param node internal node for validation',\n      '@param node internal node to examine',\n      '@param node internal node for checking',\n      '@param node internal node to test'\n    ]\n  },\n  {\n    'tag': '@return true if the limit angle is direct',\n    'alternatives': [\n      '@return true if the limit angle is straight',\n      '@return true if the limit angle is linear',\n      '@return true if the limit angle is unobstructed',\n      '@return true if the limit angle is direct in nature',\n      '@return true if the limit angle is not curved'\n    ]\n  },\n  {\n    'tag': '@param node internal node to check',\n    'alternatives': [\n      '@param node internal node to verify',\n      '@param node internal node for validation',\n      '@param node internal node to examine',\n      '@param node internal node for checking',\n      '@param node internal node to test'\n    ]\n  },\n  {\n    'tag': '@return limit angle',\n    'alternatives': [\n      '@return angle limit',\n      '@return maximum angle',\n      '@return angle threshold',\n      '@return angle constraint',\n      '@return highest allowable angle'\n    ]\n  },\n  {\n    'tag': '@return a new ordered list containing {@link Arc Arc} elements',\n    'alternatives': [\n      '@return a new sorted list with {@link Arc Arc} elements',\n      '@return a fresh list ordered with {@link Arc Arc} elements',\n      '@return an ordered list comprising of {@link Arc Arc} elements',\n      '@return a newly arranged list containing {@link Arc Arc} elements',\n      '@return a list organized in order with {@link Arc Arc} elements'\n    ]\n  },\n  {\n    'tag': '@param arc arc to check instance against',\n    'alternatives': [\n      '@param arc arc to verify instance against',\n      '@param arc arc to validate instance against',\n      '@param arc arc to examine instance against',\n      '@param arc arc to check instance with',\n      '@param arc arc to test instance against'\n    ]\n  },\n  {\n    'tag': '@return one of {@link Side#PLUS}, {@link Side#MINUS}, {@link Side#BOTH}\\nor {@link Side#HYPER}',\n    'alternatives': [\n      '@return either {@link Side#PLUS}, {@link Side#MINUS}, {@link Side#BOTH}, or {@link Side#HYPER}',\n      '@return one of {@link Side#PLUS}, {@link Side#MINUS}, {@link Side#BOTH}, or {@link Side#HYPER}',\n      '@return one of the following: {@link Side#PLUS}, {@link Side#MINUS}, {@link Side#BOTH}, or {@link Side#HYPER}',\n      '@return either {@link Side#PLUS}, {@link Side#MINUS}, {@link Side#BOTH}, or {@link Side#HYPER}',\n      '@return one of the four options: {@link Side#PLUS}, {@link Side#MINUS}, {@link Side#BOTH}, or {@link Side#HYPER}'\n    ]\n  },\n  {\n    'tag': '@param arc splitting arc',\n    'alternatives': [\n      '@param arc arc being split',\n      '@param arc arc that is being divided',\n      '@param arc arc undergoing splitting',\n      '@param arc arc going through splitting',\n      '@param arc arc subjected to splitting'\n    ]\n  },\n  {\n    'tag': '@return an object containing both the part of the instance\\non the plus side of the arc and the part of the\\ninstance on the minus side of the arc',\n    'alternatives': [\n      '@return an object that holds both the portion of the instance\\non the plus side of the arc and the portion of the\\ninstance on the minus side of the arc',\n      '@return an object that encompasses both the section of the instance\\non the plus side of the arc and the section of the\\ninstance on the minus side of the arc',\n      '@return an object that includes both the segment of the instance\\non the plus side of the arc and the segment of the\\ninstance on the minus side of the arc',\n      '@return an object that contains both the division of the instance\\non the plus side of the arc and the division of the\\ninstance on the minus side of the arc',\n      '@return an object that comprises both the fragment of the instance\\non the plus side of the arc and the fragment of the\\ninstance on the minus side of the arc'\n    ]\n  },\n  {\n    'tag': '@param tree BSP tree under construction',\n    'alternatives': [\n      '@param tree BSP tree being constructed',\n      '@param tree under-construction BSP tree',\n      '@param tree BSP tree in the process of construction',\n      '@param tree BSP tree that is being built',\n      '@param tree BSP tree being created'\n    ]\n  },\n  {\n    'tag': '@param alpha arc limit',\n    'alternatives': [\n      '@param alpha limit of the arc',\n      '@param alpha angle limitation of the arc',\n      '@param alpha threshold for the arc',\n      '@param alpha constraint of the arc',\n      '@param alpha maximum angle of the arc'\n    ]\n  },\n  {\n    'tag': '@param isStart if true, the limit is the start of an arc',\n    'alternatives': [\n      '@param isStart if true, the limit represents the beginning of an arc',\n      '@param isStart if true, the limit denotes the start of an arc',\n      '@param isStart if true, the limit indicates the initiation of an arc',\n      '@param isStart if true, the limit specifies the starting point of an arc',\n      '@param isStart if true, the limit signifies the commencement of an arc'\n    ]\n  },\n  {\n    'tag': '@param limits limit angles of the split part',\n    'alternatives': [\n      '@param limits limitations of the split part in terms of angles',\n      '@param limits angle boundaries of the split part',\n      '@param limits limit values for the split part in terms of angles',\n      '@param limits angle restrictions of the split part',\n      '@param limits angle thresholds of the split part'\n    ]\n  },\n  {\n    'tag': '@return split part (may be null)',\n    'alternatives': [\n      '@return split part (possibly null)',\n      '@return split part (null if absent)',\n      '@return split part (null may be returned)',\n      '@return split part (null is a possible return)',\n      '@return split part (null indicates absence)'\n    ]\n  },\n  {\n    'tag': '@param tolerance tolerance below which close sub-arcs are merged together',\n    'alternatives': [\n      '@param tolerance threshold below which close sub-arcs combine together',\n      '@param tolerance limit under which close sub-arcs merge together',\n      '@param tolerance value that determines merging of close sub-arcs',\n      '@param tolerance maximum difference for merging close sub-arcs',\n      '@param tolerance constraint for merging close sub-arcs'\n    ]\n  },\n  {\n    'tag': '@param lower lower bound of the arc',\n    'alternatives': [\n      '@param lower minimum value of the arc',\n      '@param lower limit value for the arc',\n      '@param lower constraint for the arc',\n      '@param lower lowest allowable value of the arc',\n      '@param lower threshold at the bottom of the arc'\n    ]\n  }\n]"