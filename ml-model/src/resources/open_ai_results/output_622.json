"output = [\n  {\n    'tag': '@param timeId ',\n    'alternatives': [\n      '@param timeId ',\n      '@param idOfTime ',\n      '@param identifierOfTime ',\n      '@param timeIdentifier ',\n      '@param timeIdentification '\n    ]\n  },\n  {\n    'tag': '@param nodeId The node identifier.',\n    'alternatives': [\n      '@param nodeId The node identifier.',\n      '@param identifierOfNode The node identifier.',\n      '@param nodeID The identifier of the node.',\n      '@param nodeIdentifier The identifier of the node.',\n      '@param nodeID The unique identifier of the node.'\n    ]\n  },\n  {\n    'tag': '@param attribute The attribute name.',\n    'alternatives': [\n      '@param attribute The attribute name.',\n      '@param attributeName The name of the attribute.',\n      '@param attr The name of the attribute.',\n      '@param attrName The name of the attr.',\n      '@param nameOfAttr The name of the attribute.'\n    ]\n  },\n  {\n    'tag': '@param sourceId The source identifier.',\n    'alternatives': [\n      '@param sourceId The source identifier.',\n      '@param identifierOfSource The source identifier.',\n      '@param sourceID The identifier of the source.',\n      '@param sourceIdentifier The identifier of the source.',\n      '@param sourceID The unique identifier of the source.'\n    ]\n  },\n  {\n    'tag': '@param eltId The changed element identifier.',\n    'alternatives': [\n      '@param eltId The changed element identifier.',\n      '@param identifierOfElement The changed element identifier.',\n      '@param elementID The identifier of the changed element.',\n      '@param elementIdentifier The identifier of the changed element.',\n      '@param elementID The unique identifier of the changed element.'\n    ]\n  },\n  {\n    'tag': '@param eltType The changed element type.',\n    'alternatives': [\n      '@param eltType The changed element type.',\n      '@param typeOfElement The changed element type.',\n      '@param elementType The type of the changed element.',\n      '@param elementCategory The category of the changed element.',\n      '@param elementType The type of the modified element.'\n    ]\n  },\n  {\n    'tag': '@param attribute The changed attribute.',\n    'alternatives': [\n      '@param attribute The changed attribute.',\n      '@param modifiedAttribute The changed attribute.',\n      '@param changedAttr The modified attribute.',\n      '@param attr The modified attribute.',\n      '@param alteredAttribute The changed attribute.'\n    ]\n  },\n  {\n    'tag': '@param event The add/change/remove action.',\n    'alternatives': [\n      '@param event The add/change/remove action.',\n      '@param action The add/change/remove event.',\n      '@param actionType The type of the add/change/remove event.',\n      '@param eventAction The action of add/change/remove.',\n      '@param eventType The type of the event (add/change/remove).'\n    ]\n  },\n  {\n    'tag': '@param oldValue The old attribute value (null if the attribute is removed or\\n           added).',\n    'alternatives': [\n      '@param oldValue The old attribute value (null if the attribute is removed or\\n           added).',\n      '@param prevValue The previous attribute value (null if the attribute is removed or\\n           added).',\n      '@param oldAttrValue The old value of the attribute (null if the attribute is removed or\\n           added).',\n      '@param value The previous attribute value (null if the attribute is removed or\\n           added).',\n      '@param attrOldValue The old value of the attribute (null if the attribute is removed or\\n           added).'\n    ]\n  },\n  {\n    'tag': '@param newValue The new attribute value (null if removed).',\n    'alternatives': [\n      '@param newValue The new attribute value (null if removed).',\n      '@param updatedValue The updated attribute value (null if removed).',\n      '@param attrValue The new value of the attribute (null if removed).',\n      '@param value The updated attribute value (null if removed).',\n      '@param attrNewValue The new value of the attribute (null if removed).'\n    ]\n  },\n  {\n    'tag': '@param name Identifier of the stream.',\n    'alternatives': [\n      '@param name Identifier of the stream.',\n      '@param streamName Stream identifier.',\n      '@param streamID The identifier of the stream.',\n      '@param streamIdentifier Identifier of the stream.',\n      '@param streamID The unique identifier of the stream.'\n    ]\n  },\n  {\n    'tag': '@return the identified pipe',\n    'alternatives': [\n      '@return the identified pipe',\n      '@return the pipe that is identified',\n      '@return the pipe with identification',\n      '@return the pipe that is recognized',\n      '@return pipe that is identified'\n    ]\n  },\n  {\n    'tag': '@param name Filter only message with this name to the given message box.',\n    'alternatives': [\n      '@param name Filter only message with this name to the given message box.',\n      '@param filterName Only filter messages with this name to the specified message box.',\n      '@param msgName Filter messages with this name to the given message box.',\n      '@param messageName Filter messages with this name to the specified message box.',\n      '@param boxName Filter only the messages with this name to the given message box.'\n    ]\n  },\n  {\n    'tag': '@param stream The ThreadProxyPipe to push the events to.',\n    'alternatives': [\n      '@param stream The ThreadProxyPipe to push the events to.',\n      '@param pipe The ThreadProxyPipe to push the events to.',\n      '@param eventPipe The ThreadProxyPipe for pushing the events.',\n      '@param eventStream The ThreadProxyPipe to send the events to.',\n      '@param pushPipe The ThreadProxyPipe to send the events to.'\n    ]\n  },\n  {\n    'tag': '@throws Exception If another Pipe is already registered at the given name.',\n    'alternatives': [\n      '@throws Exception If another Pipe is already registered at the given name.',\n      '@throws Exception If there is already another Pipe registered with the given name.',\n      '@throws Exception When there is a Pipe already registered with the provided name.',\n      '@throws Exception If there is a Pipe already registered with the given name.',\n      '@throws Exception In case another Pipe is already registered at the given name.'\n    ]\n  },\n  {\n    'tag': '@param unpaker ',\n    'alternatives': [\n      '@param unpaker ',\n      '@param unpacker ',\n      '@param unpackingDevice ',\n      '@param unpackingTool ',\n      '@param unpackingProgram '\n    ]\n  },\n  {\n    'tag': '@param hostname The host name to listen at messages.',\n    'alternatives': [\n      '@param hostname The host name to listen at messages.',\n      '@param host The name of the host to listen for messages.',\n      '@param listeningHost The host name to listen for messages.',\n      '@param messageHost The host name to receive messages from.',\n      '@param msgHostName The host name to listen for messages.'\n    ]\n  },\n  {\n    'tag': '@param port The port to listen at messages.',\n    'alternatives': [\n      '@param port The port to listen at messages.',\n      '@param messagePort The port to listen for messages.',\n      '@param listeningPort The port to listen for messages.',\n      '@param msgPort The port to receive messages from.',\n      '@param messageBoxPort The port to listen at messages.'\n    ]\n  },\n  {\n    'tag': '@param port The port to listen at messages.',\n    'alternatives': [\n      '@param port The port to listen at messages.',\n      '@param messagePort The port to listen for messages.',\n      '@param listeningPort The port to listen for messages.',\n      '@param msgPort The port to receive messages from.',\n      '@param messageBoxPort The port to listen at messages.'\n    ]\n  },\n  {\n    'tag': '@param hostname The host name to listen at messages.',\n    'alternatives': [\n      '@param hostname The host name to listen at messages.',\n      '@param host The name of the host to listen for messages.',\n      '@param listeningHost The host name to listen for messages.',\n      '@param messageHost The host name to receive messages from.',\n      '@param msgHostName The host name to listen for messages.'\n    ]\n  },\n  {\n    'tag': '@param port The port to listen at messages.',\n    'alternatives': [\n      '@param port The port to listen at messages.',\n      '@param messagePort The port to listen for messages.',\n      '@param listeningPort The port to listen for messages.',\n      '@param msgPort The port to receive messages from.',\n      '@param messageBoxPort The port to listen at messages.'\n    ]\n  },\n  {\n    'tag': '@param debug If true informations are output for each message received.',\n    'alternatives': [\n      '@param debug If true informations are output for each message received.',\n      '@param debug Output information for each received message if set to true.',\n      '@param debugPrint If set to true, print information for each received message.',\n      '@param printDebug If true, output information for each received message.',\n      '@param verbose If set to true, output information for each received message.'\n    ]\n  },\n  {\n    'tag': '@param stream2 ',\n    'alternatives': [\n      '@param stream2 ',\n      '@param secondStream ',\n      '@param anotherStream ',\n      '@param nextStream ',\n      '@param additionalStream '\n    ]\n  },\n  {\n    'tag': '@param paker The packer object',\n    'alternatives': [\n      '@param paker The packer object',\n      '@param packer The object responsible for packing.',\n      '@param packingObject The object used for packing.',\n      '@param packerObj The packer object.',\n      '@param packerInstance The instance of the packer.'\n    ]\n  },\n  {\n    'tag': '@param in ',\n    'alternatives': [\n      '@param in ',\n      '@param input ',\n      '@param inputData ',\n      '@param inputStream ',\n      '@param dataIn '\n    ]\n  }\n]"