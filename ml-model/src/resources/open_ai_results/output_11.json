"output=[\n  {\n    'tag': '@param <T> the type of object in the {@link Iterable}.',\n    'alternatives': [\n      '@param <T> the object type in the {@link Iterable}.',\n      '@param <T> the type of item in the {@link Iterable}.',\n      '@param <T> the object class in the {@link Iterable}.',\n      '@param <T> the type of element in the {@link Iterable}.',\n      '@param <T> the kind of object in the {@link Iterable}.'\n    ]\n  },\n  {\n    'tag': '@param iterable the {@link Iterable} to get a value from, may be null',\n    'alternatives': [\n      '@param iterable the {@link Iterable} to extract a value from, can be null.',\n      '@param iterable the {@link Iterable} to obtain a value from, may be null.',\n      '@param iterable the {@link Iterable} to retrieve a value from, can be null.',\n      '@param iterable the {@link Iterable} from which to get a value, may be null.',\n      '@param iterable the {@link Iterable} to fetch a value from, may be null.'\n    ]\n  },\n  {\n    'tag': '@param index the index to get',\n    'alternatives': [\n      '@param index the desired index to obtain.',\n      '@param index the index to retrieve.',\n      '@param index the specific index to obtain.',\n      '@param index the position to get.',\n      '@param index the location to retrieve.'\n    ]\n  },\n  {\n    'tag': '@return the object at the specified index',\n    'alternatives': [\n      '@return the item at the given index.',\n      '@return the element at the specified index.',\n      '@return the object located at the indicated index.',\n      '@return the value found at the specific index.',\n      '@return the entity at the provided index.'\n    ]\n  },\n  {\n    'tag': '@throws IndexOutOfBoundsException if the index is invalid',\n    'alternatives': [\n      '@throws IndexOutOfBoundsException when the index is not valid.',\n      '@throws IndexOutOfBoundsException if the index is not correct.',\n      '@throws IndexOutOfBoundsException if the index is out of bounds.',\n      '@throws IndexOutOfBoundsException when the index is invalid.',\n      '@throws IndexOutOfBoundsException if the index is not valid.'\n    ]\n  },\n  {\n    'tag': '@param iterable the iterable to check, may be null',\n    'alternatives': [\n      '@param iterable the iterable to verify, can be null.',\n      '@param iterable the iterable to examine, may be null.',\n      '@param iterable the iterable to validate, can be null.',\n      '@param iterable the iterable to inspect, may be null.',\n      '@param iterable the iterable to ensure, can be null.'\n    ]\n  },\n  {\n    'tag': '@return the number of elements contained in the iterable',\n    'alternatives': [\n      '@return the count of items in the iterable.',\n      '@return the quantity of elements in the iterable.',\n      '@return the total number of elements in the iterable.',\n      '@return the size of the iterable.',\n      '@return the length of the iterable.'\n    ]\n  },\n  {\n    'tag': '@param <O> the type of object the {@link Iterable} contains',\n    'alternatives': [\n      '@param <O> the object type that the {@link Iterable} contains',\n      '@param <O> the kind of object that the {@link Iterable} holds',\n      '@param <O> the type of items in the {@link Iterable}',\n      '@param <O> the element kind contained in the {@link Iterable}',\n      '@param <O> the category of object the {@link Iterable} consists of'\n    ]\n  },\n  {\n    'tag': '@param iterable the iterable to partition, may be null',\n    'alternatives': [\n      '@param iterable the iterable to divide, can be null.',\n      '@param iterable the iterable to separate, may be null.',\n      '@param iterable the iterable to split, can be null.',\n      '@param iterable the iterable to break into parts, may be null.',\n      '@param iterable the iterable to subdivide, can be null.'\n    ]\n  },\n  {\n    'tag': '@return a list containing the output collections',\n    'alternatives': [\n      '@return a list that includes the resulting collections.',\n      '@return a list that holds the output collections.',\n      '@return a list containing the produced collections.',\n      '@return a list comprising the generated collections.',\n      '@return a list that contains the resulting collections.'\n    ]\n  },\n  {\n    'tag': '@param <O> the type of object the {@link Iterable} contains',\n    'alternatives': [\n      '@param <O> the object type that the {@link Iterable} includes',\n      '@param <O> the kind of object that the {@link Iterable} holds',\n      '@param <O> the type of items in the {@link Iterable}',\n      '@param <O> the element kind contained in the {@link Iterable}',\n      '@param <O> the category of object the {@link Iterable} consists of'\n    ]\n  },\n  {\n    'tag': '@param iterable the collection to get the input from, may be null',\n    'alternatives': [\n      '@param iterable the collection to retrieve the input from, can be null.',\n      '@param iterable the collection to obtain the input from, may be null.',\n      '@param iterable the collection to extract the input from, can be null.',\n      '@param iterable the collection to acquire the input from, may be null.',\n      '@param iterable the collection to obtain the input values, can be null.'\n    ]\n  },\n  {\n    'tag': '@return a list containing the output collections',\n    'alternatives': [\n      '@return a list that includes the resulting collections.',\n      '@return a list that holds the output collections.',\n      '@return a list containing the produced collections.',\n      '@return a list comprising the generated collections.',\n      '@return a list that contains the resulting collections.'\n    ]\n  },\n  {\n    'tag': '@param <O> the type of object the {@link Iterable} contains',\n    'alternatives': [\n      '@param <O> the object type that the {@link Iterable} includes',\n      '@param <O> the kind of object that the {@link Iterable} holds',\n      '@param <O> the type of items in the {@link Iterable}',\n      '@param <O> the element kind contained in the {@link Iterable}',\n      '@param <O> the category of object the {@link Iterable} consists of'\n    ]\n  },\n  {\n    'tag': '@param <O> the type of object the {@link Iterable} contains',\n    'alternatives': [\n      '@param <O> the object type that the {@link Iterable} includes',\n      '@param <O> the kind of object that the {@link Iterable} holds',\n      '@param <O> the type of items in the {@link Iterable}',\n      '@param <O> the element kind contained in the {@link Iterable}',\n      '@param <O> the category of object the {@link Iterable} consists of'\n    ]\n  },\n  {\n    'tag': '@param <R> the type of the output {@link Collection}',\n    'alternatives': [\n      '@param <R> the object type of the output {@link Collection}',\n      '@param <R> the kind of the output {@link Collection}',\n      '@param <R> the type of items in the output {@link Collection}',\n      '@param <R> the element kind of the output {@link Collection}',\n      '@param <R> the category of the output {@link Collection}'\n    ]\n  },\n  {\n    'tag': '@param iterable the collection to get the input from, may be null',\n    'alternatives': [\n      '@param iterable the collection to retrieve the input from, can be null.',\n      '@param iterable the collection to obtain the input from, may be null.',\n      '@param iterable the collection to extract the input from, can be null.',\n      '@param iterable the collection to acquire the input from, may be null.',\n      '@param iterable the collection to obtain the input values, can be null.'\n    ]\n  },\n  {\n    'tag': '@param partitionFactory the factory used to create the output collections',\n    'alternatives': [\n      '@param partitionFactory the factory that generates the output collections.',\n      '@param partitionFactory the factory responsible for creating the output collections.',\n      '@param partitionFactory the factory that produces the output collections.',\n      '@param partitionFactory the factory utilized to generate the output collections.',\n      '@param partitionFactory the factory used for creating the output collections.'\n    ]\n  },\n  {\n    'tag': '@return a list containing the output collections',\n    'alternatives': [\n      '@return a list that includes the resulting collections.',\n      '@return a list that holds the output collections.',\n      '@return a list containing the produced collections.',\n      '@return a list comprising the generated collections.',\n      '@return a list that contains the resulting collections.'\n    ]\n  },\n  {\n    'tag': '@param <E> the element type',\n    'alternatives': [\n      '@param <E> the type of element',\n      '@param <E> the kind of element',\n      '@param <E> the element class',\n      '@param <E> the specific element',\n      '@param <E> the category of element'\n    ]\n  },\n  {\n    'tag': '@param iterable the iterable to use, may be null',\n    'alternatives': [\n      '@param iterable the iterable to utilize, can be null.',\n      '@param iterable the iterable to apply, may be null.',\n      '@param iterable the iterable to employ, can be null.',\n      '@param iterable the iterable to utilize, may be null.',\n      '@param iterable the iterable to use, can be null.'\n    ]\n  },\n  {\n    'tag': '@return a list of the iterator contents',\n    'alternatives': [\n      '@return a list containing the contents of the iterator.',\n      '@return a list that holds the values from the iterator.',\n      '@return a list consisting of the elements from the iterator.',\n      '@return a list containing the items obtained from the iterator.',\n      '@return a list comprising the contents of the iterator.'\n    ]\n  },\n  {\n    'tag': '@param <E> the element type',\n    'alternatives': [\n      '@param <E> the type of element',\n      '@param <E> the kind of element',\n      '@param <E> the element class',\n      '@param <E> the specific element',\n      '@param <E> the category of element'\n    ]\n  },\n  {\n    'tag': '@param iterable the iterable to convert to a string, may be null',\n    'alternatives': [\n      '@param iterable the iterable to transform into a string, can be null.',\n      '@param iterable the iterable to convert into a string representation, may be null.',\n      '@param iterable the iterable to represent as a string, can be null.',\n      '@param iterable the iterable to convert to a string format, may be null.',\n      '@param iterable the iterable to convert to a string, can be null.'\n    ]\n  },\n  {\n    'tag': '@return a string representation of {@code iterable}',\n    'alternatives': [\n      '@return a string that represents {@code iterable}.',\n      '@return a string that depicts {@code iterable}.',\n      '@return a string representation of the {@code iterable} object.',\n      '@return a string that shows {@code iterable}.',\n      '@return a string that describes {@code iterable}.'\n    ]\n  },\n  {\n    'tag': '@param <E> the element type',\n    'alternatives': [\n      '@param <E> the type of element',\n      '@param <E> the kind of element',\n      '@param <E> the element class',\n      '@param <E> the specific element',\n      '@param <E> the category of element'\n    ]\n  }\n]"