"output = [\n  {\n    'tag': '@return interpolated value',\n    'alternatives': [\n      '@return value obtained through interpolation',\n      '@return the value obtained by performing interpolation',\n      '@return the value that is interpolated',\n      '@return the interpolated result',\n      '@return the value obtained from the interpolation process'\n    ]\n  },\n  {\n    'tag': '@throws NoDataException if sample is empty',\n    'alternatives': [\n      '@throws NoDataException when the sample is empty',\n      '@throws NoDataException in case the sample is empty',\n      '@throws NoDataException if the sample has no data',\n      '@throws NoDataException if the sample does not contain any data',\n      '@throws NoDataException if there is no data in the sample'\n    ]\n  },\n  {\n    'tag': '@throws NoDataException if interpolation cannot be performed\\nbecause sample is empty',\n    'alternatives': [\n      '@throws NoDataException when interpolation cannot be performed due to an empty sample',\n      '@throws NoDataException if the sample is empty and interpolation cannot be performed',\n      '@throws NoDataException if an empty sample leads to inability to perform interpolation',\n      '@throws NoDataException if interpolation is not possible when the sample is empty',\n      '@throws NoDataException if the sample is empty, preventing interpolation'\n    ]\n  },\n  {\n    'tag': '@param c polynomials coefficients',\n    'alternatives': [\n      '@param c coefficients of the polynomials',\n      '@param c coefficients of the polynomial',\n      '@param c the coefficients of the polynomials',\n      '@param c the coefficients of the polynomial',\n      '@param c the polynomial coefficients'\n    ]\n  },\n  {\n    'tag': '@return polynomial',\n    'alternatives': [\n      '@return the polynomial',\n      '@return the resulting polynomial',\n      '@return the polynomial function',\n      '@return the polynomial expression',\n      '@return the polynomial representation'\n    ]\n  },\n  {\n    'tag': '@throws OutOfRangeException if any of the variables is outside its interpolation range.',\n    'alternatives': [\n      '@throws OutOfRangeException when any variable exceeds its interpolation range.',\n      '@throws OutOfRangeException if any variable falls outside its interpolation range.',\n      '@throws OutOfRangeException if any of the variables is beyond its interpolation range.',\n      '@throws OutOfRangeException if any variable is not within its interpolation range.',\n      '@throws OutOfRangeException if any of the variables is outside the allowed interpolation range.'\n    ]\n  },\n  {\n    'tag': '@param x First coordinate.',\n    'alternatives': [\n      '@param x The first coordinate.',\n      '@param x The initial coordinate.',\n      '@param x The coordinate to be considered as the first.',\n      '@param x The value of the first coordinate.',\n      '@param x The starting coordinate.'\n    ]\n  },\n  {\n    'tag': '@param y Second coordinate.',\n    'alternatives': [\n      '@param y The second coordinate.',\n      '@param y The subsequent coordinate.',\n      '@param y The coordinate to be considered as the second.',\n      '@param y The value of the second coordinate.',\n      '@param y The following coordinate.'\n    ]\n  },\n  {\n    'tag': '@param z Third coordinate.',\n    'alternatives': [\n      '@param z The third coordinate.',\n      '@param z The last coordinate.',\n      '@param z The coordinate to be considered as the third.',\n      '@param z The value of the third coordinate.',\n      '@param z The ending coordinate.'\n    ]\n  },\n  {\n    'tag': '@return {@code true} if (x, y, z) is a valid point.',\n    'alternatives': [\n      '@return {@code true} if the point (x, y, z) is valid.',\n      '@return whether the point (x, y, z) is a valid one.',\n      '@return {@code true} if the coordinates (x, y, z) represent a valid point.',\n      '@return indicates whether the point (x, y, z) is considered valid.',\n      '@return {@code true} if the point with coordinates (x, y, z) is valid.'\n    ]\n  },\n  {\n    'tag': '@param c Coordinate.',\n    'alternatives': [\n      '@param c The coordinate.',\n      '@param c The specified coordinate.',\n      '@param c The given coordinate.',\n      '@param c The value of the coordinate.',\n      '@param c The coordinate to be considered.'\n    ]\n  },\n  {\n    'tag': '@param val Coordinate samples.',\n    'alternatives': [\n      '@param val The coordinate samples.',\n      '@param val The specified coordinate samples.',\n      '@param val The given coordinate samples.',\n      '@param val The values of the coordinate samples.',\n      '@param val The samples of the coordinates.'\n    ]\n  },\n  {\n    'tag': '@return the index in {@code val} corresponding to the interval containing {@code c}, or {@code -1}\\n  if {@code c} is out of the range defined by the end values of {@code val}.',\n    'alternatives': [\n      '@return the index in {@code val} that corresponds to the interval containing {@code c}, or {@code -1}\\n  if {@code c} is beyond the range defined by the end values of {@code val}.',\n      '@return the index in {@code val} that represents the interval containing {@code c}, or {@code -1}\\n  if {@code c} falls outside the range defined by the end values of {@code val}.',\n      '@return the index in {@code val} which identifies the interval containing {@code c}, or {@code -1}\\n  if {@code c} is not within the range defined by the end values of {@code val}.',\n      '@return the index in {@code val} corresponding to the interval where {@code c} is located, or {@code -1}\\n  if {@code c} is outside the range defined by the end values of {@code val}.',\n      '@return the index in {@code val} that points to the interval that includes {@code c}, or {@code -1}\\n  if {@code c} is outside the range defined by the end values of {@code val}.'\n    ]\n  },\n  {\n    'tag': '@param beta List of function values and function partial derivatives values.',\n    'alternatives': [\n      '@param beta The list of function values and function partial derivatives values.',\n      '@param beta The specified list of function values and function partial derivatives values.',\n      '@param beta The given list of function values and function partial derivatives values.',\n      '@param beta The values of the list containing function values and function partial derivatives values.',\n      '@param beta The list that contains function values and function partial derivatives values.'\n    ]\n  },\n  {\n    'tag': '@return the spline coefficients.',\n    'alternatives': [\n      '@return the coefficients of the spline.',\n      '@return the resulting spline coefficients.',\n      '@return the coefficients obtained from the spline.',\n      '@return the spline representation coefficients.',\n      '@return the expression of the spline coefficients.'\n    ]\n  },\n  {\n    'tag': '@param inverseCumAccuracy Maximum absolute error in inverse\\ncumulative probability estimates (defaults to\\n{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\n    'alternatives': [\n      '@param inverseCumAccuracy The maximum absolute error in inverse cumulative probability estimates (defaults to\\n{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\n      '@param inverseCumAccuracy The specified maximum absolute error in inverse cumulative probability estimates (defaults to\\n{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\n      '@param inverseCumAccuracy The given maximum absolute error in inverse cumulative probability estimates (defaults to\\n{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\n      '@param inverseCumAccuracy Maximum allowed absolute error in inverse cumulative probability estimates (defaults to\\n{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\n      '@param inverseCumAccuracy Maximum error limit in inverse cumulative probability estimates (defaults to\\n{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).'\n    ]\n  },\n  {\n    'tag': '@param rng Random number generator.',\n    'alternatives': [\n      '@param rng The random number generator.',\n      '@param rng The specified random number generator.',\n      '@param rng The given random number generator.',\n      '@param rng The generator of random numbers.',\n      '@param rng The instance of the random number generator.'\n    ]\n  },\n  {\n    'tag': '@param x the point at which the PMF is evaluated',\n    'alternatives': [\n      '@param x The point to evaluate the PMF.',\n      '@param x The specified point to evaluate the PMF.',\n      '@param x The given point to evaluate the PMF.',\n      '@param x The point where the PMF is calculated.',\n      '@param x The value to compute the PMF for.'\n    ]\n  },\n  {\n    'tag': '@return the value of the probability mass function at point {@code x}',\n    'alternatives': [\n      '@return the value obtained from the probability mass function at point {@code x}',\n      '@return the result of the probability mass function at point {@code x}',\n      '@return the computed value of the probability mass function at point {@code x}',\n      '@return the value that the probability mass function yields at point {@code x}',\n      '@return the output value of the probability mass function at point {@code x}'\n    ]\n  },\n  {\n    'tag': '@param x the point at which the PDF is evaluated',\n    'alternatives': [\n      '@param x The point to evaluate the PDF.',\n      '@param x The specified point to evaluate the PDF.',\n      '@param x The given point to evaluate the PDF.',\n      '@param x The point where the PDF is calculated.',\n      '@param x The value to compute the PDF for.'\n    ]\n  },\n  {\n    'tag': '@return the value of the probability density function at point {@code x}',\n    'alternatives': [\n      '@return the value obtained from the probability density function at point {@code x}',\n      '@return the result of the probability density function at point {@code x}',\n      '@return the computed value of the probability density function at point {@code x}',\n      '@return the value that the probability density function yields at point {@code x}',\n      '@return the output value of the probability density function at point {@code x}'\n    ]\n  },\n  {\n    'tag': '@param x the point at which the CDF is evaluated',\n    'alternatives': [\n      '@param x The point to evaluate the CDF.',\n      '@param x The specified point to evaluate the CDF.',\n      '@param x The given point to evaluate the CDF.',\n      '@param x The point where the CDF is calculated.',\n      '@param x The value to compute the CDF for.'\n    ]\n  },\n  {\n    'tag': '@param x0 the exclusive lower bound',\n    'alternatives': [\n      '@param x0 The lower bound (exclusive).',\n      '@param x0 The specified exclusive lower bound.',\n      '@param x0 The given exclusive lower bound.',\n      '@param x0 The exclusive minimum value.',\n      '@param x0 The value that forms the exclusive lower limit.'\n    ]\n  }\n]"