"output=[\n  {\n    'tag': '@return The newly created edge if added to the graph, otherwise <code>\\nnull</code>.',\n    'alternatives': [\n      '@return The newly formed edge if added to the graph, otherwise <code>\\nnull</code>.',\n      '@return The recently added edge if it belongs to the graph, otherwise <code>\\nnull</code>.',\n      '@return The edge created recently if it is included in the graph, otherwise <code>\\nnull</code>.',\n      '@return The edge that has been added recently if it is part of the graph, otherwise <code>\\nnull</code>.',\n      '@return The edge that was just added to the graph, or <code>\\nnull</code> if not added.'\n    ]\n  },\n  {\n    'tag': '@param targetGraph the graph for which the specified edge to be added.',\n    'alternatives': [\n      '@param targetGraph the graph in which the desired edge should be added.',\n      '@param targetGraph the graph where the specified edge needs to be included.',\n      '@param targetGraph the graph to which the indicated edge is to be added.',\n      '@param targetGraph the graph in which the specified edge should be included.',\n      '@param targetGraph the graph where the desired edge is going to be added.'\n    ]\n  },\n  {\n    'tag': '@param sourceGraph the graph in which the specified edge is already\\npresent',\n    'alternatives': [\n      '@param sourceGraph the graph in which the indicated edge is already\\nexisting',\n      '@param sourceGraph the graph where the specified edge is already\\npresent',\n      '@param sourceGraph the graph in which the specified edge is already\\nexisting',\n      '@param sourceGraph the graph where the indicated edge is already\\npresent',\n      '@param sourceGraph the graph in which the desired edge is already\\npresent'\n    ]\n  },\n  {\n    'tag': '@param edge edge to add',\n    'alternatives': [\n      '@param edge the edge to be added',\n      '@param edge the edge that should be included',\n      '@param edge the edge to add to the graph',\n      '@param edge the edge that needs to be added',\n      '@param edge the edge that is going to be added'\n    ]\n  },\n  {\n    'tag': '@param g the graph for which the specified edge to be added.',\n    'alternatives': [\n      '@param g the graph in which the desired edge should be added.',\n      '@param g the graph where the specified edge needs to be included.',\n      '@param g the graph to which the indicated edge is to be added.',\n      '@param g the graph in which the specified edge should be included.',\n      '@param g the graph where the desired edge is going to be added.'\n    ]\n  },\n  {\n    'tag': '@param sourceVertex source vertex of the edge.',\n    'alternatives': [\n      '@param sourceVertex the vertex from which the edge originates.',\n      '@param sourceVertex the starting vertex of the edge.',\n      '@param sourceVertex the vertex that serves as the source of the edge.',\n      '@param sourceVertex the vertex that the edge originates from.',\n      '@param sourceVertex the vertex where the edge begins.'\n    ]\n  },\n  {\n    'tag': '@param targetVertex target vertex of the edge.',\n    'alternatives': [\n      '@param targetVertex the vertex to which the edge is directed.',\n      '@param targetVertex the ending vertex of the edge.',\n      '@param targetVertex the vertex that the edge points to.',\n      '@param targetVertex the vertex that serves as the target of the edge.',\n      '@param targetVertex the vertex where the edge leads to.'\n    ]\n  },\n  {\n    'tag': '@param weight weight of the edge.',\n    'alternatives': [\n      '@param weight the weight assigned to the edge.',\n      '@param weight the numerical value associated with the edge.',\n      '@param weight the magnitude of the edge.',\n      '@param weight the value representing the edge.',\n      '@param weight the weightage of the edge.'\n    ]\n  },\n  {\n    'tag': '@return The newly created edge if added to the graph, otherwise <code>\\nnull</code>.',\n    'alternatives': [\n      '@return The newly formed edge if added to the graph, otherwise <code>\\nnull</code>.',\n      '@return The recently added edge if it belongs to the graph, otherwise <code>\\nnull</code>.',\n      '@return The edge created recently if it is included in the graph, otherwise <code>\\nnull</code>.',\n      '@return The edge that has been added recently if it is part of the graph, otherwise <code>\\nnull</code>.',\n      '@return The edge that was just added to the graph, or <code>\\nnull</code> if not added.'\n    ]\n  },\n  {\n    'tag': '@param destination the graph to which vertices and edges are added.',\n    'alternatives': [\n      '@param destination the graph where vertices and edges are included.',\n      '@param destination the graph in which vertices and edges are inserted.',\n      '@param destination the graph that receives the vertices and edges.',\n      '@param destination the graph where vertices and edges are appended.',\n      '@param destination the graph that collects the vertices and edges.'\n    ]\n  },\n  {\n    'tag': '@param source the graph used as source for vertices and edges to add.',\n    'alternatives': [\n      '@param source the graph serving as a source for adding vertices and edges.',\n      '@param source the graph from which vertices and edges are taken to add.',\n      '@param source the graph that acts as the source for adding vertices and edges.',\n      '@param source the graph that provides the vertices and edges to be added.',\n      '@param source the graph used as the origin for adding vertices and edges.'\n    ]\n  },\n  {\n    'tag': '@return <code>true</code> if and only if the destination graph has been\\nchanged as a result of this operation.',\n    'alternatives': [\n      '@return <code>true</code> if the destination graph has been modified due to this operation.',\n      '@return <code>true</code> only if the destination graph has been altered by this action.',\n      '@return <code>true</code> if this operation resulted in a change in the destination graph.',\n      '@return <code>true</code> if the destination graph was modified as a consequence of this operation.',\n      '@return <code>true</code> if the destination graph has been modified by this operation.'\n    ]\n  },\n  {\n    'tag': '@param destination the graph to which vertices and edges are added.',\n    'alternatives': [\n      '@param destination the graph where vertices and edges are included.',\n      '@param destination the graph in which vertices and edges are inserted.',\n      '@param destination the graph that receives the vertices and edges.',\n      '@param destination the graph where vertices and edges are appended.',\n      '@param destination the graph that collects the vertices and edges.'\n    ]\n  },\n  {\n    'tag': '@param source the graph used as source for vertices and edges to add.',\n    'alternatives': [\n      '@param source the graph serving as a source for adding vertices and edges.',\n      '@param source the graph from which vertices and edges are taken to add.',\n      '@param source the graph that acts as the source for adding vertices and edges.',\n      '@param source the graph that provides the vertices and edges to be added.',\n      '@param source the graph used as the origin for adding vertices and edges.'\n    ]\n  },\n  {\n    'tag': '@param destination the graph to which edges are to be added',\n    'alternatives': [\n      '@param destination the graph to which the edges will be appended',\n      '@param destination the graph where edges should be included',\n      '@param destination the graph that receives the edges',\n      '@param destination the graph on which edges are added',\n      '@param destination the graph where edges are to be inserted'\n    ]\n  },\n  {\n    'tag': '@param source the graph used as a source for edges to add',\n    'alternatives': [\n      '@param source the graph from which edges are taken to add',\n      '@param source the graph that serves as the source for adding edges',\n      '@param source the graph providing edges to be added',\n      '@param source the graph acting as the origin of edges to add',\n      '@param source the graph used to get edges for addition'\n    ]\n  },\n  {\n    'tag': '@param edges the edges to be added',\n    'alternatives': [\n      '@param edges the edges that should be included',\n      '@param edges the edges that need to be added',\n      '@param edges the edges to add to the graph',\n      '@param edges the edges that are going to be added',\n      '@param edges the edges that are to be appended'\n    ]\n  },\n  {\n    'tag': '@return <tt>true</tt> if this graph changed as a result of the call',\n    'alternatives': [\n      '@return <tt>true</tt> if this graph was modified after the method call',\n      '@return <tt>true</tt> if this graph was altered due to the invocation',\n      '@return <tt>true</tt> if this graph has been changed from the call',\n      '@return <tt>true</tt> if this graph was modified by the call',\n      '@return <tt>true</tt> if this graph was updated as a result of the call'\n    ]\n  },\n  {\n    'tag': '@param destination the graph to which edges are to be added',\n    'alternatives': [\n      '@param destination the graph to which the edges will be appended',\n      '@param destination the graph where edges should be included',\n      '@param destination the graph that receives the edges',\n      '@param destination the graph on which edges are added',\n      '@param destination the graph where edges are to be inserted'\n    ]\n  },\n  {\n    'tag': '@param vertices the vertices to be added to the graph.',\n    'alternatives': [\n      '@param vertices the vertices that should be included in the graph.',\n      '@param vertices the vertices that need to be added to the graph.',\n      '@param vertices the vertices to add to the graph.',\n      '@param vertices the vertices that are going to be added.',\n      '@param vertices the vertices that are to be appended to the graph.'\n    ]\n  },\n  {\n    'tag': '@return <tt>true</tt> if graph changed as a result of the call',\n    'alternatives': [\n      '@return <tt>true</tt> if the graph was modified after the method call',\n      '@return <tt>true</tt> if the graph was altered due to the invocation',\n      '@return <tt>true</tt> if the graph has been changed from the call',\n      '@return <tt>true</tt> if the graph was modified by the call',\n      '@return <tt>true</tt> if the graph was updated as a result of the call'\n    ]\n  },\n  {\n    'tag': '@param g the graph to look for neighbors in.',\n    'alternatives': [\n      '@param g the graph to search for neighboring vertices.',\n      '@param g the graph in which to find neighboring vertices.',\n      '@param g the graph to explore for adjacent vertices.',\n      '@param g the graph to check for neighboring vertices.',\n      '@param g the graph to examine for connected vertices.'\n    ]\n  },\n  {\n    'tag': '@param vertex the vertex to get the neighbors of.',\n    'alternatives': [\n      '@param vertex the vertex from which to obtain the adjacent vertices.',\n      '@param vertex the vertex whose neighboring vertices are required.',\n      '@param vertex the vertex to extract the neighboring vertices of.',\n      '@param vertex the vertex for which the adjacent vertices are needed.',\n      '@param vertex the vertex to retrieve the neighbors of.'\n    ]\n  },\n  {\n    'tag': '@return a list of the vertices that are the neighbors of the specified\\nvertex.',\n    'alternatives': [\n      '@return a list containing the vertices that are adjacent to the specified\\nvertex.',\n      '@return a list of vertices that are connected to the specified\\nvertex.',\n      '@return a list of neighboring vertices from the specified vertex.',\n      '@return a list of vertices that are neighbors of the given vertex.',\n      '@return a list of vertices that are directly connected to the specified\\nvertex.'\n    ]\n  },\n  {\n    'tag': '@param g the graph to look for predecessors in.',\n    'alternatives': [\n      '@param g the graph to search for preceding vertices.',\n      '@param g the graph in which to find predecessor vertices.',\n      '@param g the graph to explore for previous vertices.',\n      '@param g the graph to check for predecessor vertices.',\n      '@param g the graph to examine for preceding vertices.'\n    ]\n  }\n]"