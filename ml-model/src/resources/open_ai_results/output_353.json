"output=[\n  {\n    'tag': '@param b4 second factor of the third term',\n    'alternatives': [\n      '@param b4 second component of the third expression',\n      '@param b4 second variable of the third equation',\n      '@param b4 second coefficient of the third term',\n      '@param b4 second element of the third factor',\n      '@param b4 second value of the third operand'\n    ]\n  },\n  {\n    'tag': '@param x first array',\n    'alternatives': [\n      '@param x initial array',\n      '@param x source array',\n      '@param x starting array',\n      '@param x primary array',\n      '@param x input array'\n    ]\n  },\n  {\n    'tag': '@param y second array',\n    'alternatives': [\n      '@param y secondary array',\n      '@param y target array',\n      '@param y next array',\n      '@param y alternative array',\n      '@param y output array'\n    ]\n  },\n  {\n    'tag': '@return true if the values are both null or have same dimension\\nand equal elements.',\n    'alternatives': [\n      '@return true when both values are null or have identical size\\nand equal elements',\n      '@return true if both values are null or share the same length and\\nhave equivalent elements',\n      '@return true if both values are either null or have the same size and\\nmatching elements',\n      '@return true if both values are null or have matching dimensions and\\nequal elements',\n      '@return true if the values are null or have equivalent length and\\nmatching elements'\n    ]\n  },\n  {\n    'tag': '@param x First array.',\n    'alternatives': [\n      '@param x Initial array.',\n      '@param x Source array.',\n      '@param x Starting array.',\n      '@param x Primary array.',\n      '@param x Input array.'\n    ]\n  },\n  {\n    'tag': '@param y Second array.',\n    'alternatives': [\n      '@param y Secondary array.',\n      '@param y Target array.',\n      '@param y Next array.',\n      '@param y Alternative array.',\n      '@param y Output array.'\n    ]\n  },\n  {\n    'tag': '@return true if the values are both null or have same dimension and\\nequal elements',\n    'alternatives': [\n      '@return true when both values are null or have identical size and\\nequal elements',\n      '@return true if both values are null or share the same length and\\nequivalent elements',\n      '@return true if both values are either null or have the same size and\\nmatching elements',\n      '@return true if both values are null or have matching dimensions and\\nequal elements',\n      '@return true if the values are null or have equivalent length and\\nequal elements'\n    ]\n  },\n  {\n    'tag': '@param x First array.',\n    'alternatives': [\n      '@param x Initial array.',\n      '@param x Source array.',\n      '@param x Starting array.',\n      '@param x Primary array.',\n      '@param x Input array.'\n    ]\n  },\n  {\n    'tag': '@param y Second array.',\n    'alternatives': [\n      '@param y Secondary array.',\n      '@param y Target array.',\n      '@param y Next array.',\n      '@param y Alternative array.',\n      '@param y Output array.'\n    ]\n  },\n  {\n    'tag': '@return {@code true} if the values are both {@code null} or have same\\ndimension and equal elements.',\n    'alternatives': [\n      '@return {@code true} when both values are {@code null} or have identical\\nsize and equal elements',\n      '@return {@code true} if both values are {@code null} or share the same\\nlength and equivalent elements',\n      '@return {@code true} if both values are either {@code null} or have the same\\nsize and matching elements',\n      '@return {@code true} if both values are {@code null} or have matching\\ndimensions and equal elements',\n      '@return {@code true} if the values are {@code null} or have equivalent\\nlength and equal elements'\n    ]\n  },\n  {\n    'tag': '@param x First array.',\n    'alternatives': [\n      '@param x Initial array.',\n      '@param x Source array.',\n      '@param x Starting array.',\n      '@param x Primary array.',\n      '@param x Input array.'\n    ]\n  },\n  {\n    'tag': '@param y Second array.',\n    'alternatives': [\n      '@param y Secondary array.',\n      '@param y Target array.',\n      '@param y Next array.',\n      '@param y Alternative array.',\n      '@param y Output array.'\n    ]\n  },\n  {\n    'tag': '@return {@code true} if the values are both {@code null} or have same\\ndimension and equal elements.',\n    'alternatives': [\n      '@return {@code true} when both values are {@code null} or have identical\\nsize and equal elements',\n      '@return {@code true} if both values are {@code null} or share the same\\nlength and equivalent elements',\n      '@return {@code true} if both values are either {@code null} or have the same\\nsize and matching elements',\n      '@return {@code true} if both values are {@code null} or have matching\\ndimensions and equal elements',\n      '@return {@code true} if the values are {@code null} or have equivalent\\nlength and equal elements'\n    ]\n  },\n  {\n    'tag': '@param values Input array to be normalized',\n    'alternatives': [\n      '@param values Array to be normalized as input',\n      '@param values Array to be normalized',\n      '@param values Array that needs to be normalized',\n      '@param values Input array that should be normalized',\n      '@param values The array to normalize'\n    ]\n  },\n  {\n    'tag': '@param normalizedSum Target sum for the normalized array',\n    'alternatives': [\n      '@param normalizedSum Sum desired for the normalized array',\n      '@param normalizedSum Goal sum for the normalized array',\n      '@param normalizedSum Sum to be achieved for the normalized array',\n      '@param normalizedSum The sum that the normalized array should have',\n      '@param normalizedSum Desired sum for the normalized array'\n    ]\n  },\n  {\n    'tag': '@return the normalized array.',\n    'alternatives': [\n      '@return the array after normalization.',\n      '@return the resulting array after normalization.',\n      '@return the array that has been normalized.',\n      '@return the array with applied normalization.',\n      '@return the array that was normalized.'\n    ]\n  },\n  {\n    'tag': '@param <V> the value type',\n    'alternatives': [\n      '@param <V> the type of value',\n      '@param <V> the value parameter type',\n      '@param <V> the type of the value',\n      '@param <V> the value element type',\n      '@param <V> the value generic type'\n    ]\n  },\n  {\n    'tag': '@param map the map to use',\n    'alternatives': [\n      '@param map the utilized map',\n      '@param map the map instance to employ',\n      '@param map the chosen map',\n      '@param map the used map',\n      '@param map the map that will be used'\n    ]\n  },\n  {\n    'tag': '@param key the key to look up',\n    'alternatives': [\n      '@param key the searched key',\n      '@param key the key to search for',\n      '@param key the sought-after key',\n      '@param key the key to retrieve',\n      '@param key the key that will be looked up'\n    ]\n  },\n  {\n    'tag': '@return the value in the Map, <code>null</code> if null map input',\n    'alternatives': [\n      '@return the value stored in the Map, <code>null</code> if the map is null',\n      '@return the value retrieved from the Map, <code>null</code> if the map is null',\n      '@return the value obtained from the Map, <code>null</code> if the map is null',\n      '@return the value contained in the Map, <code>null</code> if the map is null',\n      '@return the value returned by the Map, <code>null</code> if the map is null'\n    ]\n  },\n  {\n    'tag': '@param <K> the key type',\n    'alternatives': [\n      '@param <K> the type of key',\n      '@param <K> the key parameter type',\n      '@param <K> the type of the key',\n      '@param <K> the key element type',\n      '@param <K> the key generic type'\n    ]\n  },\n  {\n    'tag': '@param map the map to use',\n    'alternatives': [\n      '@param map the utilized map',\n      '@param map the map instance to employ',\n      '@param map the chosen map',\n      '@param map the used map',\n      '@param map the map that will be used'\n    ]\n  },\n  {\n    'tag': '@param key the key to look up',\n    'alternatives': [\n      '@param key the searched key',\n      '@param key the key to search for',\n      '@param key the sought-after key',\n      '@param key the key to retrieve',\n      '@param key the key that will be looked up'\n    ]\n  },\n  {\n    'tag': '@return the value in the Map as a String, <code>null</code> if null map input',\n    'alternatives': [\n      '@return the value in the Map represented as a String, <code>null</code> if the map is null',\n      '@return the String representation of the value in the Map, <code>null</code> if the map is null',\n      '@return the value from the Map converted into a String, <code>null</code> if the map is null',\n      '@return the value in the Map as a String, <code>null</code> if the map is null',\n      '@return the value in the Map returned as a String, <code>null</code> if the map is null'\n    ]\n  },\n  {\n    'tag': '@param <K> the key type',\n    'alternatives': [\n      '@param <K> the type of key',\n      '@param <K> the key parameter type',\n      '@param <K> the type of the key',\n      '@param <K> the key element type',\n      '@param <K> the key generic type'\n    ]\n  }\n]"