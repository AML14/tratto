"output = [\n{\n  'tag': '@param end first order scaled derivatives at step end',\n  'alternatives': [\n    '@param end first order scaled derivatives at end step',\n    '@param end scaled derivatives of first order at step end',\n    '@param end scaled derivatives at step end of first order',\n    '@param end scaled derivatives at the end step of first order',\n    '@param end scale derivatives of the first order at step end'\n  ]\n},\n{\n  'tag': \"@param highOrder high order scaled derivatives, will be modified\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n  'alternatives': [\n    \"@param highOrder modified scaled derivatives of high order\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n    \"@param highOrder scaled derivatives of high order, to be altered\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n    \"@param highOrder scaled derivatives of high order that will be changed\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n    \"@param highOrder high order scaled derivatives, subjected to modification\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\",\n    \"@param highOrder high order scaled derivatives, which will be updated\\n(h<sup>2</sup>/2 y'', ... h<sup>k</sup>/k! y(k))\"\n  ]\n},\n{\n  'tag': '@param field field to which the time and state vector elements belong',\n  'alternatives': [\n    '@param field field to which elements of time and state vector belong',\n    '@param field to which the elements of time and state vector belong',\n    '@param field to which the time and vector elements belong',\n    '@param field to which the elements of time and vector state belong',\n    '@param field to which time and vector state elements belong'\n  ]\n},\n{\n  'tag': '@param name name of the method',\n  'alternatives': [\n    '@param name method name',\n    '@param name of the specific method',\n    '@param name of the given method',\n    '@param name that specifies the method',\n    '@param name indicating the method'\n  ]\n},\n{\n  'tag': '@param nSteps number of steps of the method excluding the one being computed',\n  'alternatives': [\n    '@param nSteps number of method steps excluding the current one',\n    '@param nSteps method steps count excluding the one being computed',\n    '@param nSteps count of steps of the method except the current one',\n    '@param nSteps total number of method steps excluding the current one',\n    '@param nSteps number of steps in the method excluding the current one'\n  ]\n},\n{\n  'tag': '@param order order of the method',\n  'alternatives': [\n    '@param order method order',\n    '@param order of the specified method',\n    '@param order of the given method',\n    '@param order that indicates the method',\n    '@param order showing the method'\n  ]\n},\n{\n  'tag': '@param minStep minimal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n  'alternatives': [\n    '@param minStep minimum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward), the last step can be smaller',\n    '@param minStep smallest step (sign doesn\\'t matter, regardless of integration direction, forward or backward), the last step can be smaller',\n    '@param minStep minimum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward). The last step can be smaller than this.',\n    '@param minStep smallest step size (sign doesn\\'t matter, regardless of integration direction, forward or backward). The last step can be smaller than this.',\n    '@param minStep minimum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward), with the possibility of the last step being smaller'\n  ]\n},\n{\n  'tag': '@param maxStep maximal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n  'alternatives': [\n    '@param maxStep maximum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward), the last step can be smaller',\n    '@param maxStep largest step (sign doesn\\'t matter, regardless of integration direction, forward or backward), the last step can be smaller',\n    '@param maxStep maximum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward). The last step can be smaller than this.',\n    '@param maxStep largest step size (sign doesn\\'t matter, regardless of integration direction, forward or backward). The last step can be smaller than this.',\n    '@param maxStep maximum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward), with the possibility of the last step being smaller'\n  ]\n},\n{\n  'tag': '@param scalAbsoluteTolerance allowed absolute error',\n  'alternatives': [\n    '@param scalAbsoluteTolerance permissible absolute error',\n    '@param scalAbsoluteTolerance accepted absolute error',\n    '@param scalAbsoluteTolerance specified absolute error',\n    '@param scalAbsoluteTolerance absolute error allowed',\n    '@param scalAbsoluteTolerance absolute error that is allowed'\n  ]\n},\n{\n  'tag': '@param scalRelativeTolerance allowed relative error',\n  'alternatives': [\n    '@param scalRelativeTolerance permissible relative error',\n    '@param scalRelativeTolerance accepted relative error',\n    '@param scalRelativeTolerance specified relative error',\n    '@param scalRelativeTolerance relative error allowed',\n    '@param scalRelativeTolerance relative error that is allowed'\n  ]\n},\n{\n  'tag': '@param field field to which the time and state vector elements belong',\n  'alternatives': [\n    '@param field field to which elements of time and state vector belong',\n    '@param field to which the elements of time and state vector belong',\n    '@param field to which the time and vector elements belong',\n    '@param field to which the elements of time and vector state belong',\n    '@param field to which time and vector state elements belong'\n  ]\n},\n{\n  'tag': '@param name name of the method',\n  'alternatives': [\n    '@param name method name',\n    '@param name of the specific method',\n    '@param name of the given method',\n    '@param name that specifies the method',\n    '@param name indicating the method'\n  ]\n},\n{\n  'tag': '@param nSteps number of steps of the method excluding the one being computed',\n  'alternatives': [\n    '@param nSteps number of method steps excluding the current one',\n    '@param nSteps method steps count excluding the one being computed',\n    '@param nSteps count of steps of the method except the current one',\n    '@param nSteps total number of method steps excluding the current one',\n    '@param nSteps number of steps in the method excluding the current one'\n  ]\n},\n{\n  'tag': '@param order order of the method',\n  'alternatives': [\n    '@param order method order',\n    '@param order of the specified method',\n    '@param order of the given method',\n    '@param order that indicates the method',\n    '@param order showing the method'\n  ]\n},\n{\n  'tag': '@param minStep minimal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n  'alternatives': [\n    '@param minStep minimum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward), the last step can be smaller',\n    '@param minStep smallest step (sign doesn\\'t matter, regardless of integration direction, forward or backward), the last step can be smaller',\n    '@param minStep minimum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward). The last step can be smaller than this.',\n    '@param minStep smallest step size (sign doesn\\'t matter, regardless of integration direction, forward or backward). The last step can be smaller than this.',\n    '@param minStep minimum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward), with the possibility of the last step being smaller'\n  ]\n},\n{\n  'tag': '@param maxStep maximal step (sign is irrelevant, regardless of\\nintegration direction, forward or backward), the last step can\\nbe smaller than this',\n  'alternatives': [\n    '@param maxStep maximum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward), the last step can be smaller',\n    '@param maxStep largest step (sign doesn\\'t matter, regardless of integration direction, forward or backward), the last step can be smaller',\n    '@param maxStep maximum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward). The last step can be smaller than this.',\n    '@param maxStep largest step size (sign doesn\\'t matter, regardless of integration direction, forward or backward). The last step can be smaller than this.',\n    '@param maxStep maximum step size (sign doesn\\'t matter, irrespective of integration direction, forward or backward), with the possibility of the last step being smaller'\n  ]\n},\n{\n  'tag': '@param vecAbsoluteTolerance allowed absolute error',\n  'alternatives': [\n    '@param vecAbsoluteTolerance permissible absolute error',\n    '@param vecAbsoluteTolerance accepted absolute error',\n    '@param vecAbsoluteTolerance specified absolute error',\n    '@param vecAbsoluteTolerance absolute error allowed',\n    '@param vecAbsoluteTolerance absolute error that is allowed'\n  ]\n},\n{\n  'tag': '@param vecRelativeTolerance allowed relative error',\n  'alternatives': [\n    '@param vecRelativeTolerance permissible relative error',\n    '@param vecRelativeTolerance accepted relative error',\n    '@param vecRelativeTolerance specified relative error',\n    '@param vecRelativeTolerance relative error allowed',\n    '@param vecRelativeTolerance relative error that is allowed'\n  ]\n},\n{\n  'tag': '@param maxDegree maximal degree to handle',\n  'alternatives': [\n    '@param maxDegree maximum degree to manage',\n    '@param maxDegree largest degree to handle',\n    '@param maxDegree greatest degree to handle',\n    '@param maxDegree highest degree to handle',\n    '@param maxDegree top degree to handle'\n  ]\n},\n{\n  'tag': '@param mu degree of the interpolation polynomial',\n  'alternatives': [\n    '@param mu interpolation polynomial degree',\n    '@param mu of the interpolation polynomial',\n    '@param mu degree of the polynomial of interpolation',\n    '@param mu of the interpolation polynomial degree',\n    '@param mu representing the degree of the interpolation polynomial'\n  ]\n},\n{\n  'tag': '@param h current step',\n  'alternatives': [\n    '@param h step size at present',\n    '@param h current step size',\n    '@param h present step size',\n    '@param h the size of the current step',\n    '@param h indicating the current step size'\n  ]\n},\n{\n  'tag': '@param scale scaling array',\n  'alternatives': [\n    '@param scale array for scaling',\n    '@param scale for scaling purposes',\n    '@param scale used for scaling',\n    '@param scale which scales',\n    '@param scale that performs scaling'\n  ]\n},\n{\n  'tag': '@return estimate of the interpolation error',\n  'alternatives': [\n    '@return estimation of the interpolation error',\n    '@return estimated value of the interpolation error',\n    '@return approximate value of the interpolation error',\n    '@return evaluation of the interpolation error',\n    '@return approximated value for the interpolation error'\n  ]\n},\n{\n  'tag': '@param y reference to the integrator array holding the current state',\n  'alternatives': [\n    '@param y array of the integrator holding the current state',\n    '@param y array reference holding the current state of the integrator',\n    '@param y array referring to the integrator holding the current state',\n    '@param y array representing the integrator holding the current state',\n    '@param y array that references the integrator holding the current state'\n  ]\n},\n{\n  'tag': '@param y0Dot reference to the integrator array holding the slope\\nat the beginning of the step',\n  'alternatives': [\n    '@param y0Dot array of the integrator holding the slope at the step start',\n    '@param y0Dot array reference holding the derivative at the step beginning',\n    '@param y0Dot array referring to the integrator holding the slope at the beginning of the step',\n    '@param y0Dot array representing the integrator holding the slope at the start of the step',\n    '@param y0Dot array that references the integrator holding the slope at the beginning of the step'\n  ]\n}\n]"