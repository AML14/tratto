"output = [\r\n  {\r\n    'tag': '@param means Vector of means.',\r\n    'alternatives': [\r\n      '@param means Array of averages.',\r\n      '@param means List of averages.',\r\n      '@param means Array containing the means.',\r\n      '@param means List containing the means.',\r\n      '@param means Vector storing the means.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param covariances Covariance matrix.',\r\n    'alternatives': [\r\n      '@param covariances Matrix representing the covariances.',\r\n      '@param covariances Matrix of covariances.',\r\n      '@param covariances Matrix containing the covariances.',\r\n      '@param covariances Covariance matrix object.',\r\n      '@param covariances Covariance matrix representation.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws DimensionMismatchException if the arrays length are\\ninconsistent.',\r\n    'alternatives': [\r\n      '@throws DimensionMismatchException if the lengths of the arrays are not consistent.',\r\n      '@throws DimensionMismatchException when the sizes of the arrays do not match.',\r\n      '@throws DimensionMismatchException if the lengths of the arrays do not agree.',\r\n      '@throws DimensionMismatchException if the sizes of the arrays are inconsistent.',\r\n      '@throws DimensionMismatchException if the array lengths are inconsistent.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws SingularMatrixException if the eigenvalue decomposition cannot\\nbe performed on the provided covariance matrix.',\r\n    'alternatives': [\r\n      '@throws SingularMatrixException if the eigenvalue decomposition fails for the given covariance matrix.',\r\n      '@throws SingularMatrixException when the eigenvalue decomposition is not possible for the provided covariance matrix.',\r\n      '@throws SingularMatrixException if the covariance matrix cannot undergo eigenvalue decomposition.',\r\n      '@throws SingularMatrixException if the provided covariance matrix is not suitable for eigenvalue decomposition.',\r\n      '@throws SingularMatrixException if the eigenvalue decomposition cannot be performed on the covariance matrix provided.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@throws NonPositiveDefiniteMatrixException if any of the eigenvalues is\\nnegative.',\r\n    'alternatives': [\r\n      '@throws NonPositiveDefiniteMatrixException if any of the eigenvalues are negative.',\r\n      '@throws NonPositiveDefiniteMatrixException when any of the eigenvalues is less than or equal to zero.',\r\n      '@throws NonPositiveDefiniteMatrixException if there exists a negative eigenvalue.',\r\n      '@throws NonPositiveDefiniteMatrixException if any of the eigenvalues are non-positive.',\r\n      '@throws NonPositiveDefiniteMatrixException if any of the eigenvalues is not positive.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param rng Random Number Generator.',\r\n    'alternatives': [\r\n      '@param rng Random Number Generator object.',\r\n      '@param rng Random number generator instance.',\r\n      '@param rng Random Number Generator implementation.',\r\n      '@param rng Random Number Generator source.',\r\n      '@param rng Abstract Random Number Generator.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return the mean.',\r\n    'alternatives': [\r\n      '@return the average.',\r\n      '@return the arithmetic mean.',\r\n      '@return the expected value.',\r\n      '@return the mean value.',\r\n      '@return the statistical average.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return a random value.',\r\n    'alternatives': [\r\n      '@return a randomly generated value.',\r\n      '@return a value chosen randomly.',\r\n      '@return a value selected at random.',\r\n      '@return a value generated randomly.',\r\n      '@return a randomly selected value.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return lower bound of the support (always 0)',\r\n    'alternatives': [\r\n      '@return the minimum value of the range (always 0).',\r\n      '@return the smallest possible value (always 0).',\r\n      '@return the lower limit of the support (always 0).',\r\n      '@return the minimum bound of the range (always 0).',\r\n      '@return the smallest allowed value (always 0).'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return upper bound of the support (always Double.POSITIVE_INFINITY)',\r\n    'alternatives': [\r\n      '@return the maximum value of the range (always Double.POSITIVE_INFINITY).',\r\n      '@return the largest possible value (always Double.POSITIVE_INFINITY).',\r\n      '@return the upper limit of the support (always Double.POSITIVE_INFINITY).',\r\n      '@return the maximum bound of the range (always Double.POSITIVE_INFINITY).',\r\n      '@return the largest allowed value (always Double.POSITIVE_INFINITY).'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param mean mean of this distribution.',\r\n    'alternatives': [\r\n      '@param mean average of this distribution.',\r\n      '@param mean expected value of this distribution.',\r\n      '@param mean central tendency of this distribution.',\r\n      '@param mean midpoint of this distribution.',\r\n      '@param mean typical value of this distribution.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@param inverseCumAccuracy Maximum absolute error in inverse\\ncumulative probability estimates (defaults to\\n{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\r\n    'alternatives': [\r\n      '@param inverseCumAccuracy Maximum absolute error in estimates of the inverse cumulative probability (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\r\n      '@param inverseCumAccuracy Maximum absolute error in the estimation of the inverse cumulative probability (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\r\n      '@param inverseCumAccuracy Maximum allowable absolute error in inverse cumulative probability estimates (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\r\n      '@param inverseCumAccuracy Maximum error, in absolute value, in the estimation of the inverse cumulative probability (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).',\r\n      '@param inverseCumAccuracy Maximum error in the estimation of the inverse cumulative probability, expressed in absolute value (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return lower bound of the support',\r\n    'alternatives': [\r\n      '@return the minimum value of the range.',\r\n      '@return the smallest possible value.',\r\n      '@return the lower limit of the support.',\r\n      '@return the minimum bound of the range.',\r\n      '@return the smallest allowed value.'\r\n    ]\r\n  },\r\n  {\r\n    'tag': '@return upper bound of the support',\r\n    'alternatives': [\r\n      '@return the maximum value of the range.',\r\n      '@return the largest possible value.',\r\n      '@return the upper limit of the support.',\r\n      '@return the maximum bound of the range.',\r\n      '@return the largest allowed value.'\r\n    ]\r\n  }\r\n]"