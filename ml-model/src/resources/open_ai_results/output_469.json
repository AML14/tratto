"output=[\n  {\n    'tag': '@return the difference {@code x - y}.',\n    'alternatives': [\n      '@return the result of {@code x - y}.',\n      '@return the subtraction of {@code x} and {@code y}.',\n      '@return the value obtained by subtracting {@code y} from {@code x}.',\n      '@return the computed difference between {@code x} and {@code y}.',\n      '@return the outcome of the operation {@code x - y}.'\n    ]\n  },\n  {\n    'tag': '@return the difference {@code a - b}.',\n    'alternatives': [\n      '@return the result of {@code a - b}.',\n      '@return the subtraction of {@code a} and {@code b}.',\n      '@return the value obtained by subtracting {@code b} from {@code a}.',\n      '@return the computed difference between {@code a} and {@code b}.',\n      '@return the outcome of the operation {@code a - b}.'\n    ]\n  },\n  {\n    'tag': '@throws NotPositiveException if {@code e < 0}.',\n    'alternatives': [\n      '@throws NotPositiveException when {@code e} is less than zero.',\n      '@throws NotPositiveException in case {@code e} is negative.',\n      '@throws NotPositiveException if the value of {@code e} is negative.',\n      '@throws NotPositiveException if the condition {@code e < 0} is satisfied.',\n      '@throws NotPositiveException if the value of {@code e} is less than zero.'\n    ]\n  },\n  {\n    'tag': '@param e Exponent (must be positive or zero).',\n    'alternatives': [\n      '@param e The exponent (should be positive or zero).',\n      '@param e The power raised to (must be positive or zero).',\n      '@param e The value of the exponent (must be positive or zero).',\n      '@param e The number to be raised to a power (must be positive or zero).',\n      '@param e The positive or zero exponent.'\n    ]\n  },\n  {\n    'tag': '@throws NotPositiveException if {@code e < 0}.',\n    'alternatives': [\n      '@throws NotPositiveException when {@code e} is less than zero.',\n      '@throws NotPositiveException in case {@code e} is negative.',\n      '@throws NotPositiveException if the value of {@code e} is negative.',\n      '@throws NotPositiveException if the condition {@code e < 0} is satisfied.',\n      '@throws NotPositiveException if the value of {@code e} is less than zero.'\n    ]\n  },\n  {\n    'tag': '@param e Exponent (must be positive or zero).',\n    'alternatives': [\n      '@param e The exponent (should be positive or zero).',\n      '@param e The power raised to (must be positive or zero).',\n      '@param e The value of the exponent (must be positive or zero).',\n      '@param e The number to be raised to a power (must be positive or zero).',\n      '@param e The positive or zero exponent.'\n    ]\n  },\n  {\n    'tag': '@throws NotPositiveException if {@code e < 0}.',\n    'alternatives': [\n      '@throws NotPositiveException when {@code e} is less than zero.',\n      '@throws NotPositiveException in case {@code e} is negative.',\n      '@throws NotPositiveException if the value of {@code e} is negative.',\n      '@throws NotPositiveException if the condition {@code e < 0} is satisfied.',\n      '@throws NotPositiveException if the value of {@code e} is less than zero.'\n    ]\n  },\n  {\n    'tag': '@param e Exponent (must be positive or zero).',\n    'alternatives': [\n      '@param e The exponent (should be positive or zero).',\n      '@param e The power raised to (must be positive or zero).',\n      '@param e The value of the exponent (must be positive or zero).',\n      '@param e The number to be raised to a power (must be positive or zero).',\n      '@param e The positive or zero exponent.'\n    ]\n  },\n  {\n    'tag': '@param e Exponent (must be positive or zero).',\n    'alternatives': [\n      '@param e The exponent (should be positive or zero).',\n      '@param e The power raised to (must be positive or zero).',\n      '@param e The value of the exponent (must be positive or zero).',\n      '@param e The number to be raised to a power (must be positive or zero).',\n      '@param e The positive or zero exponent.'\n    ]\n  },\n  {\n    'tag': '@param rho Reflection coefficient.',\n    'alternatives': [\n      '@param rho The coefficient of reflection.',\n      '@param rho The reflection factor.',\n      '@param rho The value representing the reflection.',\n      '@param rho The coefficient used for reflection.',\n      '@param rho The reflection parameter.'\n    ]\n  },\n  {\n    'tag': '@param khi Expansion coefficient.',\n    'alternatives': [\n      '@param khi The coefficient of expansion.',\n      '@param khi The expansion factor.',\n      '@param khi The value representing the expansion.',\n      '@param khi The coefficient used for expansion.',\n      '@param khi The expansion parameter.'\n    ]\n  },\n  {\n    'tag': '@param gamma Contraction coefficient.',\n    'alternatives': [\n      '@param gamma The coefficient of contraction.',\n      '@param gamma The contraction factor.',\n      '@param gamma The value representing the contraction.',\n      '@param gamma The coefficient used for contraction.',\n      '@param gamma The contraction parameter.'\n    ]\n  },\n  {\n    'tag': '@param sigma Shrinkage coefficient.',\n    'alternatives': [\n      '@param sigma The coefficient of shrinkage.',\n      '@param sigma The shrinkage factor.',\n      '@param sigma The value representing the shrinkage.',\n      '@param sigma The coefficient used for shrinkage.',\n      '@param sigma The shrinkage parameter.'\n    ]\n  },\n  {\n    'tag': '@param steps Steps along the canonical axes representing box edges.\\nThey may be negative but not zero. See',\n    'alternatives': [\n      '@param steps Steps along the canonical axes representing edges of the box.\\nThey can have negative values, but not zero. See',\n      '@param steps Steps representing the edges of the box along the canonical axes.\\nThey can be negative, but not zero. See',\n      '@param steps Steps along the canonical axes that define the edges of the box.\\nNegative values are allowed, but zero is not. See',\n      '@param steps Steps that represent the edges of the box along the canonical axes.\\nNegative values are permitted, but not zero. See',\n      '@param steps Steps along the canonical axes which are used to express the edges of the box.\\nNegative values are allowed but zero is not. See'\n    ]\n  },\n  {\n    'tag': '@param steps Steps along the canonical axes representing box edges.\\nThey may be negative but not zero. See\\n{@link AbstractSimplex#AbstractSimplex(double[])}.',\n    'alternatives': [\n      '@param steps Steps along the canonical axes representing edges of the box.\\nThey can have negative values, but not zero. Refer to\\n{@link AbstractSimplex#AbstractSimplex(double[])}.',\n      '@param steps Steps representing the edges of the box along the canonical axes.\\nThey can be negative, but not zero. Refer to\\n{@link AbstractSimplex#AbstractSimplex(double[])}.',\n      '@param steps Steps along the canonical axes that define the edges of the box.\\nNegative values are allowed, but zero is not. Refer to\\n{@link AbstractSimplex#AbstractSimplex(double[])}.',\n      '@param steps Steps that represent the edges of the box along the canonical axes.\\nNegative values are permitted, but not zero. Refer to\\n{@link AbstractSimplex#AbstractSimplex(double[])}.',\n      '@param steps Steps along the canonical axes which are used to express the edges of the box.\\nNegative values are allowed but zero is not. Refer to\\n{@link AbstractSimplex#AbstractSimplex(double[])}.'\n    ]\n  },\n  {\n    'tag': '@param rho Reflection coefficient.',\n    'alternatives': [\n      '@param rho The coefficient of reflection.',\n      '@param rho The reflection factor.',\n      '@param rho The value representing the reflection.',\n      '@param rho The coefficient used for reflection.',\n      '@param rho The reflection parameter.'\n    ]\n  },\n  {\n    'tag': '@param khi Expansion coefficient.',\n    'alternatives': [\n      '@param khi The coefficient of expansion.',\n      '@param khi The expansion factor.',\n      '@param khi The value representing the expansion.',\n      '@param khi The coefficient used for expansion.',\n      '@param khi The expansion parameter.'\n    ]\n  },\n  {\n    'tag': '@param gamma Contraction coefficient.',\n    'alternatives': [\n      '@param gamma The coefficient of contraction.',\n      '@param gamma The contraction factor.',\n      '@param gamma The value representing the contraction.',\n      '@param gamma The coefficient used for contraction.',\n      '@param gamma The contraction parameter.'\n    ]\n  },\n  {\n    'tag': '@param sigma Shrinkage coefficient.',\n    'alternatives': [\n      '@param sigma The coefficient of shrinkage.',\n      '@param sigma The shrinkage factor.',\n      '@param sigma The value representing the shrinkage.',\n      '@param sigma The coefficient used for shrinkage.',\n      '@param sigma The shrinkage parameter.'\n    ]\n  },\n  {\n    'tag': '@param referenceSimplex Reference simplex. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.',\n    'alternatives': [\n      '@param referenceSimplex A reference simplex. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.',\n      '@param referenceSimplex The simplex used as a reference. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.',\n      '@param referenceSimplex The simplex that serves as a reference. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.',\n      '@param referenceSimplex The reference simplex. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.',\n      '@param referenceSimplex A simplex that is considered a reference. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.'\n    ]\n  },\n  {\n    'tag': '@param referenceSimplex Reference simplex. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.',\n    'alternatives': [\n      '@param referenceSimplex A reference simplex. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.',\n      '@param referenceSimplex The simplex used as a reference. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.',\n      '@param referenceSimplex The simplex that serves as a reference. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.',\n      '@param referenceSimplex The reference simplex. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.',\n      '@param referenceSimplex A simplex that is considered a reference. See\\n{@link AbstractSimplex#AbstractSimplex(double[][])}.'\n    ]\n  },\n  {\n    'tag': '@param rho Reflection coefficient.',\n    'alternatives': [\n      '@param rho The coefficient of reflection.',\n      '@param rho The reflection factor.',\n      '@param rho The value representing the reflection.',\n      '@param rho The coefficient used for reflection.',\n      '@param rho The reflection parameter.'\n    ]\n  },\n  {\n    'tag': '@param khi Expansion coefficient.',\n    'alternatives': [\n      '@param khi The coefficient of expansion.',\n      '@param khi The expansion factor.',\n      '@param khi The value representing the expansion.',\n      '@param khi The coefficient used for expansion.',\n      '@param khi The expansion parameter.'\n    ]\n  },\n  {\n    'tag': '@param gamma Contraction coefficient.',\n    'alternatives': [\n      '@param gamma The coefficient of contraction.',\n      '@param gamma The contraction factor.',\n      '@param gamma The value representing the contraction.',\n      '@param gamma The coefficient used for contraction.',\n      '@param gamma The contraction parameter.'\n    ]\n  }\n]"