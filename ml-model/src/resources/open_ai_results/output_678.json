"output=[\n  {\n    'tag': '@param key the key to look up',\n    'alternatives': [\n      '@param key the key to search for',\n      '@param key the key to retrieve',\n      '@param key the key for the lookup',\n      '@param key the lookup key',\n      '@param key the key used for searching'\n    ]\n  },\n  {\n    'tag': '@param defaultValue return if the value is null or if the conversion fails',\n    'alternatives': [\n      '@param defaultValue to return when the value is null or the conversion fails',\n      '@param defaultValue the value to be returned if null or if the conversion fails',\n      '@param defaultValue the default value if the value is null or the conversion fails',\n      '@param defaultValue the value returned in case of null or failed conversion',\n      '@param defaultValue the value to be returned if the value is null or the conversion fails'\n    ]\n  },\n  {\n    'tag': '@return the value in the Map as an int, <code>defaultValue</code> if null map input',\n    'alternatives': [\n      '@return the value as an int from the Map, or <code>defaultValue</code> if the map is null',\n      '@return the value from the Map as an int, or <code>defaultValue</code> if the input map is null',\n      '@return the integer value from the Map, or <code>defaultValue</code> if the map is null',\n      '@return the value as an int obtained from the Map, or <code>defaultValue</code> in case of null map input',\n      '@return the integer value retrieved from the Map, or <code>defaultValue</code> if the map input is null'\n    ]\n  },\n  {\n    'tag': '@param <K> the key type',\n    'alternatives': [\n      '@param <K> the type of the key',\n      '@param <K> the type for the key',\n      '@param <K> the key type specification',\n      '@param <K> the specified type of the key',\n      '@param <K> the type parameter for the key'\n    ]\n  },\n  {\n    'tag': '@param map the map to use',\n    'alternatives': [\n      '@param map the map to utilize',\n      '@param map the map to work with',\n      '@param map the map to manipulate',\n      '@param map the map used for operations',\n      '@param map the map to be utilized'\n    ]\n  },\n  {\n    'tag': '@param key the key to look up',\n    'alternatives': [\n      '@param key the key to search for',\n      '@param key the key to retrieve',\n      '@param key the key for the lookup',\n      '@param key the lookup key',\n      '@param key the key used for searching'\n    ]\n  },\n  {\n    'tag': '@param defaultValue return if the value is null or if the conversion fails',\n    'alternatives': [\n      '@param defaultValue to return when the value is null or the conversion fails',\n      '@param defaultValue the value to be returned if null or if the conversion fails',\n      '@param defaultValue the default value if the value is null or the conversion fails',\n      '@param defaultValue the value returned in case of null or failed conversion',\n      '@param defaultValue the value to be returned if the value is null or the conversion fails'\n    ]\n  },\n  {\n    'tag': '@return the value in the Map as a long, <code>defaultValue</code> if null map input',\n    'alternatives': [\n      '@return the value as a long from the Map, or <code>defaultValue</code> if the map is null',\n      '@return the value from the Map as a long, or <code>defaultValue</code> if the input map is null',\n      '@return the long value from the Map, or <code>defaultValue</code> if the map is null',\n      '@return the value as a long obtained from the Map, or <code>defaultValue</code> in case of null map input',\n      '@return the long value retrieved from the Map, or <code>defaultValue</code> if the map input is null'\n    ]\n  },\n  {\n    'tag': '@param <K> the key type',\n    'alternatives': [\n      '@param <K> the type of the key',\n      '@param <K> the type for the key',\n      '@param <K> the key type specification',\n      '@param <K> the specified type of the key',\n      '@param <K> the type parameter for the key'\n    ]\n  },\n  {\n    'tag': '@param map the map to use',\n    'alternatives': [\n      '@param map the map to utilize',\n      '@param map the map to work with',\n      '@param map the map to manipulate',\n      '@param map the map used for operations',\n      '@param map the map to be utilized'\n    ]\n  },\n  {\n    'tag': '@param key the key to look up',\n    'alternatives': [\n      '@param key the key to search for',\n      '@param key the key to retrieve',\n      '@param key the key for the lookup',\n      '@param key the lookup key',\n      '@param key the key used for searching'\n    ]\n  },\n  {\n    'tag': '@param defaultValue return if the value is null or if the conversion fails',\n    'alternatives': [\n      '@param defaultValue to return when the value is null or the conversion fails',\n      '@param defaultValue the value to be returned if null or if the conversion fails',\n      '@param defaultValue the default value if the value is null or the conversion fails',\n      '@param defaultValue the value returned in case of null or failed conversion',\n      '@param defaultValue the value to be returned if the value is null or the conversion fails'\n    ]\n  },\n  {\n    'tag': '@return the value in the Map as a float, <code>defaultValue</code> if null map input',\n    'alternatives': [\n      '@return the value as a float from the Map, or <code>defaultValue</code> if the map is null',\n      '@return the value from the Map as a float, or <code>defaultValue</code> if the input map is null',\n      '@return the float value from the Map, or <code>defaultValue</code> if the map is null',\n      '@return the value as a float obtained from the Map, or <code>defaultValue</code> in case of null map input',\n      '@return the float value retrieved from the Map, or <code>defaultValue</code> if the map input is null'\n    ]\n  },\n  {\n    'tag': '@param <K> the key type',\n    'alternatives': [\n      '@param <K> the type of the key',\n      '@param <K> the type for the key',\n      '@param <K> the key type specification',\n      '@param <K> the specified type of the key',\n      '@param <K> the type parameter for the key'\n    ]\n  },\n  {\n    'tag': '@param map the map to use',\n    'alternatives': [\n      '@param map the map to utilize',\n      '@param map the map to work with',\n      '@param map the map to manipulate',\n      '@param map the map used for operations',\n      '@param map the map to be utilized'\n    ]\n  },\n  {\n    'tag': '@param key the key to look up',\n    'alternatives': [\n      '@param key the key to search for',\n      '@param key the key to retrieve',\n      '@param key the key for the lookup',\n      '@param key the lookup key',\n      '@param key the key used for searching'\n    ]\n  },\n  {\n    'tag': '@param defaultValue return if the value is null or if the conversion fails',\n    'alternatives': [\n      '@param defaultValue to return when the value is null or the conversion fails',\n      '@param defaultValue the value to be returned if null or if the conversion fails',\n      '@param defaultValue the default value if the value is null or the conversion fails',\n      '@param defaultValue the value returned in case of null or failed conversion',\n      '@param defaultValue the value to be returned if the value is null or the conversion fails'\n    ]\n  },\n  {\n    'tag': '@return the value in the Map as a double, <code>defaultValue</code> if null map input',\n    'alternatives': [\n      '@return the value as a double from the Map, or <code>defaultValue</code> if the map is null',\n      '@return the value from the Map as a double, or <code>defaultValue</code> if the input map is null',\n      '@return the double value from the Map, or <code>defaultValue</code> if the map is null',\n      '@return the value as a double obtained from the Map, or <code>defaultValue</code> in case of null map input',\n      '@return the double value retrieved from the Map, or <code>defaultValue</code> if the map input is null'\n    ]\n  },\n  {\n    'tag': '@param <K> the key type',\n    'alternatives': [\n      '@param <K> the type of the key',\n      '@param <K> the type for the key',\n      '@param <K> the key type specification',\n      '@param <K> the specified type of the key',\n      '@param <K> the type parameter for the key'\n    ]\n  },\n  {\n    'tag': '@param <V> the value type',\n    'alternatives': [\n      '@param <V> the type of the value',\n      '@param <V> the type for the value',\n      '@param <V> the value type specification',\n      '@param <V> the specified type of the value',\n      '@param <V> the type parameter for the value'\n    ]\n  },\n  {\n    'tag': '@param map the map to convert to a Properties object',\n    'alternatives': [\n      '@param map the map to transform into a Properties object',\n      '@param map the map to be converted into a Properties object',\n      '@param map the map to change into a Properties object',\n      '@param map the map to be converted to a Properties object',\n      '@param map the map to create a Properties object from'\n    ]\n  },\n  {\n    'tag': '@return the properties object',\n    'alternatives': [\n      '@return the object representing the properties',\n      '@return the resulting properties object',\n      '@return the properties object obtained',\n      '@return the generated properties object',\n      '@return the object that contains the properties'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if a key or value in the provided map is {@code null}',\n    'alternatives': [\n      '@throws NullPointerException if any key or value in the given map is {@code null}',\n      '@throws NullPointerException if any key or value in the provided map is null',\n      '@throws NullPointerException in case a key or value in the supplied map is null',\n      '@throws NullPointerException if either a key or value in the provided map is null',\n      '@throws NullPointerException if the provided map contains a null key or value'\n    ]\n  },\n  {\n    'tag': '@return the hashmap containing the data',\n    'alternatives': [\n      '@return the data stored in the hashmap',\n      '@return the hashmap that holds the data',\n      '@return the data contained in the hashmap',\n      '@return the hashmap containing the information',\n      '@return the hashmap with the stored data'\n    ]\n  },\n  {\n    'tag': '@param label The label to be used, may be <code>null</code>.\\n If <code>null</code>, the label is not output.\\n It typically represents the name of the property in a bean or similar.',\n    'alternatives': [\n      '@param label The label to utilize, possibly <code>null</code>.\\n If <code>null</code>, the label will not be displayed.\\n It typically represents the property name in a bean or similar.',\n      '@param label The label to employ, may be <code>null</code>.\\n If <code>null</code>, the label is excluded from the output.\\n It generally represents the property name in a bean or similar.',\n      '@param label The label to use, possibly <code>null</code>.\\n When <code>null</code>, the label will not be included in the output.\\n Typically, it represents the property name in a bean or similar.',\n      '@param label The label to be utilized, possibly <code>null</code>.\\n In the case of <code>null</code>, the label will not be shown.\\n It is usually the name of the property in a bean or similar.',\n      '@param label The label to apply, may be <code>null</code>.\\n In case of <code>null</code>, the label won\\'t appear in the output.\\n It typically denotes the name of the property in a bean or similar.'\n    ]\n  }\n]"