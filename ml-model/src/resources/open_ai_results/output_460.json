"output=[\n  {\n    'tag': '@return true if equal',\n    'alternatives': [\n      '@return true if identical',\n      '@return true if the same',\n      '@return true if equivalent',\n      '@return true if matches',\n      '@return true if exact'\n    ]\n  },\n  {\n    'tag': '@return the hash code',\n    'alternatives': [\n      '@return the code of the hash',\n      '@return the hash value',\n      '@return the computed hash',\n      '@return the generated hash',\n      '@return the hash numerical representation'\n    ]\n  },\n  {\n    'tag': '@return a debugging string',\n    'alternatives': [\n      '@return a string for debugging purposes',\n      '@return a string used for debugging',\n      '@return a string for debugging usage',\n      '@return a string to aid in debugging',\n      '@return a string specifically for debugging'\n    ]\n  },\n  {\n    'tag': '@param keys the keys to calculate the hash code for',\n    'alternatives': [\n      '@param keys the keys used to compute the hash code',\n      '@param keys the keys used for the hash code calculation',\n      '@param keys to generate the hash code for',\n      '@param keys for which the hash code is calculated',\n      '@param keys that are used in the hash code calculation'\n    ]\n  },\n  {\n    'tag': '@return the instance with recalculated hash code',\n    'alternatives': [\n      '@return the object with the hash code recalculated',\n      '@return the instance whose hash code has been recalculated',\n      '@return the updated instance with the new hash code',\n      '@return the object where the hash code has been recomputed',\n      '@return the instance with the recalculated hash numerical representation'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key',\n    'alternatives': [\n      '@param key1 the initial key',\n      '@param key1 the primary key',\n      '@param key1 the first identifier',\n      '@param key1 the initial value',\n      '@param key1 the initial identification'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the subsequent key',\n      '@param key2 the secondary key',\n      '@param key2 the next identifier',\n      '@param key2 the subsequent value',\n      '@param key2 the subsequent identification'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key',\n    'alternatives': [\n      '@param key1 the starting key',\n      '@param key1 the primary key',\n      '@param key1 the initial identifier',\n      '@param key1 the starting value',\n      '@param key1 the initial identification'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the next key',\n      '@param key2 the secondary key',\n      '@param key2 the subsequent identifier',\n      '@param key2 the next value',\n      '@param key2 the subsequent identification'\n    ]\n  },\n  {\n    'tag': '@param key3 the third key',\n    'alternatives': [\n      '@param key3 the next key',\n      '@param key3 the tertiary key',\n      '@param key3 the third identifier',\n      '@param key3 the next value',\n      '@param key3 the next identification'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key',\n    'alternatives': [\n      '@param key1 the primary key',\n      '@param key1 the initial key',\n      '@param key1 the initial identifier',\n      '@param key1 the initial value',\n      '@param key1 the initial identification'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the secondary key',\n      '@param key2 the subsequent key',\n      '@param key2 the subsequent identifier',\n      '@param key2 the subsequent value',\n      '@param key2 the subsequent identification'\n    ]\n  },\n  {\n    'tag': '@param key3 the third key',\n    'alternatives': [\n      '@param key3 the tertiary key',\n      '@param key3 the next key',\n      '@param key3 the third identifier',\n      '@param key3 the next value',\n      '@param key3 the next identification'\n    ]\n  },\n  {\n    'tag': '@param key4 the fourth key',\n    'alternatives': [\n      '@param key4 the fourth key',\n      '@param key4 the next key',\n      '@param key4 the fourth identifier',\n      '@param key4 the next value',\n      '@param key4 the next identification'\n    ]\n  },\n  {\n    'tag': '@param key1 the first key',\n    'alternatives': [\n      '@param key1 the initial key',\n      '@param key1 the primary key',\n      '@param key1 the starting identifier',\n      '@param key1 the initial value',\n      '@param key1 the initial identification'\n    ]\n  },\n  {\n    'tag': '@param key2 the second key',\n    'alternatives': [\n      '@param key2 the secondary key',\n      '@param key2 the subsequent key',\n      '@param key2 the subsequent identifier',\n      '@param key2 the subsequent value',\n      '@param key2 the subsequent identification'\n    ]\n  },\n  {\n    'tag': '@param key3 the third key',\n    'alternatives': [\n      '@param key3 the tertiary key',\n      '@param key3 the next key',\n      '@param key3 the third identifier',\n      '@param key3 the next value',\n      '@param key3 the next identification'\n    ]\n  },\n  {\n    'tag': '@param key4 the fourth key',\n    'alternatives': [\n      '@param key4 the fourth key',\n      '@param key4 the next key',\n      '@param key4 the fourth identifier',\n      '@param key4 the next value',\n      '@param key4 the next identification'\n    ]\n  },\n  {\n    'tag': '@param key5 the fifth key',\n    'alternatives': [\n      '@param key5 the last key',\n      '@param key5 the fifth identifier',\n      '@param key5 the final key',\n      '@param key5 the last value',\n      '@param key5 the final identification'\n    ]\n  },\n  {\n    'tag': '@param key the key for the entry, may be null',\n    'alternatives': [\n      '@param key the input key for the entry, possibly null',\n      '@param key the key used for the entry, may be null',\n      '@param key the identifier for the entry, may be null',\n      '@param key the variable representing the entry key, can be null',\n      '@param key the specified key for the entry, null allowed'\n    ]\n  },\n  {\n    'tag': '@param value the value for the entry, may be null',\n    'alternatives': [\n      '@param value the entry value, possibly null',\n      '@param value the value used for the entry, may be null',\n      '@param value the assigned value, may be null',\n      '@param value the content of the entry, can be null',\n      '@param value the specified value for the entry, null allowed'\n    ]\n  },\n  {\n    'tag': '@throws NullPointerException if the entry is null',\n    'alternatives': [\n      '@throws NullPointerException if the entry object is null',\n      '@throws NullPointerException when the entry is null',\n      '@throws NullPointerException if the entry parameter is null',\n      '@throws NullPointerException if the entry has a value of null',\n      '@throws NullPointerException in case the entry is null'\n    ]\n  },\n  {\n    'tag': '@param key the new key',\n    'alternatives': [\n      '@param key the updated key',\n      '@param key the modified key',\n      '@param key the replacement key',\n      '@param key the changed key',\n      '@param key the new identification'\n    ]\n  },\n  {\n    'tag': '@return the old key',\n    'alternatives': [\n      '@return the original key',\n      '@return the previous key',\n      '@return the former key',\n      '@return the initial key',\n      '@return the previous identification'\n    ]\n  },\n  {\n    'tag': '@throws IllegalArgumentException if key is this object',\n    'alternatives': [\n      '@throws IllegalArgumentException when key refers to this object',\n      '@throws IllegalArgumentException if the key is equal to this object',\n      '@throws IllegalArgumentException if key points to the current object',\n      '@throws IllegalArgumentException in case the key is this object',\n      '@throws IllegalArgumentException if the key matches this object'\n    ]\n  }\n]"