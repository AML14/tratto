"output = [\n  {\n    'tag': '@param name name of the method',\n    'alternatives': [\n      '@param name name of the function',\n      '@param name method name',\n      '@param name function name',\n      '@param name method identifier',\n      '@param name identifier of the method'\n    ]\n  },\n  {\n    'tag': '@param nSteps number of steps of the multistep method\\n(excluding the one being computed)',\n    'alternatives': [\n      '@param nSteps total steps in the multistep method\\n(not including the current computation)',\n      '@param nSteps number of steps excluding the one being computed\\nin the multistep method',\n      '@param nSteps number of steps for the multi-step method\\n(excluding the current computation)',\n      '@param nSteps count of steps for the multistep method\\n(without including the current one being computed)',\n      '@param nSteps total count of steps in the multistep method\\n(excluding the currently computed step)'\n    ]\n  },\n  {\n    'tag': '@param order order of the method',\n    'alternatives': [\n      '@param order method order',\n      '@param order method level',\n      '@param order method rank',\n      '@param order method priority',\n      '@param order method sequence'\n    ]\n  },\n  {\n    'tag': '@param scalAbsoluteTolerance allowed absolute error',\n    'alternatives': [\n      '@param scalAbsoluteTolerance permitted absolute error',\n      '@param scalAbsoluteTolerance acceptable absolute error',\n      '@param scalAbsoluteTolerance allowed absolute deviation',\n      '@param scalAbsoluteTolerance valid absolute error',\n      '@param scalAbsoluteTolerance authorized absolute error'\n    ]\n  },\n  {\n    'tag': '@param scalRelativeTolerance allowed relative error',\n    'alternatives': [\n      '@param scalRelativeTolerance permitted relative error',\n      '@param scalRelativeTolerance acceptable relative error',\n      '@param scalRelativeTolerance allowed relative deviation',\n      '@param scalRelativeTolerance valid relative error',\n      '@param scalRelativeTolerance authorized relative error'\n    ]\n  },\n  {\n    'tag': '@param field field to which the time and state vector elements belong',\n    'alternatives': [\n      '@param field field of time and state vector elements',\n      '@param field field where time and state vector elements belong',\n      '@param field field associated with time and state vector elements',\n      '@param field field related to time and state vector elements',\n      '@param field field for time and state vector element storage'\n    ]\n  },\n  {\n    'tag': '@param name name of the method',\n    'alternatives': [\n      '@param name name of the function',\n      '@param name method name',\n      '@param name function name',\n      '@param name method identifier',\n      '@param name identifier of the method'\n    ]\n  },\n  {\n    'tag': '@param nSteps number of steps of the multistep method\\n(excluding the one being computed)',\n    'alternatives': [\n      '@param nSteps total steps in the multistep method\\n(not including the current computation)',\n      '@param nSteps number of steps excluding the one being computed\\nin the multistep method',\n      '@param nSteps number of steps for the multi-step method\\n(excluding the current computation)',\n      '@param nSteps count of steps for the multistep method\\n(without including the current one being computed)',\n      '@param nSteps total count of steps in the multistep method\\n(excluding the currently computed step)'\n    ]\n  },\n  {\n    'tag': '@param order order of the method',\n    'alternatives': [\n      '@param order method order',\n      '@param order method level',\n      '@param order method rank',\n      '@param order method priority',\n      '@param order method sequence'\n    ]\n  },\n  {\n    'tag': '@param vecAbsoluteTolerance allowed absolute error',\n    'alternatives': [\n      '@param vecAbsoluteTolerance permitted absolute error',\n      '@param vecAbsoluteTolerance acceptable absolute error',\n      '@param vecAbsoluteTolerance allowed absolute deviation',\n      '@param vecAbsoluteTolerance valid absolute error',\n      '@param vecAbsoluteTolerance authorized absolute error'\n    ]\n  },\n  {\n    'tag': '@param vecRelativeTolerance allowed relative error',\n    'alternatives': [\n      '@param vecRelativeTolerance permitted relative error',\n      '@param vecRelativeTolerance acceptable relative error',\n      '@param vecRelativeTolerance allowed relative deviation',\n      '@param vecRelativeTolerance valid relative error',\n      '@param vecRelativeTolerance authorized relative error'\n    ]\n  },\n  {\n    'tag': '@return name of the method',\n    'alternatives': [\n      '@return method name',\n      '@return function name',\n      '@return name of the function',\n      '@return identifier of the method',\n      '@return method identifier'\n    ]\n  },\n  {\n    'tag': '@param handler handler for the accepted steps',\n    'alternatives': [\n      '@param handler step acceptance handler',\n      '@param handler handler for accepted steps',\n      '@param handler handler of the accepted steps',\n      '@param handler step acceptor',\n      '@param handler step handling function'\n    ]\n  },\n  {\n    'tag': '@return an unmodifiable collection of the added events handlers',\n    'alternatives': [\n      '@return unmodifiable collection of the added events handlers',\n      '@return collection of the added event handlers (unmodifiable)',\n      '@return added events handlers as an unmodifiable collection',\n      '@return unmodifiable collection of the appended events handlers',\n      '@return unmodifiable collection containing the added events handlers'\n    ]\n  },\n  {\n    'tag': '@param handler event handler',\n    'alternatives': [\n      '@param handler handler of the event',\n      '@param handler handler function for the event',\n      '@param handler event handling function',\n      '@param handler function to handle the event',\n      '@param handler function for handling the event'\n    ]\n  },\n  {\n    'tag': '@param maxCheckInterval maximal time interval between switching\\nfunction checks (this interval prevents missing sign changes in\\ncase the integration steps becomes very large)',\n    'alternatives': [\n      '@param maxCheckInterval maximum interval between function checks\\nfor switching (avoids sign change misses if the integration\\nsteps become very large)',\n      '@param maxCheckInterval the maximum time interval allowed between\\nfunction checks for switching (to avoid missing sign changes\\nwhen the integration steps become very large)',\n      '@param maxCheckInterval maximal interval of time between\\nfunction checks for switching (to prevent missing sign changes in\\nthe case of very large integration steps)',\n      '@param maxCheckInterval maximum time interval between switching\\nfunction checks (to avoid missing sign changes if the integration\\nsteps become very large)',\n      '@param maxCheckInterval the maximum interval of time allowed\\nbetween function checks for switching (avoiding sign change\\nmisses in case of very large integration steps)'\n    ]\n  },\n  {\n    'tag': '@param convergence convergence threshold in the event time search',\n    'alternatives': [\n      '@param convergence event time search convergence threshold',\n      '@param convergence convergence limit for the event time search',\n      '@param convergence threshold for the event time search convergence',\n      '@param convergence event time search convergence value',\n      '@param convergence criterion for the event time search'\n    ]\n  },\n  {\n    'tag': '@param maxIterationCount upper limit of the iteration count in\\nthe event time search',\n    'alternatives': [\n      '@param maxIterationCount maximum number of iterations allowed\\nin the event time search',\n      '@param maxIterationCount upper bound on the number of iterations\\nfor the event time search',\n      '@param maxIterationCount maximum iteration count for the event time search',\n      '@param maxIterationCount maximum allowed iterations for the event time search',\n      '@param maxIterationCount upper limit on the iteration count\\nin the event time search'\n    ]\n  },\n  {\n    'tag': '@param handler event handler',\n    'alternatives': [\n      '@param handler handler of the event',\n      '@param handler handler function for the event',\n      '@param handler event handling function',\n      '@param handler function to handle the event',\n      '@param handler function for handling the event'\n    ]\n  },\n  {\n    'tag': '@param maxCheckInterval maximal time interval between switching\\nfunction checks (this interval prevents missing sign changes in\\ncase the integration steps becomes very large)',\n    'alternatives': [\n      '@param maxCheckInterval maximum interval between function checks\\nfor switching (avoids sign change misses if the integration\\nsteps become very large)',\n      '@param maxCheckInterval the maximum time interval allowed between\\nfunction checks for switching (to avoid missing sign changes\\nwhen the integration steps become very large)',\n      '@param maxCheckInterval maximal interval of time between\\nfunction checks for switching (to prevent missing sign changes in\\nthe case of very large integration steps)',\n      '@param maxCheckInterval maximum time interval between switching\\nfunction checks (to avoid missing sign changes if the integration\\nsteps become very large)',\n      '@param maxCheckInterval the maximum interval of time allowed\\nbetween function checks for switching (avoiding sign change\\nmisses in case of very large integration steps)'\n    ]\n  },\n  {\n    'tag': '@param convergence convergence threshold in the event time search',\n    'alternatives': [\n      '@param convergence event time search convergence threshold',\n      '@param convergence convergence limit for the event time search',\n      '@param convergence threshold for the event time search convergence',\n      '@param convergence event time search convergence value',\n      '@param convergence criterion for the event time search'\n    ]\n  },\n  {\n    'tag': '@param maxIterationCount upper limit of the iteration count in\\nthe event time search',\n    'alternatives': [\n      '@param maxIterationCount maximum number of iterations allowed\\nin the event time search',\n      '@param maxIterationCount upper bound on the number of iterations\\nfor the event time search',\n      '@param maxIterationCount maximum iteration count for the event time search',\n      '@param maxIterationCount maximum allowed iterations for the event time search',\n      '@param maxIterationCount upper limit on the iteration count\\nin the event time search'\n    ]\n  },\n  {\n    'tag': '@param solver The root-finding algorithm to use to detect the state\\nevents.',\n    'alternatives': [\n      '@param solver Algorithm used for root-finding to detect the\\nstate events.',\n      '@param solver Root-finding algorithm for detecting the\\nstate events.',\n      '@param solver Algorithm for finding roots to detect the state events.',\n      '@param solver Algorithm used to solve for the state events.',\n      '@param solver Technique employed to discover the state events.'\n    ]\n  },\n  {\n    'tag': '@return an unmodifiable collection of the added events handlers',\n    'alternatives': [\n      '@return unmodifiable collection of the added events handlers',\n      '@return collection of the added event handlers (unmodifiable)',\n      '@return added events handlers as an unmodifiable collection',\n      '@return unmodifiable collection of the appended events handlers',\n      '@return unmodifiable collection containing the added events handlers'\n    ]\n  },\n  {\n    'tag': '@return current value of the step start time t<sub>i</sub>',\n    'alternatives': [\n      '@return current value of the starting time step t<sub>i</sub>',\n      '@return current value of the initial time step t<sub>i</sub>',\n      '@return current value of the time parameter t<sub>i</sub>',\n      '@return current value of the beginning time step t<sub>i</sub>',\n      '@return current value of the time step start t<sub>i</sub>'\n    ]\n  }\n]"