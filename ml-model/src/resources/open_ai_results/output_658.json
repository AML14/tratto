"[\n  {\n    \"tag\": \"@param b second argument\",\n    \"alternatives\": [\n      \"@param b next argument\",\n      \"@param b the second parameter\",\n      \"@param b value for argument two\",\n      \"@param b the second input\",\n      \"@param b argument number two\"\n    ]\n  },\n  {\n    \"tag\": \"@param c third argument\",\n    \"alternatives\": [\n      \"@param c third parameter\",\n      \"@param c value for argument three\",\n      \"@param c the third input\",\n      \"@param c argument number three\",\n      \"@param c the third variable\"\n    ]\n  },\n  {\n    \"tag\": \"@return a triple of the values (a, b, c)\",\n    \"alternatives\": [\n      \"@return a tuple containing the values (a, b, c)\",\n      \"@return a three-element list with the values (a, b, c)\",\n      \"@return a triple consisting of the values (a, b, c)\",\n      \"@return a result that includes the values (a, b, c)\",\n      \"@return the values (a, b, c) as a triple\"\n    ]\n  },\n  {\n    \"tag\": \"@param enabled whether to enable or disable logging\",\n    \"alternatives\": [\n      \"@param enabled flag to indicate logging enablement\",\n      \"@param enabled indicator for logging activation\",\n      \"@param enabled true to enable logging, false to disable logging\",\n      \"@param enabled indicates whether logging should be enabled or disabled\",\n      \"@param enabled determines if logging should be enabled or disabled\"\n    ]\n  },\n  {\n    \"tag\": \"@param val whether to parse arguments after a non-option command-line argument\",\n    \"alternatives\": [\n      \"@param val flag for parsing non-option command-line arguments\",\n      \"@param val determines if arguments after a non-option command-line argument should be parsed\",\n      \"@param val indicates whether to parse arguments following a non-option command-line argument\",\n      \"@param val specifies whether to parse arguments after a non-option command-line argument\",\n      \"@param val controls the parsing of arguments after a non-option command-line argument\"\n    ]\n  },\n  {\n    \"tag\": \"@param val whether to parse long options with a single dash, as in -longOption\",\n    \"alternatives\": [\n      \"@param val flag for parsing long options with a single dash\",\n      \"@param val indicates whether long options should be parsed with a single dash\",\n      \"@param val determines if long options should be parsed with a single dash\",\n      \"@param val controls the parsing of long options with a single dash\",\n      \"@param val specifies whether to parse long options with a single dash\"\n    ]\n  },\n  {\n    \"tag\": \"@param args the commandline to be parsed\",\n    \"alternatives\": [\n      \"@param args the command line to parse\",\n      \"@param args input to be parsed as command line\",\n      \"@param args commandline arguments to be processed\",\n      \"@param args the line of command to parse\",\n      \"@param args the string representing the commandline\"\n    ]\n  },\n  {\n    \"tag\": \"@return all non-option arguments\",\n    \"alternatives\": [\n      \"@return list of arguments that are not options\",\n      \"@return the non-option arguments\",\n      \"@return all arguments except the options\",\n      \"@return the arguments that are not options\",\n      \"@return result containing the non-option arguments\"\n    ]\n  },\n  {\n    \"tag\": \"@throws ArgException if the command line contains unknown option or\\nmisused options.\",\n    \"alternatives\": [\n      \"@throws ArgException in case of unknown option or misuse of options in the command line\",\n      \"@throws ArgException if the command line has inappropriate or unknown options\",\n      \"@throws ArgException if the command line contains invalid or unrecognized options\",\n      \"@throws ArgException when the command line has unknown or misused options\",\n      \"@throws ArgException if there are unrecognized or misused options in the command line\"\n    ]\n  },\n  {\n    \"tag\": \"@param args the command line to parse\",\n    \"alternatives\": [\n      \"@param args input to be parsed as command line\",\n      \"@param args the commandline to be processed\",\n      \"@param args the line of command to parse\",\n      \"@param args the string representing the commandline\",\n      \"@param args an array representing the command line\"\n    ]\n  },\n  {\n    \"tag\": \"@return all non-option arguments\",\n    \"alternatives\": [\n      \"@return the non-option arguments\",\n      \"@return list of arguments that are not options\",\n      \"@return all arguments except the options\",\n      \"@return the arguments that are not options\",\n      \"@return result containing the non-option arguments\"\n    ]\n  },\n  {\n    \"tag\": \"@throws ArgException if the command line contains misused options or an unknown option.\",\n    \"alternatives\": [\n      \"@throws ArgException if there are unrecognized or misused options in the command line\",\n      \"@throws ArgException when the command line has unknown or misused options\",\n      \"@throws ArgException in case of misuse of options or unknown option in the command line\",\n      \"@throws ArgException if the command line has inappropriate or unknown options\",\n      \"@throws ArgException if the command line contains invalid or unrecognized options\"\n    ]\n  },\n  {\n    \"tag\": \"@param args the command line to parse\",\n    \"alternatives\": [\n      \"@param args input to be parsed as command line\",\n      \"@param args the commandline to be processed\",\n      \"@param args the line of command to parse\",\n      \"@param args the string representing the commandline\",\n      \"@param args an array representing the command line\"\n    ]\n  },\n  {\n    \"tag\": \"@return all non-option arguments\",\n    \"alternatives\": [\n      \"@return the non-option arguments\",\n      \"@return list of arguments that are not options\",\n      \"@return all arguments except the options\",\n      \"@return the arguments that are not options\",\n      \"@return result containing the non-option arguments\"\n    ]\n  },\n  {\n    \"tag\": \"@param args the command line to parse\",\n    \"alternatives\": [\n      \"@param args input to be parsed as command line\",\n      \"@param args the commandline to be processed\",\n      \"@param args the line of command to parse\",\n      \"@param args the string representing the commandline\",\n      \"@param args an array representing the command line\"\n    ]\n  },\n  {\n    \"tag\": \"@return all non-option arguments\",\n    \"alternatives\": [\n      \"@return the non-option arguments\",\n      \"@return list of arguments that are not options\",\n      \"@return all arguments except the options\",\n      \"@return the arguments that are not options\",\n      \"@return result containing the non-option arguments\"\n    ]\n  },\n  {\n    \"tag\": \"@param ps where to print usage information\",\n    \"alternatives\": [\n      \"@param ps output for the usage information\",\n      \"@param ps the stream to display usage information\",\n      \"@param ps specifies the destination of the usage information\",\n      \"@param ps output stream for displaying usage information\",\n      \"@param ps indicates where to print the usage information\"\n    ]\n  },\n  {\n    \"tag\": \"@param ps where to print usage information\",\n    \"alternatives\": [\n      \"@param ps output for the usage information\",\n      \"@param ps the stream to display usage information\",\n      \"@param ps specifies the destination of the usage information\",\n      \"@param ps output stream for displaying usage information\",\n      \"@param ps indicates where to print the usage information\"\n    ]\n  },\n  {\n    \"tag\": \"@param msg message to print before usage information\",\n    \"alternatives\": [\n      \"@param msg the message to be printed before usage information\",\n      \"@param msg the text to display prior to the usage information\",\n      \"@param msg the message to show before printing the usage information\",\n      \"@param msg the string to be printed as a preamble to usage information\",\n      \"@param msg the text to be presented before the usage information\"\n    ]\n  },\n  {\n    \"tag\": \"@param msg messag. to print before usage information\",\n    \"alternatives\": [\n      \"@param msg the message to be printed before usage information\",\n      \"@param msg the text to display prior to the usage information\",\n      \"@param msg the message to show before printing the usage information\",\n      \"@param msg the string to be printed as a preamble to usage information\",\n      \"@param msg the text to be presented before the usage information\"\n    ]\n  },\n  {\n    \"tag\": \"@param ps where to print usage information\",\n    \"alternatives\": [\n      \"@param ps output for the usage information\",\n      \"@param ps the stream to display usage information\",\n      \"@param ps specifies the destination of the usage information\",\n      \"@param ps output stream for displaying usage information\",\n      \"@param ps indicates where to print the usage information\"\n    ]\n  },\n  {\n    \"tag\": \"@param format message to print before usage information\",\n    \"alternatives\": [\n      \"@param format format of the message to print before usage information\",\n      \"@param format the string format for the message to display before usage information\",\n      \"@param format the text format for the message to show prior to printing the usage information\",\n      \"@param format the format string for the message before the usage information is printed\",\n      \"@param format the format of the text to be presented before the usage information\"\n    ]\n  },\n  {\n    \"tag\": \"@param args objects to put in formatted message\",\n    \"alternatives\": [\n      \"@param args items to insert into the formatted message\",\n      \"@param args the objects to be included in the formatted message\",\n      \"@param args values to substitute in the formatted message\",\n      \"@param args data to be placed in the formatted message\",\n      \"@param args the parameters to be used in the formatted message\"\n    ]\n  },\n  {\n    \"tag\": \"@return the command-line usage message\",\n    \"alternatives\": [\n      \"@return the usage message for the command line\",\n      \"@return message displaying the command-line usage\",\n      \"@return the message that describes how to use the command line\",\n      \"@return output that provides the command-line usage information\",\n      \"@return the usage information for the command line\"\n    ]\n  },\n  {\n    \"tag\": \"@param group_names the list of option groups to include in the usage\\nmessage.  If empty and option groups are being used, will return usage\\nfor all option groups that are not unpublicized.  If empty and option\\ngroups are not being used, will return usage for all options that are\\nnot unpublicized.\",\n    \"alternatives\": [\n      \"@param group_names list of option groups for inclusion in the usage message. If empty and option groups are used, the usage will include all non-unpublicized option groups. If empty and option groups are not used, the usage will include all non-unpublicized options.\",\n      \"@param group_names names of option groups to be included in the usage message. If no option groups are specified and option groups are being used, the usage will include all non-unpublicized option groups. If no option groups are specified and option groups are not being used, the usage will include all non-unpublicized options.\",\n      \"@param group_names the option groups to be included in the usage message. If no option groups are specified and option groups are used, the usage will include all non-unpublicized option groups. If no option groups are specified and option groups are not used, the usage will include all non-unpublicized options.\",\n      \"@param group_names the list of option groups to include in the usage message. If no option groups are specified and option groups are used, the usage will include all non-unpublicized option groups. If no option groups are specified and option groups are not used, the usage will include all non-publicized options.\",\n      \"@param group_names the list of option groups to be included in the usage message. If no option groups are specified and option groups are used, the usage will include all non-unpublicized option groups. If no option groups are specified and option groups are not used, the usage will include all non-unpublicized options.\"\n    ]\n  }\n]"