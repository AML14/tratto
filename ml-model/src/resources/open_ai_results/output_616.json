"output=[\n  {\n    'tag': '@param y1 reference to the integrator array holding the state at\\nthe end of the step',\n    'alternatives': [\n      '@param y1 reference to the integrator array containing the state at the\\nend of the step',\n      '@param y1 reference to the integrator array that holds the state at the\\nend of the step',\n      '@param y1 reference to the integrator array which stores the state at the\\nend of the step',\n      '@param y1 variable that points to the integrator array, holding the state at\\nthe end of the step',\n      '@param y1 variable representing the integrator array, containing the state at\\nthe end of the step'\n    ]\n  },\n  {\n    'tag': '@param y1Dot reference to the integrator array holding the slope\\nat the end of the step',\n    'alternatives': [\n      '@param y1Dot reference to the integrator array that holds the slope\\nat the end of the step',\n      '@param y1Dot reference to the integrator array containing the slope\\nat the end of the step',\n      '@param y1Dot reference to the integrator array which stores the slope\\nat the end of the step',\n      '@param y1Dot variable that points to the integrator array, holding the slope at\\nthe end of the step',\n      '@param y1Dot variable representing the integrator array, containing the slope at\\nthe end of the step'\n    ]\n  },\n  {\n    'tag': '@param yMidDots reference to the integrator array holding the\\nderivatives at the middle point of the step',\n    'alternatives': [\n      '@param yMidDots reference to the integrator array that holds the derivatives at the\\nmiddle point of the step',\n      '@param yMidDots reference to the integrator array containing the derivatives at the\\nmiddle point of the step',\n      '@param yMidDots reference to the integrator array which stores the derivatives at the\\nmiddle point of the step',\n      '@param yMidDots variable that points to the integrator array, holding the derivatives at\\nthe middle point of the step',\n      '@param yMidDots variable representing the integrator array, containing the derivatives at\\nthe middle point of the step'\n    ]\n  },\n  {\n    'tag': '@param forward integration direction indicator',\n    'alternatives': [\n      '@param forward indicator for integration direction',\n      '@param forward indicator of the integration direction',\n      '@param forward integration direction indicator value',\n      '@param forward indicator indicating the integration direction',\n      '@param forward indicator showing the integration direction'\n    ]\n  },\n  {\n    'tag': '@param primaryMapper equations mapper for the primary equations set',\n    'alternatives': [\n      '@param primaryMapper mapper for the primary equations set',\n      '@param primaryMapper equations mapper of the primary equations set',\n      '@param primaryMapper equations mapper used for the primary equations set',\n      '@param primaryMapper equations mapper that maps the primary equations set',\n      '@param primaryMapper equations mapper handling the primary equations set'\n    ]\n  },\n  {\n    'tag': '@param secondaryMappers equations mappers for the secondary equations sets',\n    'alternatives': [\n      '@param secondaryMappers mappers for the secondary equations sets',\n      '@param secondaryMappers equations mappers of the secondary equations sets',\n      '@param secondaryMappers equations mappers used for the secondary equations sets',\n      '@param secondaryMappers equations mappers that map the secondary equations sets',\n      '@param secondaryMappers equations mappers handling the secondary equations sets'\n    ]\n  },\n  {\n    'tag': '@param interpolator interpolator to copy from. The copy is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n    'alternatives': [\n      '@param interpolator interpolator to duplicate. The duplication is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n      '@param interpolator interpolator for making a copy. The copy is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n      '@param interpolator interpolator for creating a clone. The clone is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n      '@param interpolator interpolator for producing a replica. The replica is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n      '@param interpolator interpolator for generating a duplicate. The duplicate is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance'\n    ]\n  },\n  {\n    'tag': '@param interpolator interpolator to copy from. The copy is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n    'alternatives': [\n      '@param interpolator interpolator to duplicate. The duplication is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n      '@param interpolator interpolator for making a copy. The copy is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n      '@param interpolator interpolator for creating a clone. The clone is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n      '@param interpolator interpolator for producing a replica. The replica is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance',\n      '@param interpolator interpolator for generating a duplicate. The duplicate is a deep\\ncopy: its arrays are separated from the original arrays of the\\ninstance'\n    ]\n  },\n  {\n    'tag': '@param step integration step',\n    'alternatives': [\n      '@param step size of the integration',\n      '@param step integration step value',\n      '@param step value of the integration step',\n      '@param step interval for the integration',\n      '@param step size for the integration'\n    ]\n  },\n  {\n    'tag': '@param absoluteTolerance allowed absolute error',\n    'alternatives': [\n      '@param absoluteTolerance permissible absolute error',\n      '@param absoluteTolerance absolute error that is allowed',\n      '@param absoluteTolerance allowed absolute deviation',\n      '@param absoluteTolerance acceptable absolute error',\n      '@param absoluteTolerance tolerated absolute error'\n    ]\n  },\n  {\n    'tag': '@param relativeTolerance allowed relative error',\n    'alternatives': [\n      '@param relativeTolerance permissible relative error',\n      '@param relativeTolerance relative error that is allowed',\n      '@param relativeTolerance allowed relative deviation',\n      '@param relativeTolerance acceptable relative error',\n      '@param relativeTolerance tolerated relative error'\n    ]\n  },\n  {\n    'tag': '@param absoluteTolerance allowed absolute error',\n    'alternatives': [\n      '@param absoluteTolerance permissible absolute error',\n      '@param absoluteTolerance absolute error that is allowed',\n      '@param absoluteTolerance allowed absolute deviation',\n      '@param absoluteTolerance acceptable absolute error',\n      '@param absoluteTolerance tolerated absolute error'\n    ]\n  },\n  {\n    'tag': '@param relativeTolerance allowed relative error',\n    'alternatives': [\n      '@param relativeTolerance permissible relative error',\n      '@param relativeTolerance relative error that is allowed',\n      '@param relativeTolerance allowed relative deviation',\n      '@param relativeTolerance acceptable relative error',\n      '@param relativeTolerance tolerated relative error'\n    ]\n  },\n  {\n    'tag': '@param forward forward integration indicator',\n    'alternatives': [\n      '@param forward indicator for forward integration',\n      '@param forward indicator of forward integration',\n      '@param forward forward integration indicator value',\n      '@param forward indicator indicating forward integration',\n      '@param forward indicator showing forward integration'\n    ]\n  },\n  {\n    'tag': '@param order order of the method',\n    'alternatives': [\n      '@param order numerical order of the method',\n      '@param order method order number',\n      '@param order method order value',\n      '@param order number representing the method order',\n      '@param order value indicating the method order'\n    ]\n  },\n  {\n    'tag': '@param scale scaling vector for the state vector (can be shorter than state vector)',\n    'alternatives': [\n      '@param scale scaling vector for the state vector (can have smaller length than the state vector)',\n      '@param scale vector used for scaling the state vector (may be shorter than the state vector)',\n      '@param scale vector to scale the state vector (can be shorter than the state vector)',\n      '@param scale vector that scales the state vector (can have a smaller length than the state vector)',\n      '@param scale vector for proportionally adjusting the state vector (may have smaller length)'\n    ]\n  },\n  {\n    'tag': '@param t0 start time',\n    'alternatives': [\n      '@param t0 initial time',\n      '@param t0 beginning time',\n      '@param t0 first time',\n      '@param t0 time at the start',\n      '@param t0 time at the beginning'\n    ]\n  },\n  {\n    'tag': '@param y0 state vector at t0',\n    'alternatives': [\n      '@param y0 vector representing the state at t0',\n      '@param y0 array describing the state at t0',\n      '@param y0 state vector for time t0',\n      '@param y0 state at time t0',\n      '@param y0 value of the state vector at t0'\n    ]\n  },\n  {\n    'tag': '@param yDot0 first time derivative of y0',\n    'alternatives': [\n      '@param yDot0 derivative of y0 with respect to time',\n      '@param yDot0 rate of change of y0',\n      '@param yDot0 first derivative of y0',\n      '@param yDot0 derivative of y0 at the first time',\n      '@param yDot0 y0's time derivative at the beginning'\n    ]\n  },\n  {\n    'tag': '@param y1 work array for a state vector',\n    'alternatives': [\n      '@param y1 array used for working with a state vector',\n      '@param y1 buffer for storing a state vector',\n      '@param y1 temporary array for handling a state vector',\n      '@param y1 storage array for a state vector',\n      '@param y1 workspace for processing a state vector'\n    ]\n  },\n  {\n    'tag': '@param yDot1 work array for the first time derivative of y1',\n    'alternatives': [\n      '@param yDot1 array used for working with the first time derivative of y1',\n      '@param yDot1 buffer for storing the first time derivative of y1',\n      '@param yDot1 temporary array for handling the first time derivative of y1',\n      '@param yDot1 storage array for the first time derivative of y1',\n      '@param yDot1 workspace for processing the first time derivative of y1'\n    ]\n  },\n  {\n    'tag': '@return first integration step',\n    'alternatives': [\n      '@return initial integration step',\n      '@return the value of the first integration step',\n      '@return integration step at the very beginning',\n      '@return step size for the first integration',\n      '@return size of the integration step taken initially'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the number of functions evaluations is exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException when the number of function evaluations exceeds the limit',\n      '@throws MaxCountExceededException if the count of function evaluations surpasses the maximum',\n      '@throws MaxCountExceededException if the number of function evaluations goes beyond the allowed',\n      '@throws MaxCountExceededException if the limit of function evaluations is crossed',\n      '@throws MaxCountExceededException if the maximum number of function evaluations is reached'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if arrays dimensions do not match equations settings',\n    'alternatives': [\n      '@throws DimensionMismatchException when arrays dimensions do not meet equations settings',\n      '@throws DimensionMismatchException if the dimensions of arrays do not conform to equations settings',\n      '@throws DimensionMismatchException if arrays sizes are not consistent with equations settings',\n      '@throws DimensionMismatchException if the dimensions of arrays do not align with equations settings',\n      '@throws DimensionMismatchException if arrays lengths do not match equations settings'\n    ]\n  },\n  {\n    'tag': '@param h signed step',\n    'alternatives': [\n      '@param h step of integration with sign',\n      '@param h signed integration step',\n      '@param h integration step having a sign',\n      '@param h signed step for the integration',\n      '@param h step for the integration with positive/negative sign'\n    ]\n  }\n]"