"[\n  {\n    'tag': '@return t statistic',\n    'alternatives': [\n      '@return t score',\n      '@return t value',\n      '@return t measure',\n      '@return t result',\n      '@return t outcome'\n    ]\n  },\n  {\n    'tag': '@param mu comparison constant',\n    'alternatives': [\n      '@param mu constant used for comparison',\n      '@param mu constant for comparison',\n      '@param mu constant value for comparison',\n      '@param mu constant to compare against',\n      '@param mu constant as a comparison value'\n    ]\n  },\n  {\n    'tag': '@return a random string of hex characters of length {@code len}',\n    'alternatives': [\n      '@return a randomly generated string of hexadecimal characters with a length of {@code len}',\n      '@return a string of random hex characters with a length of {@code len}',\n      '@return a hex string randomly generated with a length of {@code len}',\n      '@return a randomly generated string consisting of {@code len} hex characters',\n      '@return a string of random hexadecimal characters having a length of {@code len}'\n    ]\n  },\n  {\n    'tag': '@param lower lower bound for generated integer',\n    'alternatives': [\n      '@param lower minimum limit for the generated integer',\n      '@param lower smallest possible integer to generate',\n      '@param lower lower threshold for the generated integer',\n      '@param lower bottom limit for the generated integer',\n      '@param lower minimum boundary for the generated integer'\n    ]\n  },\n  {\n    'tag': '@param upper upper bound for generated integer',\n    'alternatives': [\n      '@param upper maximum limit for the generated integer',\n      '@param upper largest possible integer to generate',\n      '@param upper upper threshold for the generated integer',\n      '@param upper top limit for the generated integer',\n      '@param upper maximum boundary for the generated integer'\n    ]\n  },\n  {\n    'tag': '@param mean the mean of the Poisson distribution',\n    'alternatives': [\n      '@param mean average value of the Poisson distribution',\n      '@param mean expected value of the Poisson distribution',\n      '@param mean central value of the Poisson distribution',\n      '@param mean typical value of the Poisson distribution',\n      '@param mean average number of events in the Poisson distribution'\n    ]\n  },\n  {\n    'tag': '@return a random value following the specified Poisson distribution',\n    'alternatives': [\n      '@return a randomly generated value that conforms to the specified Poisson distribution',\n      '@return a random outcome that adheres to the specified Poisson distribution',\n      '@return a randomly selected value from the specified Poisson distribution',\n      '@return a random result in accordance with the specified Poisson distribution',\n      '@return a value chosen randomly on the basis of the specified Poisson distribution'\n    ]\n  },\n  {\n    'tag': '@param mu the mean of the distribution',\n    'alternatives': [\n      '@param mu average of the distribution',\n      '@param mu expected value of the distribution',\n      '@param mu central value of the distribution',\n      '@param mu typical value of the distribution',\n      '@param mu mean number in the distribution'\n    ]\n  },\n  {\n    'tag': '@param sigma the standard deviation of the distribution',\n    'alternatives': [\n      '@param sigma deviation from the mean in the distribution',\n      '@param sigma spread of values in the distribution',\n      '@param sigma deviation of values from the mean in the distribution',\n      '@param sigma variability of values in the distribution',\n      '@param sigma standard dispersion in the distribution'\n    ]\n  },\n  {\n    'tag': '@return a random value following the specified Gaussian distribution',\n    'alternatives': [\n      '@return a randomly generated value that follows the specified Gaussian distribution',\n      '@return a random outcome that obeys the specified Gaussian distribution',\n      '@return a randomly selected value from the specified Gaussian distribution',\n      '@return a random result in accordance with the specified Gaussian distribution',\n      '@return a value chosen randomly on the basis of the specified Gaussian distribution'\n    ]\n  },\n  {\n    'tag': '@param mean the mean of the distribution',\n    'alternatives': [\n      '@param mean average of the distribution',\n      '@param mean expected value of the distribution',\n      '@param mean central value of the distribution',\n      '@param mean typical value of the distribution',\n      '@param mean mean number in the distribution'\n    ]\n  },\n  {\n    'tag': '@return a random value following the specified exponential distribution',\n    'alternatives': [\n      '@return a randomly generated value that satisfies the specified exponential distribution',\n      '@return a random outcome that meets the specifications of the exponential distribution',\n      '@return a randomly selected value from the specified exponential distribution',\n      '@return a random result that adheres to the specified exponential distribution',\n      '@return a value chosen randomly based on the characteristics of the exponential distribution'\n    ]\n  },\n  {\n    'tag': '@param lower the exclusive lower bound of the support',\n    'alternatives': [\n      '@param lower lower limit of the support (exclusive)',\n      '@param lower smallest value of the support (exclusive)',\n      '@param lower lower threshold for the support (exclusive)',\n      '@param lower bottom boundary of the support (exclusive)',\n      '@param lower minimum value for the support (exclusive)'\n    ]\n  },\n  {\n    'tag': '@param upper the exclusive upper bound of the support',\n    'alternatives': [\n      '@param upper upper limit of the support (exclusive)',\n      '@param upper largest value of the support (exclusive)',\n      '@param upper upper threshold for the support (exclusive)',\n      '@param upper top boundary of the support (exclusive)',\n      '@param upper maximum value for the support (exclusive)'\n    ]\n  },\n  {\n    'tag': '@return a uniformly distributed random value between lower and upper\\n(exclusive)',\n    'alternatives': [\n      '@return a random value uniformly distributed between lower and upper\\n(excluding both)',\n      '@return a random value following a uniform distribution in the range (lower, upper)\\n(excluding both)',\n      '@return a randomly generated value uniformly distributed in the interval (lower, upper)\\n(excluding both)',\n      '@return a random outcome that follows a uniform distribution over the range (lower, upper)\\n(excluding both)',\n      '@return a value chosen randomly and uniformly between the lower and upper bounds\\n(excluding both)'\n    ]\n  },\n  {\n    'tag': '@throws NotFiniteNumberException if one of the bounds is infinite',\n    'alternatives': [\n      '@throws NotFiniteNumberException when one of the limits is infinity',\n      '@throws NotFiniteNumberException if any bound is infinite',\n      '@throws NotFiniteNumberException in case any of the boundaries is infinite',\n      '@throws NotFiniteNumberException if either of the limits is infinity',\n      '@throws NotFiniteNumberException when either bound is infinite'\n    ]\n  },\n  {\n    'tag': '@throws NotANumberException if one of the bounds is NaN',\n    'alternatives': [\n      '@throws NotANumberException when one of the limits is NaN',\n      '@throws NotANumberException if any bound is NaN',\n      '@throws NotANumberException in case any of the boundaries is NaN',\n      '@throws NotANumberException if either of the limits is NaN',\n      '@throws NotANumberException when either bound is NaN'\n    ]\n  },\n  {\n    'tag': '@param lower the lower bound of the support',\n    'alternatives': [\n      '@param lower minimum limit of the support',\n      '@param lower smallest value of the support',\n      '@param lower lower threshold for the support',\n      '@param lower bottom boundary of the support',\n      '@param lower minimum value for the support'\n    ]\n  },\n  {\n    'tag': '@param upper the exclusive upper bound of the support',\n    'alternatives': [\n      '@param upper upper limit of the support (exclusive)',\n      '@param upper largest value of the support (exclusive)',\n      '@param upper upper threshold for the support (exclusive)',\n      '@param upper top boundary of the support (exclusive)',\n      '@param upper maximum value for the support (exclusive)'\n    ]\n  },\n  {\n    'tag': '@param lowerInclusive {@code true} if the lower bound is inclusive',\n    'alternatives': [\n      '@param lowerInclusive {@code true} to include the lower bound',\n      '@param lowerInclusive {@code true} indicating the lower limit is inclusive',\n      '@param lowerInclusive {@code true} if the minimum value is part of the range',\n      '@param lowerInclusive {@code true} to consider the lower boundary as inclusive',\n      '@param lowerInclusive {@code true} meaning the smallest value is within the range'\n    ]\n  },\n  {\n    'tag': '@return uniformly distributed random value in the {@code (lower, upper)}\\ninterval, if {@code lowerInclusive} is {@code false}, or in the\\n{@code [lower, upper)} interval, if {@code lowerInclusive} is\\n{@code true}',\n    'alternatives': [\n      '@return a random value uniformly distributed in the range {@code (lower, upper)}\\nif {@code lowerInclusive} is {@code false}, or in the range {@code [lower, upper)}\\nif {@code lowerInclusive} is {@code true}',\n      '@return a random value that follows a uniform distribution within the interval\\n{@code (lower, upper)}, if {@code lowerInclusive} is {@code false}, or within the interval\\n{@code [lower, upper)} if {@code lowerInclusive} is {@code true}',\n      '@return a value randomly chosen that is uniformly distributed between {@code lower} and {@code upper}\\n(not inclusive) if {@code lowerInclusive} is {@code false}, or between {@code lower} and\\n{@code upper} (lower inclusive) if {@code lowerInclusive} is {@code true}',\n      '@return a random value evenly distributed in the interval {@code (lower, upper)}\\nif {@code lowerInclusive} is {@code false}, or in the interval {@code [lower, upper)}\\nif {@code lowerInclusive} is {@code true}',\n      '@return a uniformly distributed random value within the range {@code (lower, upper)}\\nif {@code lowerInclusive} is {@code false}, or within the range {@code [lower, upper)}\\nif {@code lowerInclusive} is {@code true}'\n    ]\n  },\n  {\n    'tag': '@throws NotFiniteNumberException if one of the bounds is infinite',\n    'alternatives': [\n      '@throws NotFiniteNumberException when one of the limits is infinity',\n      '@throws NotFiniteNumberException if any bound is infinite',\n      '@throws NotFiniteNumberException in case any of the boundaries is infinite',\n      '@throws NotFiniteNumberException if either of the limits is infinity',\n      '@throws NotFiniteNumberException when either bound is infinite'\n    ]\n  },\n  {\n    'tag': '@throws NotANumberException if one of the bounds is NaN',\n    'alternatives': [\n      '@throws NotANumberException when one of the limits is NaN',\n      '@throws NotANumberException if any bound is NaN',\n      '@throws NotANumberException in case any of the boundaries is NaN',\n      '@throws NotANumberException if either of the limits is NaN',\n      '@throws NotANumberException when either bound is NaN'\n    ]\n  }\n]"