"[\n  {\n    'tag': '@param p the Poisson mean',\n    'alternatives': [\n      '@param p the average of the Poisson distribution',\n      '@param p the mean value of the Poisson distribution',\n      '@param p represents the mean value of the Poisson distribution'\n    ]\n  },\n  {\n    'tag': '@param p Poisson mean.',\n    'alternatives': [\n      '@param p average of the Poisson distribution.',\n      '@param p mean value of the Poisson distribution.',\n      '@param p represents the mean value of the Poisson distribution.'\n    ]\n  },\n  {\n    'tag': '@param epsilon Convergence criterion for cumulative probabilities.',\n    'alternatives': [\n      '@param epsilon the convergence threshold for cumulative probabilities.',\n      '@param epsilon represents the criterion for convergence of cumulative probabilities.',\n      '@param epsilon denotes the limit for convergence of cumulative probabilities.'\n    ]\n  },\n  {\n    'tag': '@param maxIterations the maximum number of iterations for cumulative\\nprobabilities.',\n    'alternatives': [\n      '@param maxIterations maximum allowed iterations for cumulative probabilities.',\n      '@param maxIterations represents the upper limit for iterations of cumulative probabilities.',\n      '@param maxIterations denotes the maximum number of iterations for cumulative probabilities.'\n    ]\n  },\n  {\n    'tag': '@param rng Random number generator.',\n    'alternatives': [\n      '@param rng a source of random numbers.',\n      '@param rng the generator of random numbers.',\n      '@param rng provides random number generation.'\n    ]\n  },\n  {\n    'tag': '@param p Poisson mean.',\n    'alternatives': [\n      '@param p average of the Poisson distribution.',\n      '@param p mean value of the Poisson distribution.',\n      '@param p represents the mean value of the Poisson distribution.'\n    ]\n  },\n  {\n    'tag': '@param epsilon Convergence criterion for cumulative probabilities.',\n    'alternatives': [\n      '@param epsilon the convergence threshold for cumulative probabilities.',\n      '@param epsilon represents the criterion for convergence of cumulative probabilities.',\n      '@param epsilon denotes the limit for convergence of cumulative probabilities.'\n    ]\n  },\n  {\n    'tag': '@param maxIterations the maximum number of iterations for cumulative\\nprobabilities.',\n    'alternatives': [\n      '@param maxIterations maximum allowed iterations for cumulative probabilities.',\n      '@param maxIterations represents the upper limit for iterations of cumulative probabilities.',\n      '@param maxIterations denotes the maximum number of iterations for cumulative probabilities.'\n    ]\n  },\n  {\n    'tag': '@param p Poisson mean.',\n    'alternatives': [\n      '@param p average of the Poisson distribution.',\n      '@param p mean value of the Poisson distribution.',\n      '@param p represents the mean value of the Poisson distribution.'\n    ]\n  },\n  {\n    'tag': '@param epsilon Convergence criterion for cumulative probabilities.',\n    'alternatives': [\n      '@param epsilon the convergence threshold for cumulative probabilities.',\n      '@param epsilon represents the criterion for convergence of cumulative probabilities.',\n      '@param epsilon denotes the limit for convergence of cumulative probabilities.'\n    ]\n  },\n  {\n    'tag': '@param p Poisson mean.',\n    'alternatives': [\n      '@param p average of the Poisson distribution.',\n      '@param p mean value of the Poisson distribution.',\n      '@param p represents the mean value of the Poisson distribution.'\n    ]\n  },\n  {\n    'tag': '@param maxIterations Maximum number of iterations for cumulative\\nprobabilities.',\n    'alternatives': [\n      '@param maxIterations maximum allowed iterations for cumulative probabilities.',\n      '@param maxIterations represents the upper limit for iterations of cumulative probabilities.',\n      '@param maxIterations denotes the maximum number of iterations for cumulative probabilities.'\n    ]\n  },\n  {\n    'tag': '@param d statistic',\n    'alternatives': [\n      '@param d value of the statistic',\n      '@param d represents the statistical value',\n      '@param d denotes the statistical parameter'\n    ]\n  },\n  {\n    'tag': '@return the two-sided probability of {@code P(D_n < d)}',\n    'alternatives': [\n      '@return the probability of both sides of the {@code P(D_n < d)}',\n      '@return the probability for both directions of {@code P(D_n < d)}',\n      '@return the probability in two directions of the {@code P(D_n < d)}'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException if algorithm fails to convert {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} in expressing\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1}.',\n    'alternatives': [\n      '@throws MathArithmeticException if the algorithm cannot convert {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} while expressing\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1}.',\n      '@throws MathArithmeticException if the conversion of {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} to express\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1} fails in the algorithm.',\n      '@throws MathArithmeticException if the algorithm encounters a failure in converting {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} while expressing\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1}.'\n    ]\n  },\n  {\n    'tag': '@param d statistic',\n    'alternatives': [\n      '@param d value of the statistic',\n      '@param d represents the statistical value',\n      '@param d denotes the statistical parameter'\n    ]\n  },\n  {\n    'tag': '@return the two-sided probability of {@code P(D_n < d)}',\n    'alternatives': [\n      '@return the probability of both sides of the {@code P(D_n < d)}',\n      '@return the probability for both directions of {@code P(D_n < d)}',\n      '@return the probability in two directions of the {@code P(D_n < d)}'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException if algorithm fails to convert {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} in expressing\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1}.',\n    'alternatives': [\n      '@throws MathArithmeticException if the algorithm cannot convert {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} while expressing\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1}.',\n      '@throws MathArithmeticException if the conversion of {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} to express\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1} fails in the algorithm.',\n      '@throws MathArithmeticException if the algorithm encounters a failure in converting {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} while expressing\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1}.'\n    ]\n  },\n  {\n    'tag': '@param d statistic',\n    'alternatives': [\n      '@param d value of the statistic',\n      '@param d represents the statistical value',\n      '@param d denotes the statistical parameter'\n    ]\n  },\n  {\n    'tag': '@param exact whether the probability should be calculated exact using\\n{@link org.apache.commons.math3.fraction.BigFraction} everywhere at the\\nexpense of very slow execution time, or if {@code double} should be used\\nconvenient places to gain speed. Almost never choose {@code true} in real\\napplications unless you are very sure; {@code true} is almost solely for\\nverification purposes.',\n    'alternatives': [\n      '@param exact determines whether to calculate the probability exactly using\\n{@link org.apache.commons.math3.fraction.BigFraction} everywhere which results\\nin very slow execution time, or to use {@code double} for convenience and gain\\nspeed in appropriate places. Only choose {@code true} in verification purposes\\nand avoid in real applications unless absolutely certain.',\n      '@param exact indicates if the probability will be calculated exactly using\\n{@link org.apache.commons.math3.fraction.BigFraction} throughout the process,\\neven if it leads to significantly slower execution time. Alternatively, using\\n{@code double} may be more appropriate in certain cases to improve speed. Be\\ncareful when setting this parameter to {@code true} and avoid it in real\\napplications unless essential.',\n      '@param exact specifies whether the probability should be computed exactly using\\n{@link org.apache.commons.math3.fraction.BigFraction} with potentially long\\ncalculation time, or if {@code double} should be used to improve execution\\nspeed in certain parts. It is strongly recommended to use {@code false} for\\nmost real applications, as {@code true} is primarily for verification purposes.'\n    ]\n  },\n  {\n    'tag': '@return the two-sided probability of {@code P(D_n < d)}',\n    'alternatives': [\n      '@return the probability of both sides of the {@code P(D_n < d)}',\n      '@return the probability for both directions of {@code P(D_n < d)}',\n      '@return the probability in two directions of the {@code P(D_n < d)}'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException if algorithm fails to convert {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} in expressing\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1}.',\n    'alternatives': [\n      '@throws MathArithmeticException if the algorithm cannot convert {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} while expressing\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1}.',\n      '@throws MathArithmeticException if the conversion of {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} to express\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1} fails in the algorithm.',\n      '@throws MathArithmeticException if the algorithm encounters a failure in converting {@code h}\\nto a {@link org.apache.commons.math3.fraction.BigFraction} while expressing\\n{@code d} as {@code (k - h) / m} for integer {@code k, m} and\\n{@code 0 <= h < 1}.'\n    ]\n  }\n]"