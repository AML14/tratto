"output=[\n  {\n    'tag': '@param entries the entries for which to return an unmodifiable view',\n    'alternatives': [\n      '@param entries the elements for which to provide an unmodifiable perspective',\n      '@param entries the items to obtain an unmodifiable view for',\n      '@param entries the objects for which an unmodifiable view is desired',\n      '@param entries the data for which an unmodifiable view is needed',\n      '@param entries the input for which an unmodifiable view should be returned'\n    ]\n  },\n  {\n    'tag': '@return an unmodifiable view of the entries',\n    'alternatives': [\n      '@return an immutable perspective of the entries',\n      '@return a view of the entries that cannot be modified',\n      '@return a read-only view of the entries',\n      '@return an unchangeable view of the entries',\n      '@return a non-modifiable perspective of the entries'\n    ]\n  },\n  {\n    'tag': '@param map the backing map for the returned multimap view',\n    'alternatives': [\n      '@param map the underlying map of the returned multimap view',\n      '@param map the original map for the resulting multimap view',\n      '@param map the source map for the generated multimap view',\n      '@param map the base map for the obtained multimap view',\n      '@param map the supporting map for the obtained multimap view'\n    ]\n  },\n  {\n    'tag': '@param coefficients The coefficients of the constraint (left hand side)',\n    'alternatives': [\n      '@param coefficients The factors of the restriction (left hand side)',\n      '@param coefficients The variables that affect the constraint (left hand side)',\n      '@param coefficients The weights assigned to the constraint (left hand side)',\n      '@param coefficients The values determining the constraint (left hand side)',\n      '@param coefficients The parameters controlling the constraint (left hand side)'\n    ]\n  },\n  {\n    'tag': '@param relationship The type of (in)equality used in the constraint',\n    'alternatives': [\n      '@param relationship The kind of (in)equality employed in the restriction',\n      '@param relationship The category of (in)equality applied in the constraint',\n      '@param relationship The mode of (in)equality utilized in the constraint',\n      '@param relationship The type of condition satisfied in the constraint',\n      '@param relationship The form of (in)equality implemented in the restriction'\n    ]\n  },\n  {\n    'tag': '@param value The value of the constraint (right hand side)',\n    'alternatives': [\n      '@param value The numerical representation of the constraint (right hand side)',\n      '@param value The amount assigned to the constraint (right hand side)',\n      '@param value The magnitude of the restriction (right hand side)',\n      '@param value The quantity denoting the constraint (right hand side)',\n      '@param value The parameter indicating the constraint (right hand side)'\n    ]\n  },\n  {\n    'tag': '@param lhsCoefficients The coefficients of the linear expression on the left hand side of the constraint',\n    'alternatives': [\n      '@param lhsCoefficients The factors of the linear equation on the left hand side of the constraint',\n      '@param lhsCoefficients The variables affecting the linear equation on the left hand side of the constraint',\n      '@param lhsCoefficients The weights assigned to the linear expression on the left hand side of the constraint',\n      '@param lhsCoefficients The values determining the linear expression on the left hand side of the constraint',\n      '@param lhsCoefficients The parameters controlling the linear expression on the left hand side of the constraint'\n    ]\n  },\n  {\n    'tag': '@param lhsConstant The constant term of the linear expression on the left hand side of the constraint',\n    'alternatives': [\n      '@param lhsConstant The fixed value of the linear equation on the left hand side of the constraint',\n      '@param lhsConstant The unchanging term of the linear expression on the left hand side of the constraint',\n      '@param lhsConstant The invariant element of the linear expression on the left hand side of the constraint',\n      '@param lhsConstant The static value of the linear equation on the left hand side of the constraint',\n      '@param lhsConstant The stationary part of the linear expression on the left hand side of the constraint'\n    ]\n  },\n  {\n    'tag': '@param rhsCoefficients The coefficients of the linear expression on the right hand side of the constraint',\n    'alternatives': [\n      '@param rhsCoefficients The factors of the linear equation on the right hand side of the constraint',\n      '@param rhsCoefficients The variables affecting the linear equation on the right hand side of the constraint',\n      '@param rhsCoefficients The weights assigned to the linear expression on the right hand side of the constraint',\n      '@param rhsCoefficients The values determining the linear expression on the right hand side of the constraint',\n      '@param rhsCoefficients The parameters controlling the linear expression on the right hand side of the constraint'\n    ]\n  },\n  {\n    'tag': '@param rhsConstant The constant term of the linear expression on the right hand side of the constraint',\n    'alternatives': [\n      '@param rhsConstant The fixed value of the linear equation on the right hand side of the constraint',\n      '@param rhsConstant The unchanging term of the linear expression on the right hand side of the constraint',\n      '@param rhsConstant The invariant element of the linear expression on the right hand side of the constraint',\n      '@param rhsConstant The static value of the linear equation on the right hand side of the constraint',\n      '@param rhsConstant The stationary part of the linear expression on the right hand side of the constraint'\n    ]\n  },\n  {\n    'tag': '@param tableau simple tableau for the problem',\n    'alternatives': [\n      '@param tableau basic tableau for the issue',\n      '@param tableau straightforward tableau for the problem',\n      '@param tableau fundamental tableau for the problem',\n      '@param tableau easy tableau for the problem',\n      '@param tableau plain tableau for the problem'\n    ]\n  },\n  {\n    'tag': '@return column with the most negative coefficient',\n    'alternatives': [\n      '@return column having the greatest negative coefficient',\n      '@return column that exhibits the most negative coefficient',\n      '@return column with the lowest negativity coefficient',\n      '@return column containing the most negative coefficient',\n      '@return column characterized by the most negative coefficient'\n    ]\n  },\n  {\n    'tag': '@param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}',\n    'alternatives': [\n      '@param col the column used to evaluate the proportion.  Refer to {@link #getPivotColumn(SimplexTableau)}',\n      '@param col the column to examine the ratio of.  Refer to {@link #getPivotColumn(SimplexTableau)}',\n      '@param col the column for which to calculate the ratio.  Refer to {@link #getPivotColumn(SimplexTableau)}',\n      '@param col the column whose ratio needs to be tested.  Refer to {@link #getPivotColumn(SimplexTableau)}',\n      '@param col the column to assess the proportion of.  Refer to {@link #getPivotColumn(SimplexTableau)}'\n    ]\n  },\n  {\n    'tag': '@return row with the minimum ratio',\n    'alternatives': [\n      '@return row having the smallest ratio',\n      '@return row that possesses the minimum ratio',\n      '@return row with the lowest ratio',\n      '@return row containing the minimum ratio',\n      '@return row characterized by the minimum ratio'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the maximal iteration count has been exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException if the maximum iteration count has been surpassed',\n      '@throws MaxCountExceededException if the maximum number of iterations has been exceeded',\n      '@throws MaxCountExceededException if the iteration count limit has been surpassed',\n      '@throws MaxCountExceededException if the maximum iteration count has been surpassed',\n      '@throws MaxCountExceededException if the maximal number of iterations has been exceeded'\n    ]\n  },\n  {\n    'tag': '@throws UnboundedSolutionException if the model is found not to have a bounded solution',\n    'alternatives': [\n      '@throws UnboundedSolutionException if the model is determined to have an unbounded solution',\n      '@throws UnboundedSolutionException if the model is discovered to lack a bounded solution',\n      '@throws UnboundedSolutionException if the model does not possess a bounded solution',\n      '@throws UnboundedSolutionException if the model is detected to have an infinite solution',\n      '@throws UnboundedSolutionException if the model is identified to have an unbounded solution'\n    ]\n  },\n  {\n    'tag': '@throws MaxCountExceededException if the maximal iteration count has been exceeded',\n    'alternatives': [\n      '@throws MaxCountExceededException if the maximum iteration count has been surpassed',\n      '@throws MaxCountExceededException if the maximum number of iterations has been exceeded',\n      '@throws MaxCountExceededException if the iteration count limit has been surpassed',\n      '@throws MaxCountExceededException if the maximum iteration count has been surpassed',\n      '@throws MaxCountExceededException if the maximal number of iterations has been exceeded'\n    ]\n  }\n]"