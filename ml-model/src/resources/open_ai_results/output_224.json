"output=[\n  {\n    'tag': '@throws NoDataException if {@code x} or {@code y} are zero-length.',\n    'alternatives': [\n      '@throws NoDataException if {@code x} or {@code y} have a length of zero.',\n      '@throws NoDataException if the length of {@code x} or {@code y} is zero.',\n      '@throws NoDataException if the size of {@code x} or {@code y} is zero.',\n      '@throws NoDataException if either {@code x} or {@code y} is of length zero.',\n      '@throws NoDataException if {@code x} or {@code y} have zero length.'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if {@code x} and {@code y} do not\\nhave the same length.',\n    'alternatives': [\n      '@throws DimensionMismatchException if the lengths of {@code x} and {@code y} are not equal.',\n      '@throws DimensionMismatchException if {@code x} and {@code y} have different lengths.',\n      '@throws DimensionMismatchException if the size of {@code x} and {@code y} differs.',\n      '@throws DimensionMismatchException if {@code x} and {@code y} have unequal lengths.',\n      '@throws DimensionMismatchException if the lengths of {@code x} and {@code y} do not match.'\n    ]\n  },\n  {\n    'tag': '@param x first sample',\n    'alternatives': [\n      '@param x initial sample',\n      '@param x primary sample',\n      '@param x starting sample',\n      '@param x sample one',\n      '@param x initial dataset'\n    ]\n  },\n  {\n    'tag': '@param y second sample',\n    'alternatives': [\n      '@param y subsequent sample',\n      '@param y secondary sample',\n      '@param y alternate sample',\n      '@param y sample two',\n      '@param y additional sample'\n    ]\n  },\n  {\n    'tag': '@return z = y - x',\n    'alternatives': [\n      '@return z equals y - x',\n      '@return z is the difference between y and x',\n      '@return z: y subtracted by x',\n      '@return z, which is obtained by subtracting x from y',\n      '@return z calculated as the subtraction of x from y'\n    ]\n  },\n  {\n    'tag': '@param z sample',\n    'alternatives': [\n      '@param z dataset',\n      '@param z collected data',\n      '@param z measurement',\n      '@param z observation',\n      '@param z input'\n    ]\n  },\n  {\n    'tag': '@return |z|',\n    'alternatives': [\n      '@return the absolute value of z',\n      '@return the magnitude of z',\n      '@return the absolute magnitude of z',\n      '@return the modulus of z',\n      '@return the absolute amplitude of z'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if {@code z} is {@code null}',\n    'alternatives': [\n      '@throws NullArgumentException if {@code z} is null',\n      '@throws NullArgumentException if {@code z} is not provided',\n      '@throws NullArgumentException if a null value is passed for {@code z}',\n      '@throws NullArgumentException if the value of {@code z} is null',\n      '@throws NullArgumentException if the input {@code z} is null'\n    ]\n  },\n  {\n    'tag': '@throws NoDataException if {@code z} is zero-length.',\n    'alternatives': [\n      '@throws NoDataException if {@code z} has a length of zero.',\n      '@throws NoDataException if the length of {@code z} is zero.',\n      '@throws NoDataException if the size of {@code z} is zero.',\n      '@throws NoDataException if {@code z} is of length zero.',\n      '@throws NoDataException if {@code z} has zero length.'\n    ]\n  },\n  {\n    'tag': '@param x the first sample',\n    'alternatives': [\n      '@param x first dataset',\n      '@param x primary sample',\n      '@param x initial sample',\n      '@param x starting data',\n      '@param x original sample'\n    ]\n  },\n  {\n    'tag': '@param y the second sample',\n    'alternatives': [\n      '@param y subsequent dataset',\n      '@param y secondary sample',\n      '@param y alternate data',\n      '@param y another sample',\n      '@param y additional data'\n    ]\n  },\n  {\n    'tag': '@return wilcoxonSignedRank statistic (the larger of W+ and W-)',\n    'alternatives': [\n      '@return the wilcoxonSignedRank statistic (the larger of W+ and W-)',\n      '@return the wilcoxonSignedRank statistic, which is the larger of W+ and W-',\n      '@return the wilcoxonSignedRank statistic, where W+ and W- are compared and the larger one is returned',\n      '@return the larger value between W+ and W- in the wilcoxonSignedRank statistic',\n      '@return the wilcoxonSignedRank statistic, taking into account the larger of W+ and W-'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if {@code x} and {@code y} do not\\nhave the same length.',\n    'alternatives': [\n      '@throws DimensionMismatchException if the lengths of {@code x} and {@code y} are not equal.',\n      '@throws DimensionMismatchException if {@code x} and {@code y} have different lengths.',\n      '@throws DimensionMismatchException if the size of {@code x} and {@code y} differs.',\n      '@throws DimensionMismatchException if {@code x} and {@code y} have unequal lengths.',\n      '@throws DimensionMismatchException if the lengths of {@code x} and {@code y} do not match.'\n    ]\n  },\n  {\n    'tag': '@param Wmax largest Wilcoxon signed rank value',\n    'alternatives': [\n      '@param Wmax maximum Wilcoxon signed rank value',\n      '@param Wmax greatest Wilcoxon signed rank value',\n      '@param Wmax top Wilcoxon signed rank value',\n      '@param Wmax largest value of the Wilcoxon signed rank',\n      '@param Wmax highest Wilcoxon signed rank value'\n    ]\n  },\n  {\n    'tag': '@param N number of subjects (corresponding to x.length)',\n    'alternatives': [\n      '@param N count of individuals (corresponding to x.length)',\n      '@param N quantity of participants (corresponding to x.length)',\n      '@param N total number of subjects (corresponding to x.length)',\n      '@param N number of cases (corresponding to x.length)',\n      '@param N amount of subjects (corresponding to x.length)'\n    ]\n  },\n  {\n    'tag': '@return two-sided exact p-value',\n    'alternatives': [\n      '@return p-value with two-sided exact calculation',\n      '@return two-sided p-value calculated with exact method',\n      '@return the two-sided exact p-value',\n      '@return two-sided p-value calculated using the exact method',\n      '@return exact two-sided p-value'\n    ]\n  },\n  {\n    'tag': '@param Wmin smallest Wilcoxon signed rank value',\n    'alternatives': [\n      '@param Wmin minimum Wilcoxon signed rank value',\n      '@param Wmin smallest value of the Wilcoxon signed rank',\n      '@param Wmin least Wilcoxon signed rank value',\n      '@param Wmin bottom Wilcoxon signed rank value',\n      '@param Wmin lowest Wilcoxon signed rank value'\n    ]\n  },\n  {\n    'tag': '@param N number of subjects (corresponding to x.length)',\n    'alternatives': [\n      '@param N count of individuals (corresponding to x.length)',\n      '@param N quantity of participants (corresponding to x.length)',\n      '@param N total number of subjects (corresponding to x.length)',\n      '@param N number of cases (corresponding to x.length)',\n      '@param N amount of subjects (corresponding to x.length)'\n    ]\n  },\n  {\n    'tag': '@return two-sided asymptotic p-value',\n    'alternatives': [\n      '@return p-value with two-sided asymptotic calculation',\n      '@return two-sided p-value calculated with asymptotic method',\n      '@return the two-sided asymptotic p-value',\n      '@return two-sided p-value calculated using the asymptotic method',\n      '@return asymptotic two-sided p-value'\n    ]\n  },\n  {\n    'tag': '@param x the first sample',\n    'alternatives': [\n      '@param x first dataset',\n      '@param x primary sample',\n      '@param x initial sample',\n      '@param x starting data',\n      '@param x original sample'\n    ]\n  },\n  {\n    'tag': '@param y the second sample',\n    'alternatives': [\n      '@param y subsequent dataset',\n      '@param y secondary sample',\n      '@param y alternate data',\n      '@param y another sample',\n      '@param y additional data'\n    ]\n  },\n  {\n    'tag': '@param exactPValue if the exact p-value is wanted (only works for x.length <= 30,\\n           if true and x.length > 30, this is ignored because\\n           calculations may take too long)',\n    'alternatives': [\n      '@param exactPValue if the exact p-value is desired (only applicable for x.length <= 30,\\n           if true and x.length > 30, this is disregarded due to\\n           potential long calculation times)',\n      '@param exactPValue if the user desires the exact p-value (only valid when x.length <= 30,\\n           if true and x.length > 30, this is not considered as it may\\n           result in excessive computation time)',\n      '@param exactPValue if the exact p-value is requested (only works for x.length <= 30,\\n           if true and x.length > 30, this is not taken into account because\\n           computations might be too time-consuming)',\n      '@param exactPValue if the user wants the exact p-value (only applicable when x.length <= 30,\\n           if true and x.length > 30, this is ignored because\\n           calculations may take considerable time)',\n      '@param exactPValue if the exact p-value is needed (only applicable for x.length <= 30,\\n           if true and x.length > 30, this is disregarded as calculations\\n           might require excessive time)'\n    ]\n  },\n  {\n    'tag': '@return p-value',\n    'alternatives': [\n      '@return the p-value',\n      '@return the calculated p-value',\n      '@return the resulting p-value',\n      '@return computed p-value',\n      '@return obtained p-value'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if {@code x} and {@code y} do not\\nhave the same length.',\n    'alternatives': [\n      '@throws DimensionMismatchException if the lengths of {@code x} and {@code y} are not equal.',\n      '@throws DimensionMismatchException if {@code x} and {@code y} have different lengths.',\n      '@throws DimensionMismatchException if the size of {@code x} and {@code y} differs.',\n      '@throws DimensionMismatchException if {@code x} and {@code y} have unequal lengths.',\n      '@throws DimensionMismatchException if the lengths of {@code x} and {@code y} do not match.'\n    ]\n  },\n  {\n    'tag': '@throws ConvergenceException if the p-value can not be computed due to\\na convergence error',\n    'alternatives': [\n      '@throws ConvergenceException if there is a convergence issue while computing the p-value',\n      '@throws ConvergenceException if an error occurs during p-value calculation due to convergence',\n      '@throws ConvergenceException if computing the p-value encounters a convergence error',\n      '@throws ConvergenceException if a convergence error is encountered while calculating the p-value',\n      '@throws ConvergenceException if the p-value cannot be computed because of a convergence error'\n    ]\n  }\n]"