"[\n  {\n    \"tag\": \"@param min minimal bound of the search interval\",\n    \"alternatives\": [\n      \"@param min minimum bound of the search interval\",\n      \"@param min lowest bound of the search interval\",\n      \"@param min smallest bound of the search interval\",\n      \"@param min minimum limit of the search interval\",\n      \"@param min lower limit of the search interval\"\n    ]\n  },\n  {\n    \"tag\": \"@param max maximal bound of the search interval\",\n    \"alternatives\": [\n      \"@param max maximum bound of the search interval\",\n      \"@param max highest bound of the search interval\",\n      \"@param max largest bound of the search interval\",\n      \"@param max upper limit of the search interval\",\n      \"@param max top limit of the search interval\"\n    ]\n  },\n  {\n    \"tag\": \"@param allowedSolution the kind of solutions that the root-finding algorithm may\\naccept as solutions.\",\n    \"alternatives\": [\n      \"@param allowedSolution the types of solutions that the root-finding algorithm can\\naccept\",\n      \"@param allowedSolution the acceptable solutions for the root-finding algorithm\",\n      \"@param allowedSolution the possible solution types allowed by the root-finding\\nalgorithm\",\n      \"@param allowedSolution the solution categories that can be accepted by the\\nroot-finding algorithm\",\n      \"@param allowedSolution the types of solutions that the root-finding algorithm is\\nwilling to accept\"\n    ]\n  },\n  {\n    \"tag\": \"@return a root approximation, on the specified side of the exact root\",\n    \"alternatives\": [\n      \"@return an approximate root on the specified side of the precise root\",\n      \"@return an estimation of a root, situated on the specified side of the\\nexact root\",\n      \"@return a rough approximation of a root, located on the specified side of the\\nexact root\",\n      \"@return an approximate value for a root, positioned on the specified side of\\nthe exact root\",\n      \"@return a rough estimation of a root, situated on the specified side of the\\nexact root\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NoBracketingException if the function has the same sign at the\\nendpoints.\",\n    \"alternatives\": [\n      \"@throws NoBracketingException in case the function has the same sign at the\\nendpoints\",\n      \"@throws NoBracketingException when the function exhibits the same sign at the\\nendpoints\",\n      \"@throws NoBracketingException if the function does not change sign at the\\nendpoints\",\n      \"@throws NoBracketingException when the function lacks sign change at the\\nendpoints\",\n      \"@throws NoBracketingException if the function maintains a constant sign at the\\nendpoints\"\n    ]\n  },\n  {\n    \"tag\": \"@param function Function.\",\n    \"alternatives\": [\n      \"@param function The function.\",\n      \"@param function The input function.\",\n      \"@param function The mathematical function.\",\n      \"@param function The given function.\",\n      \"@param function The provided function.\"\n    ]\n  },\n  {\n    \"tag\": \"@param initial Initial midpoint of interval being expanded to\\nbracket a root.\",\n    \"alternatives\": [\n      \"@param initial The initial midpoint of the interval that is being expanded to\\nbracket a root.\",\n      \"@param initial The starting midpoint of the interval being widened to\\nbracket a root.\",\n      \"@param initial The initial center point of the interval being expanded to\\nbracket a root.\",\n      \"@param initial The starting middle point of the interval being extended to\\nbracket a root.\",\n      \"@param initial The initial value of the midpoint of the interval that is being\\nexpanded to bracket a root.\"\n    ]\n  },\n  {\n    \"tag\": \"@param lowerBound Lower bound (a is never lower than this value)\",\n    \"alternatives\": [\n      \"@param lowerBound The minimum limit (a is always greater than or equal to this\\nvalue)\",\n      \"@param lowerBound The lower boundary (a is never less than this value)\",\n      \"@param lowerBound The smallest allowable value (a is never below this\\nthreshold)\",\n      \"@param lowerBound The bottom limit (a is never less than this value)\",\n      \"@param lowerBound The lowest acceptable value (a is never below this\\nthreshold)\"\n    ]\n  },\n  {\n    \"tag\": \"@param upperBound Upper bound (b never is greater than this\\nvalue).\",\n    \"alternatives\": [\n      \"@param upperBound The maximum limit (b is always less than or equal to this\\nvalue).\",\n      \"@param upperBound The upper boundary (b is never above this value).\",\n      \"@param upperBound The largest allowable value (b is never above this\\nthreshold).\",\n      \"@param upperBound The top limit (b is never greater than this value).\",\n      \"@param upperBound The highest acceptable value (b is never above this\\nthreshold).\"\n    ]\n  },\n  {\n    \"tag\": \"@return a two-element array holding a and b.\",\n    \"alternatives\": [\n      \"@return an array of size two containing the values of a and b.\",\n      \"@return a 2-element array with the values of a and b.\",\n      \"@return an array consisting of a and b as its two elements.\",\n      \"@return an array that holds the values of a and b.\",\n      \"@return a two-member array that stores the values of a and b.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NoBracketingException if a root cannot be bracketted.\",\n    \"alternatives\": [\n      \"@throws NoBracketingException if it is impossible to bracket a root.\",\n      \"@throws NoBracketingException if the process of bracketing a root is not\\nachievable.\",\n      \"@throws NoBracketingException in case the root cannot be bracketed.\",\n      \"@throws NoBracketingException if it is not possible to enclose a root.\",\n      \"@throws NoBracketingException if the inability to bracket a root occurs.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NotStrictlyPositiveException if {@code maximumIterations <= 0}.\",\n    \"alternatives\": [\n      \"@throws NotStrictlyPositiveException if the value of maximumIterations is not\\nstrictly positive.\",\n      \"@throws NotStrictlyPositiveException when the maximumIterations value is not\\ngreater than zero.\",\n      \"@throws NotStrictlyPositiveException if the maximumIterations is less than or\\nequal to zero.\",\n      \"@throws NotStrictlyPositiveException when the number of maximumIterations is\\nnot strictly positive.\",\n      \"@throws NotStrictlyPositiveException if the maximumIterations is not strictly\\npositive.\"\n    ]\n  },\n  {\n    \"tag\": \"@param function Function.\",\n    \"alternatives\": [\n      \"@param function The function.\",\n      \"@param function The input function.\",\n      \"@param function The mathematical function.\",\n      \"@param function The given function.\",\n      \"@param function The provided function.\"\n    ]\n  },\n  {\n    \"tag\": \"@param initial Initial midpoint of interval being expanded to\\nbracket a root.\",\n    \"alternatives\": [\n      \"@param initial The initial midpoint of the interval that is being expanded to\\nbracket a root.\",\n      \"@param initial The starting midpoint of the interval being widened to\\nbracket a root.\",\n      \"@param initial The initial center point of the interval being expanded to\\nbracket a root.\",\n      \"@param initial The starting middle point of the interval being extended to\\nbracket a root.\",\n      \"@param initial The initial value of the midpoint of the interval that is being\\nexpanded to bracket a root.\"\n    ]\n  },\n  {\n    \"tag\": \"@param lowerBound Lower bound (a is never lower than this value).\",\n    \"alternatives\": [\n      \"@param lowerBound The minimum limit (a is always greater than or equal to this\\nvalue).\",\n      \"@param lowerBound The lower boundary (a is never less than this value).\",\n      \"@param lowerBound The smallest allowable value (a is never below this\\nthreshold).\",\n      \"@param lowerBound The bottom limit (a is never less than this value).\",\n      \"@param lowerBound The lowest acceptable value (a is never below this\\nthreshold).\"\n    ]\n  },\n  {\n    \"tag\": \"@param upperBound Upper bound (b never is greater than this\\nvalue).\",\n    \"alternatives\": [\n      \"@param upperBound The maximum limit (b is always less than or equal to this\\nvalue).\",\n      \"@param upperBound The upper boundary (b is never above this value).\",\n      \"@param upperBound The largest allowable value (b is never above this\\nthreshold).\",\n      \"@param upperBound The top limit (b is never greater than this value).\",\n      \"@param upperBound The highest acceptable value (b is never above this\\nthreshold).\"\n    ]\n  },\n  {\n    \"tag\": \"@param maximumIterations Maximum number of iterations to perform\",\n    \"alternatives\": [\n      \"@param maximumIterations The maximum number of iterations to execute\",\n      \"@param maximumIterations The maximum iterations to carry out\",\n      \"@param maximumIterations The maximum number of cycles to perform\",\n      \"@param maximumIterations The maximum number of rounds to execute\",\n      \"@param maximumIterations The highest limit for the number of iterations\"\n    ]\n  },\n  {\n    \"tag\": \"@return a two element array holding a and b.\",\n    \"alternatives\": [\n      \"@return an array of size two containing the values of a and b.\",\n      \"@return a 2-element array with the values of a and b.\",\n      \"@return an array consisting of a and b as its two elements.\",\n      \"@return an array that holds the values of a and b.\",\n      \"@return a two-member array that stores the values of a and b.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NoBracketingException if the algorithm fails to find a and b\\nsatisfying the desired conditions.\",\n    \"alternatives\": [\n      \"@throws NoBracketingException if it is not possible for the algorithm to find\\na and b that satisfy the desired conditions.\",\n      \"@throws NoBracketingException if the algorithm is unable to locate a and b that\\nmeet the desired conditions.\",\n      \"@throws NoBracketingException in case the algorithm cannot find a and b that\\nsatisfy the desired conditions.\",\n      \"@throws NoBracketingException if the algorithm fails to discover a and b that\\nfulfill the desired conditions.\",\n      \"@throws NoBracketingException if the algorithm is not successful in finding a\\nand b that adhere to the desired conditions.\"\n    ]\n  },\n  {\n    \"tag\": \"@param function function to check\",\n    \"alternatives\": [\n      \"@param function the function to verify\",\n      \"@param function the function to examine\",\n      \"@param function the function to validate\",\n      \"@param function the function to inspect\",\n      \"@param function the function to test\"\n    ]\n  },\n  {\n    \"tag\": \"@param initial Initial midpoint of interval being expanded to\\nbracket a root.\",\n    \"alternatives\": [\n      \"@param initial The initial midpoint of the interval that is being expanded to\\nbracket a root.\",\n      \"@param initial The starting midpoint of the interval being widened to\\nbracket a root.\",\n      \"@param initial The initial center point of the interval being expanded to\\nbracket a root.\",\n      \"@param initial The starting middle point of the interval being extended to\\nbracket a root.\",\n      \"@param initial The initial value of the midpoint of the interval that is being\\nexpanded to bracket a root.\"\n    ]\n  },\n  {\n    \"tag\": \"@param lowerBound Lower bound (a is never lower than this value).\",\n    \"alternatives\": [\n      \"@param lowerBound The minimum limit (a is always greater than or equal to this\\nvalue).\",\n      \"@param lowerBound The lower boundary (a is never less than this value).\",\n      \"@param lowerBound The smallest allowable value (a is never below this\\nthreshold).\",\n      \"@param lowerBound The bottom limit (a is never less than this value).\",\n      \"@param lowerBound The lowest acceptable value (a is never below this\\nthreshold).\"\n    ]\n  },\n  {\n    \"tag\": \"@param upperBound Upper bound (b never is greater than this\\nvalue).\",\n    \"alternatives\": [\n      \"@param upperBound The maximum limit (b is always less than or equal to this\\nvalue).\",\n      \"@param upperBound The upper boundary (b is never above this value).\",\n      \"@param upperBound The largest allowable value (b is never above this\\nthreshold).\",\n      \"@param upperBound The top limit (b is never greater than this value).\",\n      \"@param upperBound The highest acceptable value (b is never above this\\nthreshold).\"\n    ]\n  },\n  {\n    \"tag\": \"@param r multiplicative factor used to compute bounds sequence\",\n    \"alternatives\": [\n      \"@param r the multiplication factor employed to calculate the bounds sequence\",\n      \"@param r the factor that is used to compute the bounds sequence\",\n      \"@param r the multiplier that is utilized to calculate the bounds sequence\",\n      \"@param r the multiplicative coefficient applied to compute the bounds\\nsequence\",\n      \"@param r the scaling factor employed to calculate the bounds sequence\"\n    ]\n  },\n  {\n    \"tag\": \"@param maximumIterations Maximum number of iterations to perform\",\n    \"alternatives\": [\n      \"@param maximumIterations The maximum number of iterations to execute\",\n      \"@param maximumIterations The maximum iterations to carry out\",\n      \"@param maximumIterations The maximum number of cycles to perform\",\n      \"@param maximumIterations The maximum number of rounds to execute\",\n      \"@param maximumIterations The highest limit for the number of iterations\"\n    ]\n  }\n]"