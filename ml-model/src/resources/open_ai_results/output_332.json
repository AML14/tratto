"output = [\n  {\n    'tag': '@param key the key to search for next from',\n    'alternatives': [\n      '@param key the key to search for next from',\n      '@param key the key to look for next from',\n      '@param key the key to find next from',\n      '@param key the key to locate next from',\n      '@param key the key to seek next from'\n    ]\n  },\n  {\n    'tag': '@return the next key, null if no match or at end',\n    'alternatives': [\n      '@return the next key, null if no match or at end',\n      '@return the subsequent key, null if no match or at end',\n      '@return the key that follows, null if no match or at end',\n      '@return the key after, null if no match or at end',\n      '@return the key to come next, null if no match or at end'\n    ]\n  },\n  {\n    'tag': '@param key the key to search for previous from',\n    'alternatives': [\n      '@param key the key to search for previous from',\n      '@param key the key to look for previous from',\n      '@param key the key to find previous from',\n      '@param key the key to locate previous from',\n      '@param key the key to seek previous from'\n    ]\n  },\n  {\n    'tag': '@return the previous key, null if no match or at start',\n    'alternatives': [\n      '@return the previous key, null if no match or at start',\n      '@return the key before, null if no match or at start',\n      '@return the key that comes before, null if no match or at start',\n      '@return the key that precedes, null if no match or at start',\n      '@return the key to go back to, null if no match or at start'\n    ]\n  },\n  {\n    'tag': '@return a set view of the keys contained in this map.',\n    'alternatives': [\n      '@return a set view of the keys contained in this map.',\n      '@return a set of the keys in this map.',\n      '@return the set of keys held in this map.',\n      '@return a view of the keys in this map.',\n      '@return a collection of the keys in this map.'\n    ]\n  },\n  {\n    'tag': '@return a set view of the values contained in this map.',\n    'alternatives': [\n      '@return a set view of the values contained in this map.',\n      '@return a set of the values in this map.',\n      '@return the set of values held in this map.',\n      '@return a view of the values in this map.',\n      '@return a collection of the values in this map.'\n    ]\n  },\n  {\n    'tag': '@return a set view of the values contained in this map.',\n    'alternatives': [\n      '@return a set view of the values contained in this map.',\n      '@return a set of the values in this map.',\n      '@return the set of values held in this map.',\n      '@return a view of the values in this map.',\n      '@return a collection of the values in this map.'\n    ]\n  },\n  {\n    'tag': '@return the inverse map',\n    'alternatives': [\n      '@return the inverse map',\n      '@return the opposite map',\n      '@return the reversed map',\n      '@return the map in reverse',\n      '@return the map with keys and values swapped'\n    ]\n  },\n  {\n    'tag': '@param obj the object to compare to',\n    'alternatives': [\n      '@param obj the object to compare to',\n      '@param obj the object to compare against',\n      '@param obj the object for comparison',\n      '@param obj the object to be compared',\n      '@param obj the object to check with'\n    ]\n  },\n  {\n    'tag': '@return true if equal',\n    'alternatives': [\n      '@return true if equal',\n      '@return true if they are equal',\n      '@return true if they match',\n      '@return true if they are the same',\n      '@return true if they have the same value'\n    ]\n  },\n  {\n    'tag': '@return the hash code value for this map',\n    'alternatives': [\n      '@return the hash code value for this map',\n      '@return the hash code of this map',\n      '@return the map\\'s hash code',\n      '@return the hash value of this map',\n      '@return the hash code for this map'\n    ]\n  },\n  {\n    'tag': '@return a standard format string version of the map',\n    'alternatives': [\n      '@return a standard format string version of the map',\n      '@return a string representation of the map',\n      '@return a formatted string representing the map',\n      '@return a string version of the map in standard format',\n      '@return a map stringified in a standard format'\n    ]\n  },\n  {\n    'tag': '@param key the key, always the main map key',\n    'alternatives': [\n      '@param key the key, always the main map key',\n      '@param key the always primary map key',\n      '@param key the main map key, which is constant',\n      '@param key the primary key of the map',\n      '@param key the key that is always the primary map key'\n    ]\n  },\n  {\n    'tag': '@param value the value, always the main map value',\n    'alternatives': [\n      '@param value the value, always the main map value',\n      '@param value the always primary map value',\n      '@param value the main map value, which is constant',\n      '@param value the primary value of the map',\n      '@param value the value that is always the primary map value'\n    ]\n  },\n  {\n    'tag': '@param data the key or value to be looked up',\n    'alternatives': [\n      '@param data the key or value to be looked up',\n      '@param data the value or key to search for',\n      '@param data the item to be searched (key or value)',\n      '@param data the element to be looked up (key or value)',\n      '@param data the key or value to search for and find'\n    ]\n  },\n  {\n    'tag': '@param index the KEY or VALUE int',\n    'alternatives': [\n      '@param index the KEY or VALUE int',\n      '@param index the integer representing either KEY or VALUE',\n      '@param index the int indicating either KEY or VALUE',\n      '@param index the int that can be either KEY or VALUE',\n      '@param index the int value indicating either KEY or VALUE'\n    ]\n  },\n  {\n    'tag': '@return the desired Node, or null if there is no mapping of the\\n        specified data',\n    'alternatives': [\n      '@return the desired Node, or null if there is no mapping of the\\n        specified data',\n      '@return the required Node, or null if no mapping of the specified data',\n      '@return the expected Node, or null if there is no mapping of the specified data',\n      '@return the requested Node, or null if the specified data is not mapped',\n      '@return the Node that is desired, or null if there is no mapping of the specified data'\n    ]\n  },\n  {\n    'tag': '@param node the node to be searched from',\n    'alternatives': [\n      '@param node the node to be searched from',\n      '@param node the starting point of the search',\n      '@param node the node to initiate the search',\n      '@param node the starting node for the search',\n      '@param node the node from which to start the search'\n    ]\n  },\n  {\n    'tag': '@param index the KEY or VALUE int',\n    'alternatives': [\n      '@param index the KEY or VALUE int',\n      '@param index the integer representing either KEY or VALUE',\n      '@param index the int indicating either KEY or VALUE',\n      '@param index the int that can be either KEY or VALUE',\n      '@param index the int value indicating either KEY or VALUE'\n    ]\n  },\n  {\n    'tag': '@return the specified node',\n    'alternatives': [\n      '@return the specified node',\n      '@return the node that is specified',\n      '@return the node that is requested',\n      '@return the node that is mentioned',\n      '@return the indicated node'\n    ]\n  },\n  {\n    'tag': '@param node the node to be searched from',\n    'alternatives': [\n      '@param node the node to be searched from',\n      '@param node the starting point of the search',\n      '@param node the node to initiate the search',\n      '@param node the starting node for the search',\n      '@param node the node from which to start the search'\n    ]\n  },\n  {\n    'tag': '@param index the KEY or VALUE int',\n    'alternatives': [\n      '@param index the KEY or VALUE int',\n      '@param index the integer representing either KEY or VALUE',\n      '@param index the int indicating either KEY or VALUE',\n      '@param index the int that can be either KEY or VALUE',\n      '@param index the int value indicating either KEY or VALUE'\n    ]\n  },\n  {\n    'tag': '@return the specified node',\n    'alternatives': [\n      '@return the specified node',\n      '@return the node that is specified',\n      '@return the node that is requested',\n      '@return the node that is mentioned',\n      '@return the indicated node'\n    ]\n  },\n  {\n    'tag': '@param o1 the first object',\n    'alternatives': [\n      '@param o1 the first object',\n      '@param o1 the initial object',\n      '@param o1 the first item',\n      '@param o1 the primary object',\n      '@param o1 the object in the first position'\n    ]\n  },\n  {\n    'tag': '@param o2 the second object',\n    'alternatives': [\n      '@param o2 the second object',\n      '@param o2 the subsequent object',\n      '@param o2 the second item',\n      '@param o2 the secondary object',\n      '@param o2 the object in the second position'\n    ]\n  }\n]"