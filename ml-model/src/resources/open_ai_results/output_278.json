"[\n  {\n    \"tag\": \"@throws InterruptedException if the current thread was interrupted before\\n    or during the call (optional but recommended).\",\n    \"alternatives\": [\n      \"@throws InterruptedException if the current thread was interrupted prior to\nor during the invocation (optional but suggested).\",\n      \"@throws InterruptedException if the current thread gets interrupted before or\nduring the call (optional but highly recommended).\",\n      \"@throws InterruptedException if the executing thread was interrupted before or\nduring the call (optional but advisable).\",\n      \"@throws InterruptedException if the current thread was interrupted before or\nduring the method call (optional but preferred).\",\n      \"@throws InterruptedException if the thread is interrupted before or during the\ncall (optional but recommended).\"\n    ]\n  },\n  {\n    \"tag\": \"@throws CancellationException {@inheritDoc}\",\n    \"alternatives\": [\n      \"@throws CancellationException - if {@inheritDoc}\",\n      \"@throws CancellationException {@inheritDoc} - when the operation is cancelled\",\n      \"@throws CancellationException {@inheritDoc} - if the operation is cancelled\",\n      \"@throws CancellationException {@inheritDoc} - in case the operation is cancelled\",\n      \"@throws CancellationException when the operation is cancelled. {@inheritDoc}\"\n    ]\n  },\n  {\n    \"tag\": \"@param value the value to be used as the result\",\n    \"alternatives\": [\n      \"@param value the result value to be utilized\",\n      \"@param value the value to use as the result\",\n      \"@param value the value to be employed as the outcome\",\n      \"@param value the value to be utilized as the outcome\",\n      \"@param value - the value to be used as the result\"\n    ]\n  },\n  {\n    \"tag\": \"@return true if the attempt was accepted, completing the {@code Future}\",\n    \"alternatives\": [\n      \"@return true if the attempt is accepted and the {@code Future} is completed\",\n      \"@return true if the attempt is successful, resulting in the completion of the\n{@code Future}\",\n      \"@return true if the attempt is accepted and the {@code Future} completes\",\n      \"@return true if the attempt is accepted and the {@code Future} is finished\",\n      \"@return true if the attempt is accepted, thereby completing the {@code Future}\"\n    ]\n  },\n  {\n    \"tag\": \"@param throwable the exception to be used as the failed result\",\n    \"alternatives\": [\n      \"@param throwable the exception to be used as the failure outcome\",\n      \"@param throwable the exception to utilize as the failed outcome\",\n      \"@param throwable the exception to be employed as the failed result\",\n      \"@param throwable the exception to be utilized as the failure result\",\n      \"@param throwable - the exception to be used as the failed outcome\"\n    ]\n  },\n  {\n    \"tag\": \"@param future the future to delegate to\",\n    \"alternatives\": [\n      \"@param future the future to delegate the task to\",\n      \"@param future the future to assign the delegation to\",\n      \"@param future to be delegated to\",\n      \"@param future the future to hand over control to\",\n      \"@param future - the future to delegate to\"\n    ]\n  },\n  {\n    \"tag\": \"@return true if the attempt was accepted, indicating that the {@code Future} was not previously\\n    cancelled or set.\",\n    \"alternatives\": [\n      \"@return true if the attempt is accepted and the {@code Future} has not previously\nbeen cancelled or set.\",\n      \"@return true if the attempt is accepted and the {@code Future} has not been\ncancelled or set before.\",\n      \"@return true if the attempt is accepted, indicating that the {@code Future} was\nnot previously cancelled or set.\",\n      \"@return true if the attempt is accepted, suggesting that the {@code Future} was\nnot cancelled or set previously.\",\n      \"@return true if the attempt is accepted, meaning that the {@code Future} was not\npreviously cancelled or set.\"\n    ]\n  },\n  {\n    \"tag\": \"@param expected the expected value of the {@link #value} field.\",\n    \"alternatives\": [\n      \"@param expected the value that is expected for the {@link #value} field.\",\n      \"@param expected the value expected for the {@link #value} field.\",\n      \"@param expected the value that is anticipated for the {@link #value} field.\",\n      \"@param expected the value predicted for the {@link #value} field.\",\n      \"@param expected - the expected value of the {@link #value} field.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws RuntimeException if the {@code Future} has not failed\",\n    \"alternatives\": [\n      \"@throws RuntimeException if the {@code Future} did not encounter a failure\",\n      \"@throws RuntimeException if the {@code Future} has not encountered an exception\",\n      \"@throws RuntimeException if the {@code Future} did not fail\",\n      \"@throws RuntimeException if the {@code Future} has not experienced a failure\",\n      \"@throws RuntimeException if the {@code Future} did not encounter an error\"\n    ]\n  },\n  {\n    \"tag\": \"@param callable the callable task\",\n    \"alternatives\": [\n      \"@param callable the task that is callable\",\n      \"@param callable the task that can be called\",\n      \"@param callable the task that can be invoked\",\n      \"@param callable the task that is executable\",\n      \"@param callable - the callable task\"\n    ]\n  },\n  {\n    \"tag\": \"@param runnable the runnable task\",\n    \"alternatives\": [\n      \"@param runnable the task that is runnable\",\n      \"@param runnable the task that can be run\",\n      \"@param runnable the task that can execute\",\n      \"@param runnable the task that is executable\",\n      \"@param runnable - the runnable task\"\n    ]\n  },\n  {\n    \"tag\": \"@param permitsPerSecond the rate of the returned {@code RateLimiter}, measured in\\n       how many permits become available per second\",\n    \"alternatives\": [\n      \"@param permitsPerSecond the speed of the returned {@code RateLimiter}, measured\nin the number of permits granted per second\",\n      \"@param permitsPerSecond the rate at which the {@code RateLimiter} returns the\npermits, expressed as the number of permits available per second\",\n      \"@param permitsPerSecond the speed at which the returned {@code RateLimiter}\ngenerates permits, measured as the number of permits provided per second\",\n      \"@param permitsPerSecond the frequency of permit availability per second in the\nreturned {@code RateLimiter}\",\n      \"@param permitsPerSecond - the rate at which the {@code RateLimiter} grants permits\nper second\"\n    ]\n  },\n  {\n    \"tag\": \"@param warmupPeriod the duration of the period where the {@code RateLimiter} ramps up its\\n       rate, before reaching its stable (maximum) rate\",\n    \"alternatives\": [\n      \"@param warmupPeriod the length of time for the {@code RateLimiter} to gradually\nincrease its rate until it reaches its steady (maximum) rate\",\n      \"@param warmupPeriod the period during which the {@code RateLimiter} gradually\nincreases its rate, before attaining its stable (maximum) rate\",\n      \"@param warmupPeriod the time duration in which the {@code RateLimiter} gradually\naccelerates its rate until it reaches its constant (maximum) rate\",\n      \"@param warmupPeriod the duration for which the {@code RateLimiter} incrementally\nbuilds up its rate before reaching the stable (maximum) rate\",\n      \"@param warmupPeriod - the time duration over which the {@code RateLimiter} rises\ngradually to its stable (maximum) rate\"\n    ]\n  },\n  {\n    \"tag\": \"@param unit the time unit of the warmupPeriod argument\",\n    \"alternatives\": [\n      \"@param unit the time unit used in the warmupPeriod parameter\",\n      \"@param unit the time unit that applies to the warmupPeriod argument\",\n      \"@param unit the time unit for the warmupPeriod parameter\",\n      \"@param unit the time unit which is associated with the warmupPeriod argument\",\n      \"@param unit - the time unit of the warmupPeriod argument\"\n    ]\n  },\n  {\n    \"tag\": \"@param permitsPerSecond the new stable rate of this {@code RateLimiter}\",\n    \"alternatives\": [\n      \"@param permitsPerSecond the steady new rate of this {@code RateLimiter}\",\n      \"@param permitsPerSecond the newly established steady rate of this {@code RateLimiter}\",\n      \"@param permitsPerSecond the updated constant rate of this {@code RateLimiter}\",\n      \"@param permitsPerSecond the revised stable rate of this {@code RateLimiter}\",\n      \"@param permitsPerSecond - the new stable rate of this {@code RateLimiter}\"\n    ]\n  },\n  {\n    \"tag\": \"@return time spent sleeping to enforce rate, in seconds; 0.0 if not rate-limited\",\n    \"alternatives\": [\n      \"@return duration of time spent sleeping to enforce the rate, in seconds; 0.0 if\nnot under rate limitation\",\n      \"@return the time taken for sleeping to enforce the rate, in seconds; 0.0\nif not restricted by rate\",\n      \"@return the amount of time spent sleeping to maintain the rate, in seconds; 0.0\nif the rate is not restricted\",\n      \"@return time spent in sleep to enforce the rate, given in seconds; 0.0 if the\nrate is not limited\",\n      \"@return the time spent in sleeping to enforce the rate, measured in seconds; 0.0\nif there is no rate limitation\"\n    ]\n  },\n  {\n    \"tag\": \"@param permits the number of permits to acquire\",\n    \"alternatives\": [\n      \"@param permits the quantity of permits to obtain\",\n      \"@param permits the quantity of permits to acquire\",\n      \"@param permits the number of permits to fetch\",\n      \"@param permits the amount of permits to requisition\",\n      \"@param permits - the number of permits to acquire\"\n    ]\n  },\n  {\n    \"tag\": \"@return time spent sleeping to enforce rate, in seconds; 0.0 if not rate-limited\",\n    \"alternatives\": [\n      \"@return the duration of time spent sleeping to enforce the rate, in seconds; 0.0\nif not rate-constrained\",\n      \"@return the amount of time spent sleeping to enforce the rate, in seconds; 0.0\nif not under rate limit\",\n      \"@return time spent sleeping to regulate the rate, specified in seconds; 0.0 if\nthere is no rate limitation\",\n      \"@return the time spent sleeping to maintain the rate, measured in seconds; 0.0\nif the rate is not restricted\",\n      \"@return time spent sleeping to enforce the rate, in seconds; 0.0 if the rate is\nnot limited\"\n    ]\n  },\n  {\n    \"tag\": \"@return time in microseconds to wait until the resource can be acquired, never negative\",\n    \"alternatives\": [\n      \"@return the waiting time in microseconds until the resource can be acquired, never\nnegative\",\n      \"@return the waiting duration in microseconds until the resource can be acquired,\nnever negative\",\n      \"@return the time to wait in microseconds until the resource can be acquired, always\nnon-negative\",\n      \"@return the time expressed in microseconds to wait until the resource can be\nacquired, never negative\",\n      \"@return the duration of time in microseconds to wait until the resource can be\nacquired, never negative\"\n    ]\n  },\n  {\n    \"tag\": \"@param timeout the maximum time to wait for the permit. Negative values are treated as zero.\",\n    \"alternatives\": [\n      \"@param timeout the maximum wait time for the permit. Negative values are interpreted\nas zero.\",\n      \"@param timeout the maximum duration to wait for the permit. Negative values are\nconsidered as zero.\",\n      \"@param timeout the highest waiting time for the permit. Negative values are\nhandled as zero.\",\n      \"@param timeout the maximum waiting period for the permit. Negative values are\nregarded as zero.\",\n      \"@param timeout - the maximum time to wait for the permit. Negative values are\nconsidered as zero.\"\n    ]\n  },\n  {\n    \"tag\": \"@param unit the time unit of the timeout argument\",\n    \"alternatives\": [\n      \"@param unit the time unit that corresponds to the timeout argument\",\n      \"@param unit the time unit used for the timeout parameter\",\n      \"@param unit the time unit of the timeout parameter\",\n      \"@param unit the time unit which applies to the timeout argument\",\n      \"@param unit - the time unit of the timeout argument\"\n    ]\n  }\n]"