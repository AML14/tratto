"output = [\n  {\n    'tag': '@param numeratorFormat the custom format for the numerator.',\n    'alternatives': [\n      '@param numeratorFormat the custom layout for the numerator.',\n      '@param numeratorFormat the user-defined format for the numerator.',\n      '@param numeratorFormat the format specified for the numerator.',\n      '@param numeratorFormat the custom pattern for the numerator.',\n      '@param numeratorFormat the customized format for the numerator.'\n    ]\n  },\n  {\n    'tag': '@param denominatorFormat the custom format for the denominator.',\n    'alternatives': [\n      '@param denominatorFormat the custom layout for the denominator.',\n      '@param denominatorFormat the user-defined format for the denominator.',\n      '@param denominatorFormat the format specified for the denominator.',\n      '@param denominatorFormat the custom pattern for the denominator.',\n      '@param denominatorFormat the customized format for the denominator.'\n    ]\n  },\n  {\n    'tag': '@param value double value to convert',\n    'alternatives': [\n      '@param value decimal value to convert',\n      '@param value floating-point value to convert',\n      '@param value numeric value to convert',\n      '@param value number to be converted',\n      '@param value input value to convert'\n    ]\n  },\n  {\n    'tag': '@param maxIterations maximal number of iterations allowed',\n    'alternatives': [\n      '@param maxIterations maximum number of allowed iterations',\n      '@param maxIterations largest number of iterations allowed',\n      '@param maxIterations maximum allowed number of iterations',\n      '@param maxIterations highest number of iterations permitted',\n      '@param maxIterations maximum limit of iterations'\n    ]\n  },\n  {\n    'tag': '@param value double value to convert',\n    'alternatives': [\n      '@param value decimal value to convert',\n      '@param value floating-point value to convert',\n      '@param value numeric value to convert',\n      '@param value number to be converted',\n      '@param value input value to convert'\n    ]\n  },\n  {\n    'tag': '@param p current numerator',\n    'alternatives': [\n      '@param p current top value',\n      '@param p current dividend',\n      '@param p current top number',\n      '@param p current upper value',\n      '@param p current numerator value'\n    ]\n  },\n  {\n    'tag': '@param q current denominator',\n    'alternatives': [\n      '@param q current bottom value',\n      '@param q current divisor',\n      '@param q current bottom number',\n      '@param q current lower value',\n      '@param q current denominator value'\n    ]\n  },\n  {\n    'tag': '@param fraction the object to format.',\n    'alternatives': [\n      '@param fraction the object to style.',\n      '@param fraction the object to represent.',\n      '@param fraction the item to format.',\n      '@param fraction the instance to format.',\n      '@param fraction the entity to format.'\n    ]\n  },\n  {\n    'tag': '@param toAppendTo where the text is to be appended',\n    'alternatives': [\n      '@param toAppendTo where the content will be added',\n      '@param toAppendTo where the text should be appended',\n      '@param toAppendTo destination for appending the text',\n      '@param toAppendTo where the string will be added',\n      '@param toAppendTo location for the text to be added'\n    ]\n  },\n  {\n    'tag': '@param pos On input: an alignment field, if desired. On output: the\\n           offsets of the alignment field',\n    'alternatives': [\n      '@param pos On input: an alignment field, if desired. On output: the\\n           positions of the alignment field',\n      '@param pos On input: an alignment field, if desired. On output: the\\n           indexes of the alignment field',\n      '@param pos On input: an alignment field, if desired. On output: the\\n           points of the alignment field',\n      '@param pos On input: an alignment field, if desired. On output: the\\n           locations of the alignment field',\n      '@param pos On input: an alignment field, if desired. On output: the\\n           places of the alignment field'\n    ]\n  },\n  {\n    'tag': '@return the value passed in as toAppendTo.',\n    'alternatives': [\n      '@return the provided value as toAppendTo.',\n      '@return the passed value as toAppendTo.',\n      '@return the given value as toAppendTo.',\n      '@return the input value as toAppendTo.',\n      '@return the value that was passed as toAppendTo.'\n    ]\n  },\n  {\n    'tag': '@return the whole format.',\n    'alternatives': [\n      '@return the complete layout.',\n      '@return the entire format.',\n      '@return the overall format.',\n      '@return the full pattern.',\n      '@return the total style.'\n    ]\n  },\n  {\n    'tag': '@param source the string to parse',\n    'alternatives': [\n      '@param source the text to analyze',\n      '@param source the content to interpret',\n      '@param source the string to process',\n      '@param source the data to parse',\n      '@param source the input to convert'\n    ]\n  },\n  {\n    'tag': '@param pos input/ouput parsing parameter.',\n    'alternatives': [\n      '@param pos parsing parameter for input/output.',\n      '@param pos input/output position parameter.',\n      '@param pos input/output parsing field.',\n      '@param pos input/output location parameter.',\n      '@param pos input/output point parameter.'\n    ]\n  },\n  {\n    'tag': '@return the parsed {@link BigFraction} object.',\n    'alternatives': [\n      '@return the object of {@link BigFraction} that was parsed.',\n      '@return the {@link BigFraction} object that was parsed.',\n      '@return the parsed object as {@link BigFraction}.',\n      '@return the {@link BigFraction} instance that was parsed.',\n      '@return the object represented by {@link BigFraction} that was parsed.'\n    ]\n  },\n  {\n    'tag': '@param format The new whole format value.',\n    'alternatives': [\n      '@param format The updated complete layout value.',\n      '@param format The modified entire format value.',\n      '@param format The changed overall format value.',\n      '@param format The new full pattern value.',\n      '@param format The revised total style value.'\n    ]\n  },\n  {\n    'tag': '@param format the custom format for the whole, numerator, and\\n       denominator.',\n    'alternatives': [\n      '@param format the custom layout for the whole, numerator, and\\n       denominator.',\n      '@param format the user-defined format for the whole, numerator, and\\n       denominator.',\n      '@param format the format specified for the whole, numerator, and\\n       denominator.',\n      '@param format the custom pattern for the whole, numerator, and\\n       denominator.',\n      '@param format the customized format for the whole, numerator, and\\n       denominator.'\n    ]\n  },\n  {\n    'tag': '@param wholeFormat the custom format for the whole.',\n    'alternatives': [\n      '@param wholeFormat the custom layout for the whole.',\n      '@param wholeFormat the user-defined format for the whole.',\n      '@param wholeFormat the format specified for the whole.',\n      '@param wholeFormat the custom pattern for the whole.',\n      '@param wholeFormat the customized format for the whole.'\n    ]\n  },\n  {\n    'tag': '@param numeratorFormat the custom format for the numerator.',\n    'alternatives': [\n      '@param numeratorFormat the custom layout for the numerator.',\n      '@param numeratorFormat the user-defined format for the numerator.',\n      '@param numeratorFormat the format specified for the numerator.',\n      '@param numeratorFormat the custom pattern for the numerator.',\n      '@param numeratorFormat the customized format for the numerator.'\n    ]\n  },\n  {\n    'tag': '@param denominatorFormat the custom format for the denominator.',\n    'alternatives': [\n      '@param denominatorFormat the custom layout for the denominator.',\n      '@param denominatorFormat the user-defined format for the denominator.',\n      '@param denominatorFormat the format specified for the denominator.',\n      '@param denominatorFormat the custom pattern for the denominator.',\n      '@param denominatorFormat the customized format for the denominator.'\n    ]\n  },\n  {\n    'tag': '@param wrong Value that is infinite or NaN.',\n    'alternatives': [\n      '@param wrong Invalid value that is infinite or NaN.',\n      '@param wrong Value that is either infinite or NaN.',\n      '@param wrong Invalid input that is infinite or NaN.',\n      '@param wrong Value that is not a number or infinite.',\n      '@param wrong Invalid value that is not a number or infinite.'\n    ]\n  },\n  {\n    'tag': '@param args Optional arguments.',\n    'alternatives': [\n      '@param args Additional parameters.',\n      '@param args Extra arguments provided.',\n      '@param args Supplementary inputs.',\n      '@param args Optional inputs.',\n      '@param args Non-mandatory parameters.'\n    ]\n  },\n  {\n    'tag': '@param specific Specific context pattern.',\n    'alternatives': [\n      '@param specific Pattern related to a specific context.',\n      '@param specific Pattern particular to a certain context.',\n      '@param specific Context-specific pattern.',\n      '@param specific Pattern exclusive to a specific context.',\n      '@param specific Pattern that is specific to a given context.'\n    ]\n  },\n  {\n    'tag': '@param wrong Value that is infinite or NaN.',\n    'alternatives': [\n      '@param wrong Invalid value that is infinite or NaN.',\n      '@param wrong Value that is either infinite or NaN.',\n      '@param wrong Invalid input that is infinite or NaN.',\n      '@param wrong Value that is not a number or infinite.',\n      '@param wrong Invalid value that is not a number or infinite.'\n    ]\n  },\n  {\n    'tag': '@param args Optional arguments.',\n    'alternatives': [\n      '@param args Additional parameters.',\n      '@param args Extra arguments provided.',\n      '@param args Supplementary inputs.',\n      '@param args Optional inputs.',\n      '@param args Non-mandatory parameters.'\n    ]\n  }\n]"