"output = [\n  {\n    'tag': '@param yi observation on the regressand',\n    'alternatives': [\n      '@param yi observation regarding the dependent variable',\n      '@param yi observation of the response variable',\n      '@param yi observation for the dependent variable',\n      '@param yi observation on the response variable',\n      '@param yi observation related to the dependent variable'\n    ]\n  },\n  {\n    'tag': '@param a - an addend',\n    'alternatives': [\n      '@param a - a term to be added',\n      '@param a - a number to be included',\n      '@param a - an element to be added',\n      '@param a - a value to be included',\n      '@param a - a quantity to be added'\n    ]\n  },\n  {\n    'tag': '@param b - an addend',\n    'alternatives': [\n      '@param b - a term to be added',\n      '@param b - a number to be included',\n      '@param b - an element to be added',\n      '@param b - a value to be included',\n      '@param b - a quantity to be added'\n    ]\n  },\n  {\n    'tag': '@return the sum of the a and b',\n    'alternatives': [\n      '@return the result of adding a and b',\n      '@return the addition of a and b',\n      '@return the outcome of summing a and b',\n      '@return the total of a and b',\n      '@return the combined value of a and b'\n    ]\n  },\n  {\n    'tag': '@param nreq how many of the regressors to include (either in canonical\\norder, or in the current reordered state)',\n    'alternatives': [\n      '@param nreq the number of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the count of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the quantity of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the amount of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the total number of regressors to include (either in canonical\\norder, or in the current reordered state)'\n    ]\n  },\n  {\n    'tag': '@return an array with the estimated slope coefficients',\n    'alternatives': [\n      '@return an array containing the estimated slope coefficients',\n      '@return an array of the calculated slope coefficients',\n      '@return an array that holds the estimated slope coefficients',\n      '@return an array comprising the estimated slope coefficients',\n      '@return an array representing the computed slope coefficients'\n    ]\n  },\n  {\n    'tag': '@throws ModelSpecificationException if {@code nreq} is less than 1\\nor greater than the number of independent variables',\n    'alternatives': [\n      '@throws ModelSpecificationException when {@code nreq} is below 1\\nor above the count of independent variables',\n      '@throws ModelSpecificationException if {@code nreq} is smaller than 1\\nor larger than the number of independent variables',\n      '@throws ModelSpecificationException in the case where {@code nreq} is less than 1\\nor greater than the total number of independent variables',\n      '@throws ModelSpecificationException if {@code nreq} falls below 1\\nor exceeds the number of independent variables',\n      '@throws ModelSpecificationException when the value of {@code nreq} is not between 1 and the number of independent variables inclusive'\n    ]\n  },\n  {\n    'tag': '@param nreq how many of the regressors to include (either in canonical\\norder, or in the current reordered state)',\n    'alternatives': [\n      '@param nreq the number of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the count of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the quantity of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the amount of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the total number of regressors to include (either in canonical\\norder, or in the current reordered state)'\n    ]\n  },\n  {\n    'tag': '@return an array with the variance covariance of the included\\nregressors in lower triangular form',\n    'alternatives': [\n      '@return an array representing the variance covariance of the included\\nregressors in lower triangular format',\n      '@return an array containing the variance covariance of the included\\nregressors in lower triangular form',\n      '@return an array that holds the variance covariance of the included\\nregressors in lower triangular format',\n      '@return an array comprising the variance covariance of the included\\nregressors in lower triangular representation',\n      '@return an array with the variance covariance of the included\\nregressors, arranged in lower triangular form'\n    ]\n  },\n  {\n    'tag': '@param rinv the storage for the inverse of r',\n    'alternatives': [\n      '@param rinv the location to store the inverse of r',\n      '@param rinv the storage area for the inverse of r',\n      '@param rinv the memory to hold the inverse of r',\n      '@param rinv the place to keep the inverse of r',\n      '@param rinv the buffer for the inverse of r'\n    ]\n  },\n  {\n    'tag': '@param nreq how many of the regressors to include (either in canonical\\norder, or in the current reordered state)',\n    'alternatives': [\n      '@param nreq the number of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the count of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the quantity of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the amount of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param nreq the total number of regressors to include (either in canonical\\norder, or in the current reordered state)'\n    ]\n  },\n  {\n    'tag': '@param in how many of the regressors to include (either in canonical\\norder, or in the current reordered state)',\n    'alternatives': [\n      '@param in the number of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param in the count of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param in the quantity of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param in the amount of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param in the total number of regressors to include (either in canonical\\norder, or in the current reordered state)'\n    ]\n  },\n  {\n    'tag': '@return an array with the partial correlations of the remainder of\\nregressors with each other and the regressand, in lower triangular form',\n    'alternatives': [\n      '@return an array representing the partial correlations of the remaining\\nregressors with each other and the regressand, in lower triangular format',\n      '@return an array containing the partial correlations of the remaining\\nregressors with each other and the regressand, in lower triangular form',\n      '@return an array that holds the partial correlations of the remaining\\nregressors with each other and the regressand, in lower triangular format',\n      '@return an array comprising the partial correlations of the remaining\\nregressors with each other and the regressand, in lower triangular form',\n      '@return an array with the partial correlations of the remaining\\nregressors with each other and the regressand, arranged in lower triangular form'\n    ]\n  },\n  {\n    'tag': '@param from initial position',\n    'alternatives': [\n      '@param from starting position',\n      '@param from the initial index',\n      '@param from the beginning',\n      '@param from the original location',\n      '@param from the initial point'\n    ]\n  },\n  {\n    'tag': '@param to destination',\n    'alternatives': [\n      '@param to target',\n      '@param to the destination index',\n      '@param to the final location',\n      '@param to the destination point',\n      '@param to the end position'\n    ]\n  },\n  {\n    'tag': '@param list the regressors to move',\n    'alternatives': [\n      '@param list the variables to relocate',\n      '@param list the predictors to transfer',\n      '@param list the independent variables to shift',\n      '@param list the factors to move',\n      '@param list the covariates to transport'\n    ]\n  },\n  {\n    'tag': '@param pos1 where the list will be placed',\n    'alternatives': [\n      '@param pos1 the position where the list will be inserted',\n      '@param pos1 the index where the list will be positioned',\n      '@param pos1 the location where the list will be placed',\n      '@param pos1 the point where the list will be placed',\n      '@param pos1 the spot where the list will be located'\n    ]\n  },\n  {\n    'tag': '@return -1 error, 0 everything ok',\n    'alternatives': [\n      '@return -1 if there is an error, 0 if everything is fine',\n      '@return -1 in case of an error, 0 when everything is okay',\n      '@return -1 to indicate an error, 0 to indicate success',\n      '@return -1 if there is an issue, 0 if there are no problems',\n      '@return -1 for errors, 0 for successful operation'\n    ]\n  },\n  {\n    'tag': '@param row_data returns the diagonal of the hat matrix for this observation',\n    'alternatives': [\n      '@param row_data the diagonal values of the hat matrix for this observation',\n      '@param row_data the hat matrix diagonal for this observation',\n      '@param row_data the diagonal elements of the hat matrix for this observation',\n      '@param row_data the hat matrix diagonal elements for this observation',\n      '@param row_data the diagonal entries of the hat matrix for this observation'\n    ]\n  },\n  {\n    'tag': '@return the diagonal element of the hatmatrix',\n    'alternatives': [\n      '@return the diagonal value of the hat matrix',\n      '@return the hat matrix diagonal element',\n      '@return the diagonal entry of the hat matrix',\n      '@return the hat matrix diagonal value',\n      '@return the diagonal element of the hat matrix'\n    ]\n  },\n  {\n    'tag': '@return int[] with the current order of the regressors',\n    'alternatives': [\n      '@return int[] containing the current order of the regressors',\n      '@return int[] representing the current order of the regressors',\n      '@return int[] that holds the current order of the regressors',\n      '@return int[] comprising the current order of the regressors',\n      '@return int[] with the regressors ordered in their current arrangement'\n    ]\n  },\n  {\n    'tag': '@return RegressionResults the structure holding all regression results',\n    'alternatives': [\n      '@return RegressionResults object storing all regression results',\n      '@return RegressionResults structure with all regression results',\n      '@return RegressionResults instance containing all regression results',\n      '@return RegressionResults container holding all regression results',\n      '@return RegressionResults model that holds all regression results'\n    ]\n  },\n  {\n    'tag': '@throws ModelSpecificationException - thrown if number of observations is\\nless than the number of variables',\n    'alternatives': [\n      '@throws ModelSpecificationException if the count of observations is\\nsmaller than the number of variables',\n      '@throws ModelSpecificationException when the number of observations is\\nbelow the count of variables',\n      '@throws ModelSpecificationException if the number of observations is\\nless than the count of variables',\n      '@throws ModelSpecificationException in case the number of observations is\\nbelow the number of variables',\n      '@throws ModelSpecificationException if the number of observations falls below\\nthe number of variables'\n    ]\n  },\n  {\n    'tag': '@param numberOfRegressors many of the regressors to include (either in canonical\\norder, or in the current reordered state)',\n    'alternatives': [\n      '@param numberOfRegressors the number of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param numberOfRegressors the count of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param numberOfRegressors the quantity of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param numberOfRegressors the amount of regressors to include (either in canonical\\norder, or in the current reordered state)',\n      '@param numberOfRegressors the total number of regressors to include (either in canonical\\norder, or in the current reordered state)'\n    ]\n  },\n  {\n    'tag': '@return RegressionResults the structure holding all regression results',\n    'alternatives': [\n      '@return RegressionResults object storing all regression results',\n      '@return RegressionResults structure with all regression results',\n      '@return RegressionResults instance containing all regression results',\n      '@return RegressionResults container holding all regression results',\n      '@return RegressionResults model that holds all regression results'\n    ]\n  }\n]"