"output = [\n  {\n    'tag': '@param cols Columns to select.',\n    'alternatives': [\n      '@param cols Columns to choose.',\n      '@param cols Columns to pick.',\n      '@param cols Columns to retrieve.',\n      '@param cols Columns to extract.',\n      '@param cols Columns to fetch.'\n    ]\n  },\n  {\n    'tag': '@return Matrix representing the selected columns.',\n    'alternatives': [\n      '@return Matrix that represents the chosen columns.',\n      '@return Matrix which represents the picked columns.',\n      '@return Matrix that represents the extracted columns.',\n      '@return Matrix denoting the fetched columns.',\n      '@return Matrix showing the selected columns.'\n    ]\n  },\n  {\n    'tag': '@param m Input matrix.',\n    'alternatives': [\n      '@param m Matrix as input.',\n      '@param m Matrix to input.',\n      '@param m Matrix for input.',\n      '@param m Matrix used as input.',\n      '@param m Matrix that is inputted.'\n    ]\n  },\n  {\n    'tag': '@param k Diagonal position.',\n    'alternatives': [\n      '@param k Position on the diagonal.',\n      '@param k Diagonal index.',\n      '@param k Index of the diagonal.',\n      '@param k Diagonal location.',\n      '@param k Diagonal element position.'\n    ]\n  },\n  {\n    'tag': '@return Upper triangular part of matrix.',\n    'alternatives': [\n      '@return Upper triangle section of the matrix.',\n      '@return Matrix's upper triangular section.',\n      '@return Part of the matrix that is upper triangular.',\n      '@return Matrix's upper triangular component.',\n      '@return Upper triangular portion of the matrix.'\n    ]\n  },\n  {\n    'tag': '@return Row matrix representing the sums of the rows.',\n    'alternatives': [\n      '@return Row matrix that represents the row sums.',\n      '@return Row matrix which shows the sums of the rows.',\n      '@return Row matrix denoting the sums of the rows.',\n      '@return Row matrix that displays the row totals.',\n      '@return Row matrix indicating the sums of the rows.'\n    ]\n  },\n  {\n    'tag': '@return the diagonal n-by-n matrix if m is a column matrix or the column\\nmatrix representing the diagonal if m is a n-by-n matrix.',\n    'alternatives': [\n      '@return the n-by-n diagonal matrix if m is a column matrix or the column matrix that represents the diagonal if m is a n-by-n matrix.',\n      '@return the diagonal matrix of size n-by-n if m is a column matrix, otherwise return the column matrix that shows the diagonal if m is a n-by-n matrix.',\n      '@return either the diagonal n-by-n matrix if m is a column matrix or the column matrix that represents the diagonal if m is a n-by-n matrix.',\n      '@return the diagonal matrix that is n-by-n if m is a column matrix or the column matrix that indicates the diagonal if m is a n-by-n matrix.',\n      '@return the diagonal matrix of size n-by-n when m is a column matrix, or the column matrix representing the diagonal if m is a n-by-n matrix.'\n    ]\n  },\n  {\n    'tag': '@param m1 Source matrix.',\n    'alternatives': [\n      '@param m1 Input matrix.',\n      '@param m1 Matrix as source.',\n      '@param m1 Matrix that acts as source.',\n      '@param m1 Matrix used as source.',\n      '@param m1 Matrix for the source.'\n    ]\n  },\n  {\n    'tag': '@param col1 Source column.',\n    'alternatives': [\n      '@param col1 Input column.',\n      '@param col1 Column as source.',\n      '@param col1 Column that acts as source.',\n      '@param col1 Column used as source.',\n      '@param col1 Column for the source.'\n    ]\n  },\n  {\n    'tag': '@param m2 Target matrix.',\n    'alternatives': [\n      '@param m2 Destination matrix.',\n      '@param m2 Matrix as target.',\n      '@param m2 Matrix that acts as target.',\n      '@param m2 Matrix used as target.',\n      '@param m2 Matrix for the target.'\n    ]\n  },\n  {\n    'tag': '@param col2 Target column.',\n    'alternatives': [\n      '@param col2 Destination column.',\n      '@param col2 Column as target.',\n      '@param col2 Column that acts as target.',\n      '@param col2 Column used as target.',\n      '@param col2 Column for the target.'\n    ]\n  },\n  {\n    'tag': '@param n Number of rows.',\n    'alternatives': [\n      '@param n Row count.',\n      '@param n Rows quantity.',\n      '@param n Number of row elements.',\n      '@param n Total number of rows.',\n      '@param n Count of the rows.'\n    ]\n  },\n  {\n    'tag': '@param m Number of columns.',\n    'alternatives': [\n      '@param m Column count.',\n      '@param m Columns quantity.',\n      '@param m Number of column elements.',\n      '@param m Total number of columns.',\n      '@param m Count of the columns.'\n    ]\n  },\n  {\n    'tag': '@return n-by-m matrix filled with 1.',\n    'alternatives': [\n      '@return n-by-m matrix populated with 1.',\n      '@return n-by-m matrix containing 1.',\n      '@return n-by-m matrix with all elements set to 1.',\n      '@return n-by-m matrix where all values are 1.',\n      '@return n-by-m matrix consisting of 1 values.'\n    ]\n  },\n  {\n    'tag': '@return n-by-m matrix of 0 values out of diagonal, and 1 values on\\nthe diagonal.',\n    'alternatives': [\n      '@return n-by-m matrix with 0 values off the diagonal and 1 values on the diagonal.',\n      '@return n-by-m matrix having 0 values except 1 values on the diagonal.',\n      '@return n-by-m matrix that contains 0 values off the diagonal and 1 values on the diagonal.',\n      '@return n-by-m matrix where all elements are 0 except for 1 values on the diagonal.',\n      '@return n-by-m matrix consisting of 0 values outside the diagonal and 1 values on the diagonal.'\n    ]\n  },\n  {\n    'tag': '@return n-by-m matrix of zero values.',\n    'alternatives': [\n      '@return n-by-m matrix filled with zeros.',\n      '@return n-by-m matrix containing only zeros.',\n      '@return n-by-m matrix with all elements set to zero.',\n      '@return n-by-m matrix where all values are zeros.',\n      '@return n-by-m matrix consisting of only zero values.'\n    ]\n  },\n  {\n    'tag': '@param mat Input matrix.',\n    'alternatives': [\n      '@param mat Matrix as input.',\n      '@param mat Matrix to input.',\n      '@param mat Matrix for input.',\n      '@param mat Matrix used as input.',\n      '@param mat Matrix that is inputted.'\n    ]\n  },\n  {\n    'tag': '@param n Number of row replicates.',\n    'alternatives': [\n      '@param n Number of duplicate rows.',\n      '@param n Count of row copies.',\n      '@param n Number of row clones.',\n      '@param n Total number of replicated rows.',\n      '@param n Row replicates count.'\n    ]\n  },\n  {\n    'tag': '@param m Number of column replicates.',\n    'alternatives': [\n      '@param m Number of duplicate columns.',\n      '@param m Count of column copies.',\n      '@param m Number of column clones.',\n      '@param m Total number of replicated columns.',\n      '@param m Column replicates count.'\n    ]\n  }\n]"