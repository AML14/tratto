"output=[\n  {\n    'tag': '@throws MathIllegalArgumentException if points are null or the number of\\n  data points is not compatible with this clusterer',\n    'alternatives': [\n      '@throws MathIllegalArgumentException if points are null or the quantity of\\n  data points does not match this clusterer',\n      '@throws MathIllegalArgumentException if points are null or the number of\\n  data points is incompatible with this clusterer',\n      '@throws MathIllegalArgumentException if points are null or the number of\\n  data points is not suitable for this clusterer'\n    ]\n  },\n  {\n    'tag': '@throws MathIllegalArgumentException iff one of the chromosomes is\\n  not an instance of {@link AbstractListChromosome}',\n    'alternatives': [\n      '@throws MathIllegalArgumentException if any of the chromosomes is\\n  not a {@link AbstractListChromosome} instance',\n      '@throws MathIllegalArgumentException if any of the chromosomes is\\n  not of type {@link AbstractListChromosome}',\n      '@throws MathIllegalArgumentException if any of the chromosomes is\\n  not an instance of {@link AbstractListChromosome}'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooLargeException if {@code lower >= upper}.',\n    'alternatives': [\n      '@throws NumberIsTooLargeException if {@code lower >= upper}.',\n      '@throws NumberIsTooLargeException if the value of {@code lower} is greater than or equal to {@code upper}.',\n      '@throws NumberIsTooLargeException if the lower bound is greater than or equal to the upper bound.'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooLargeException if {@code lower > upper}.',\n    'alternatives': [\n      '@throws NumberIsTooLargeException if {@code lower > upper}.',\n      '@throws NumberIsTooLargeException if the value of {@code lower} is greater than {@code upper}.',\n      '@throws NumberIsTooLargeException if the lower bound is greater than the upper bound.'\n    ]\n  },\n  {\n    'tag': '@return {@code true}',\n    'alternatives': [\n      '@return {@code true}',\n      '@return the value {@code true}',\n      '@return a boolean value of {@code true}'\n    ]\n  },\n  {\n    'tag': '@throws NotStrictlyPositiveException if minimal number of iterations\\nis not strictly positive',\n    'alternatives': [\n      '@throws NotStrictlyPositiveException if the minimum number of iterations\\nis not strictly positive',\n      '@throws NotStrictlyPositiveException if the smallest number of iterations\\nis not strictly positive',\n      '@throws NotStrictlyPositiveException if the number of iterations is not strictly positive'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooLargeException if maximal number of iterations\\nis greater than {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n    'alternatives': [\n      '@throws NumberIsTooLargeException if the maximum number of iterations\\nis greater than {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n      '@throws NumberIsTooLargeException if the largest number of iterations\\nexceeds {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n      '@throws NumberIsTooLargeException if the number of iterations exceeds the maximum limit of {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}'\n    ]\n  },\n  {\n    'tag': '@param maximalIterationCount maximum number of iterations\\n(must be less than or equal to {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n    'alternatives': [\n      '@param maximalIterationCount maximum number of iterations\\n(must not exceed {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n      '@param maximalIterationCount maximum number of iterations\\n(must be less than or equal to the maximum limit of {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n      '@param maximalIterationCount maximum number of iterations\\n(the value should be less than or equal to {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}'\n    ]\n  },\n  {\n    'tag': '@throws NotStrictlyPositiveException if minimal number of iterations\\nis not strictly positive',\n    'alternatives': [\n      '@throws NotStrictlyPositiveException if the minimum number of iterations\\nis not strictly positive',\n      '@throws NotStrictlyPositiveException if the smallest number of iterations\\nis not strictly positive',\n      '@throws NotStrictlyPositiveException if the number of iterations is not strictly positive'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooLargeException if maximal number of iterations\\nis greater than {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n    'alternatives': [\n      '@throws NumberIsTooLargeException if the maximum number of iterations\\nis greater than {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n      '@throws NumberIsTooLargeException if the largest number of iterations\\nexceeds {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n      '@throws NumberIsTooLargeException if the number of iterations exceeds the maximum limit of {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}'\n    ]\n  },\n  {\n    'tag': '@param maximalIterationCount maximum number of iterations\\n(must be less than or equal to {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n    'alternatives': [\n      '@param maximalIterationCount maximum number of iterations\\n(must not exceed {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n      '@param maximalIterationCount maximum number of iterations\\n(must be less than or equal to the maximum limit of {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}',\n      '@param maximalIterationCount maximum number of iterations\\n(the value should be less than or equal to {@link #TRAPEZOID_MAX_ITERATIONS_COUNT}'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooSmallException if the number of generations is &lt; 1',\n    'alternatives': [\n      '@throws NumberIsTooSmallException if the number of generations is less than 1',\n      '@throws NumberIsTooSmallException if the number of generations is negative',\n      '@throws NumberIsTooSmallException if the number of generations is not greater than or equal to 1'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if the arrays are <code>null</code>',\n    'alternatives': [\n      '@throws NullArgumentException if the arrays are <code>null</code>',\n      '@throws NullArgumentException if the arrays are null',\n      '@throws NullArgumentException if the arrays do not exist'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooSmallException if the length of the arrays is &lt; 2',\n    'alternatives': [\n      '@throws NumberIsTooSmallException if the length of the arrays is less than 2',\n      '@throws NumberIsTooSmallException if the arrays have a length smaller than 2',\n      '@throws NumberIsTooSmallException if the size of the arrays is not at least 2'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if the arrays are <code>null</code>',\n    'alternatives': [\n      '@throws NullArgumentException if the arrays are <code>null</code>',\n      '@throws NullArgumentException if the arrays are null',\n      '@throws NullArgumentException if the arrays do not exist'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooSmallException if the length of the arrays is &lt; 2',\n    'alternatives': [\n      '@throws NumberIsTooSmallException if the length of the arrays is less than 2',\n      '@throws NumberIsTooSmallException if the arrays have a length smaller than 2',\n      '@throws NumberIsTooSmallException if the size of the arrays is not at least 2'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if the arrays are <code>null</code>',\n    'alternatives': [\n      '@throws NullArgumentException if the arrays are <code>null</code>',\n      '@throws NullArgumentException if the arrays are null',\n      '@throws NullArgumentException if the arrays do not exist'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooSmallException if the length of the arrays is &lt; 2',\n    'alternatives': [\n      '@throws NumberIsTooSmallException if the length of the arrays is less than 2',\n      '@throws NumberIsTooSmallException if the arrays have a length smaller than 2',\n      '@throws NumberIsTooSmallException if the size of the arrays is not at least 2'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if <code>observed</code> is <code>null</code>',\n    'alternatives': [\n      '@throws NullArgumentException if <code>observed</code> is <code>null</code>',\n      '@throws NullArgumentException if the value of <code>observed</code> is <code>null</code>',\n      '@throws NullArgumentException if the variable <code>observed</code> is <code>null</code>'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooSmallException if the length of <code>observed</code> is &lt; 2',\n    'alternatives': [\n      '@throws NumberIsTooSmallException if the length of <code>observed</code> is less than 2',\n      '@throws NumberIsTooSmallException if the size of <code>observed</code> is smaller than 2',\n      '@throws NumberIsTooSmallException if <code>observed</code> has a length smaller than 2'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if <code>sampleStats</code> is <code>null</code>',\n    'alternatives': [\n      '@throws NullArgumentException if <code>sampleStats</code> is <code>null</code>',\n      '@throws NullArgumentException if the value of <code>sampleStats</code> is <code>null</code>',\n      '@throws NullArgumentException if the variable <code>sampleStats</code> is <code>null</code>'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if the arrays are <code>null</code>',\n    'alternatives': [\n      '@throws NullArgumentException if the arrays are <code>null</code>',\n      '@throws NullArgumentException if the arrays are null',\n      '@throws NullArgumentException if the arrays do not exist'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooSmallException if the length of the arrays is &lt; 2',\n    'alternatives': [\n      '@throws NumberIsTooSmallException if the length of the arrays is less than 2',\n      '@throws NumberIsTooSmallException if the arrays have a length smaller than 2',\n      '@throws NumberIsTooSmallException if the size of the arrays is not at least 2'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if the arrays are <code>null</code>',\n    'alternatives': [\n      '@throws NullArgumentException if the arrays are <code>null</code>',\n      '@throws NullArgumentException if the arrays are null',\n      '@throws NullArgumentException if the arrays do not exist'\n    ]\n  },\n  {\n    'tag': '@throws NumberIsTooSmallException if the length of the arrays is &lt; 2',\n    'alternatives': [\n      '@throws NumberIsTooSmallException if the length of the arrays is less than 2',\n      '@throws NumberIsTooSmallException if the arrays have a length smaller than 2',\n      '@throws NumberIsTooSmallException if the size of the arrays is not at least 2'\n    ]\n  }\n]"