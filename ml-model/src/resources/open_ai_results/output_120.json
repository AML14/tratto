"output = [\n  {\n    'tag': '@param row Row index to check.',\n    'alternatives': [\n      '@param row Index of the row to validate.',\n      '@param row The row index for validation.',\n      '@param row The index of the row to verify.',\n      '@param row The row index to examine.',\n      '@param row The index of the row to check.'\n    ]\n  },\n  {\n    'tag': '@param column Column index to check.',\n    'alternatives': [\n      '@param column Index of the column to validate.',\n      '@param column The column index for validation.',\n      '@param column The index of the column to verify.',\n      '@param column The column index to examine.',\n      '@param column The index of the column to check.'\n    ]\n  },\n  {\n    'tag': '@throws OutOfRangeException if {@code row} or {@code column} is not\\na valid index.',\n    'alternatives': [\n      '@throws OutOfRangeException if the index of {@code row} or {@code column} is invalid.',\n      '@throws OutOfRangeException if the index of {@code row} or {@code column} is not valid.',\n      '@throws OutOfRangeException if the index of {@code row} or {@code column} is not within the valid range.',\n      '@throws OutOfRangeException if the index of {@code row} or {@code column} is out of bounds.',\n      '@throws OutOfRangeException if {@code row} or {@code column} is an invalid index.'\n    ]\n  },\n  {\n    'tag': '@param m Matrix.',\n    'alternatives': [\n      '@param m The matrix to process.',\n      '@param m The input matrix.',\n      '@param m The matrix object.',\n      '@param m The provided matrix.',\n      '@param m The target matrix.'\n    ]\n  },\n  {\n    'tag': '@param startRow Initial row index.',\n    'alternatives': [\n      '@param startRow The starting row index.',\n      '@param startRow The index of the initial row.',\n      '@param startRow The row index to begin with.',\n      '@param startRow The initial index of the row.',\n      '@param startRow The row index to start from.'\n    ]\n  },\n  {\n    'tag': '@param endRow Final row index.',\n    'alternatives': [\n      '@param endRow The final row index.',\n      '@param endRow The index of the last row.',\n      '@param endRow The row index to end with.',\n      '@param endRow The final index of the row.',\n      '@param endRow The row index to conclude at.'\n    ]\n  },\n  {\n    'tag': '@param startColumn Initial column index.',\n    'alternatives': [\n      '@param startColumn The starting column index.',\n      '@param startColumn The index of the initial column.',\n      '@param startColumn The column index to begin with.',\n      '@param startColumn The initial index of the column.',\n      '@param startColumn The column index to start from.'\n    ]\n  },\n  {\n    'tag': '@param endColumn Final column index.',\n    'alternatives': [\n      '@param endColumn The final column index.',\n      '@param endColumn The index of the last column.',\n      '@param endColumn The column index to end with.',\n      '@param endColumn The final index of the column.',\n      '@param endColumn The column index to conclude at.'\n    ]\n  },\n  {\n    'tag': '@throws OutOfRangeException if the indices are invalid.',\n    'alternatives': [\n      '@throws OutOfRangeException if the indices are not valid.',\n      '@throws OutOfRangeException if the indices are not within the valid range.',\n      '@throws OutOfRangeException if the indices are out of bounds.',\n      '@throws OutOfRangeException if the indices are invalid or out of range.',\n      '@throws OutOfRangeException if the provided indices are not valid.'\n    ]\n  },\n  {\n    'tag': '@param selectedRows Array of row indices.',\n    'alternatives': [\n      '@param selectedRows An array containing the row indices.',\n      '@param selectedRows The array of indices representing the rows.',\n      '@param selectedRows The array holding the row indexes.',\n      '@param selectedRows The selected rows in the form of an array.',\n      '@param selectedRows The row indices in the provided array.'\n    ]\n  },\n  {\n    'tag': '@param selectedColumns Array of column indices.',\n    'alternatives': [\n      '@param selectedColumns An array containing the column indices.',\n      '@param selectedColumns The array of indices representing the columns.',\n      '@param selectedColumns The array holding the column indexes.',\n      '@param selectedColumns The selected columns in the form of an array.',\n      '@param selectedColumns The column indices in the provided array.'\n    ]\n  },\n  {\n    'tag': '@throws NoDataException if the row or column selections are empty (zero\\nlength).',\n    'alternatives': [\n      '@throws NoDataException if the row or column selections have no data.',\n      '@throws NoDataException if the row or column selections are empty.',\n      '@throws NoDataException if the row or column selections have zero length.',\n      '@throws NoDataException if there is no data in the row or column selections.',\n      '@throws NoDataException if the length of the row or column selections is zero.'\n    ]\n  },\n  {\n    'tag': '@throws OutOfRangeException if row or column selections are not valid.',\n    'alternatives': [\n      '@throws OutOfRangeException if the row or column selections are invalid.',\n      '@throws OutOfRangeException if the row or column selections are not valid.',\n      '@throws OutOfRangeException if the row or column selections are not within the valid range.',\n      '@throws OutOfRangeException if the row or column selections are out of bounds.',\n      '@throws OutOfRangeException if the row or column selections are not valid or out of range.'\n    ]\n  },\n  {\n    'tag': '@param left Left hand side matrix.',\n    'alternatives': [\n      '@param left The matrix on the left hand side.',\n      '@param left The matrix to the left.',\n      '@param left The matrix on the left side.',\n      '@param left The left matrix.',\n      '@param left The matrix at the left hand side.'\n    ]\n  },\n  {\n    'tag': '@param right Right hand side matrix.',\n    'alternatives': [\n      '@param right The matrix on the right hand side.',\n      '@param right The matrix to the right.',\n      '@param right The matrix on the right side.',\n      '@param right The right matrix.',\n      '@param right The matrix at the right hand side.'\n    ]\n  },\n  {\n    'tag': '@throws MatrixDimensionMismatchException if the matrices are not addition\\ncompatible.',\n    'alternatives': [\n      '@throws MatrixDimensionMismatchException if the matrices are not compatible for addition.',\n      '@throws MatrixDimensionMismatchException if the matrices cannot be added together.',\n      '@throws MatrixDimensionMismatchException if the addition of the matrices is not possible.',\n      '@throws MatrixDimensionMismatchException if the matrices are not addition-compatible.',\n      '@throws MatrixDimensionMismatchException if the matrices do not have compatible dimensions for addition.'\n    ]\n  },\n  {\n    'tag': '@param left Left hand side matrix.',\n    'alternatives': [\n      '@param left The matrix on the left hand side.',\n      '@param left The matrix to the left.',\n      '@param left The matrix on the left side.',\n      '@param left The left matrix.',\n      '@param left The matrix at the left hand side.'\n    ]\n  },\n  {\n    'tag': '@param right Right hand side matrix.',\n    'alternatives': [\n      '@param right The matrix on the right hand side.',\n      '@param right The matrix to the right.',\n      '@param right The matrix on the right side.',\n      '@param right The right matrix.',\n      '@param right The matrix at the right hand side.'\n    ]\n  }\n]"