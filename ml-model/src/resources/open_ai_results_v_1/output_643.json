"output=[\n    {\n        'tag': '@param key key to check',\n        'alternatives': [\n            '@param key the key to verify',\n            '@param key the key for verification',\n            '@param key for checking',\n            '@param key to validate',\n            '@param key to examine'\n        ]\n    },\n    {\n        'tag': '@return true if a value is associated with key',\n        'alternatives': [\n            '@return indicates whether a value is linked to the key',\n            '@return true if there is a value associated with the key',\n            '@return true if the key is associated with a value',\n            '@return true if there exists a value associated with the key',\n            '@return true if the key has an associated value'\n        ]\n    },\n    {\n        'tag': '@return iterator over the map elements',\n        'alternatives': [\n            '@return an iterator for the elements of the map',\n            '@return iterator that traverses the map elements',\n            '@return an iterator that goes through the elements of the map',\n            '@return iterator for navigating through the map elements',\n            '@return iterator that allows accessing the elements of the map'\n        ]\n    },\n    {\n        'tag': '@param hash initial hash',\n        'alternatives': [\n            '@param hash the starting hash',\n            '@param hash initial value of the hash',\n            '@param hash the hash value at the beginning',\n            '@param hash original hash',\n            '@param hash starting point of the hash'\n        ]\n    },\n    {\n        'tag': '@return perturbed hash',\n        'alternatives': [\n            '@return modified hash',\n            '@return hash after perturbation',\n            '@return perturbed value of the hash',\n            '@return hash value after disturbance',\n            '@return hash that has been manipulated'\n        ]\n    },\n    {\n        'tag': '@param key key to lookup',\n        'alternatives': [\n            '@param key the key to search for',\n            '@param key the key for retrieval',\n            '@param key to find',\n            '@param key for searching',\n            '@param key to locate'\n        ]\n    },\n    {\n        'tag': '@return index at which key should be inserted',\n        'alternatives': [\n            '@return the position where the key should be inserted',\n            '@return index where the key is supposed to be added',\n            '@return position to insert the key',\n            '@return index for key insertion',\n            '@return the location where the key needs to be inserted'\n        ]\n    },\n    {\n        'tag': '@param keys keys table',\n        'alternatives': [\n            '@param keys list of keys',\n            '@param keys array of key elements',\n            '@param keys collection of key values',\n            '@param keys table containing keys',\n            '@param keys storage for key information'\n        ]\n    },\n    {\n        'tag': '@param states states table',\n        'alternatives': [\n            '@param states list of states',\n            '@param states array of state elements',\n            '@param states collection of state values',\n            '@param states table containing states',\n            '@param states storage for state information'\n        ]\n    },\n    {\n        'tag': '@param key key to lookup',\n        'alternatives': [\n            '@param key the key to search for',\n            '@param key the key for retrieval',\n            '@param key to find',\n            '@param key for searching',\n            '@param key to locate'\n        ]\n    },\n    {\n        'tag': '@param mask bit mask for hash values',\n        'alternatives': [\n            '@param mask the bitmask for hash values',\n            '@param mask the mask used for hashing',\n            '@param mask to apply on hash values',\n            '@param mask that serves as a hash filter',\n            '@param mask used to modify hash values'\n        ]\n    },\n    {\n        'tag': '@return index at which key should be inserted',\n        'alternatives': [\n            '@return the position where the key should be inserted',\n            '@return index where the key is supposed to be added',\n            '@return position to insert the key',\n            '@return index for key insertion',\n            '@return the location where the key needs to be inserted'\n        ]\n    },\n    {\n        'tag': '@param perturb perturbed hash',\n        'alternatives': [\n            '@param perturb modified hash',\n            '@param perturb hash after disturbance',\n            '@param perturb perturbed value of the hash',\n            '@param perturb hash value after perturbation',\n            '@param perturb hash that has been manipulated'\n        ]\n    },\n    {\n        'tag': '@param j previous probe',\n        'alternatives': [\n            '@param j the previous attempt',\n            '@param j the previous search',\n            '@param j for the previous iteration',\n            '@param j the preceding probe',\n            '@param j the search made before'\n        ]\n    },\n    {\n        'tag': '@return next probe',\n        'alternatives': [\n            '@return following attempt',\n            '@return the next search',\n            '@return for the next iteration',\n            '@return the upcoming probe',\n            '@return the subsequent attempt'\n        ]\n    },\n    {\n        'tag': '@param index initial index',\n        'alternatives': [\n            '@param index starting index',\n            '@param index initial value of the index',\n            '@param index the index at the beginning',\n            '@param index original index',\n            '@param index starting point of the index'\n        ]\n    },\n    {\n        'tag': '@return changed index',\n        'alternatives': [\n            '@return altered index',\n            '@return the index after modification',\n            '@return the modified index',\n            '@return index that has been changed',\n            '@return index that underwent modification'\n        ]\n    },\n    {\n        'tag': '@return number of elements stored in the map',\n        'alternatives': [\n            '@return count of elements in the map',\n            '@return quantity of stored elements in the map',\n            '@return number of elements present in the map',\n            '@return total number of elements set in the map',\n            '@return the size of the map in terms of elements'\n        ]\n    },\n    {\n        'tag': '@param key key to which the value is associated',\n        'alternatives': [\n            '@param key the key for linking the value',\n            '@param key the key for value association',\n            '@param key to connect the value',\n            '@param key for associating a value',\n            '@param key to bind the value'\n        ]\n    },\n    {\n        'tag': '@return removed value',\n        'alternatives': [\n            '@return the value that was eliminated',\n            '@return the value after removal',\n            '@return value that has been taken out',\n            '@return the excluded value',\n            '@return the value that got removed'\n        ]\n    },\n    {\n        'tag': '@param key key to check',\n        'alternatives': [\n            '@param key the key to verify',\n            '@param key the key for checking',\n            '@param key to validate',\n            '@param key to examine',\n            '@param key to ensure'\n        ]\n    },\n    {\n        'tag': '@param index index to check',\n        'alternatives': [\n            '@param index the index to verify',\n            '@param index the index for checking',\n            '@param index to validate',\n            '@param index to examine',\n            '@param index to ensure'\n        ]\n    },\n    {\n        'tag': '@return true if an element is associated with key at index',\n        'alternatives': [\n            '@return indicates if an element is linked to the key at index',\n            '@return true if there is an element associated with the key at index',\n            '@return true if the key at index is associated with an element',\n            '@return true if there exists an element associated with the key at index',\n            '@return true if the key at index has an associated element'\n        ]\n    },\n    {\n        'tag': '@param index index of the element to remove',\n        'alternatives': [\n            '@param index the index of the element to delete',\n            '@param index the index for element elimination',\n            '@param index of the element to exclude',\n            '@param index to remove the element',\n            '@param index to eliminate the element'\n        ]\n    },\n    {\n        'tag': '@return removed value',\n        'alternatives': [\n            '@return the value that was eliminated',\n            '@return the value after removal',\n            '@return value that has been taken out',\n            '@return the excluded value',\n            '@return the value that got removed'\n        ]\n    }\n]"