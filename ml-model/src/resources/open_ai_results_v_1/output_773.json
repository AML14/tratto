"[\n  {\n    'tag': '@return the minimum of the values or Double.NaN if length = 0',\n    'alternatives': [\n      '@return the smallest value among the elements or Double.NaN if the length is 0',\n      '@return the minimum value from the values or Double.NaN if the length is zero',\n      '@return the smallest value of the given values or Double.NaN if the count is zero',\n      '@return the minimum value found in the input values or Double.NaN if the length is zero',\n      '@return the minimum of the provided values or Double.NaN if the length is 0'\n    ]\n  },\n  {\n    'tag': '@param source Min to copy',\n    'alternatives': [\n      '@param source Minimum value to duplicate',\n      '@param source Value representing the minimum to be replicated',\n      '@param source Value that represents the minimum to be copied',\n      '@param source Original minimum value to be cloned',\n      '@param source The minimum value to be copied'\n    ]\n  },\n  {\n    'tag': '@param dest Min to copy to',\n    'alternatives': [\n      '@param dest Destination for the copied minimum',\n      '@param dest Target location for the copied minimum',\n      '@param dest Location to which the minimum will be copied',\n      '@param dest Replica location for the minimum value',\n      '@param dest Where the minimum value will be copied to'\n    ]\n  },\n  {\n    'tag': '@param original the {@code Min} instance to copy',\n    'alternatives': [\n      '@param original the {@code Min} object to replicate',\n      '@param original the {@code Min} instance to duplicate',\n      '@param original the {@code Min} object to be cloned',\n      '@param original the {@code Min} instance to be copied',\n      '@param original the {@code Min} object that will be replicated'\n    ]\n  },\n  {\n    'tag': '@param original the {@code Median} instance to copy',\n    'alternatives': [\n      '@param original the {@code Median} object to replicate',\n      '@param original the {@code Median} instance to duplicate',\n      '@param original the {@code Median} object to be cloned',\n      '@param original the {@code Median} instance to be copied',\n      '@param original the {@code Median} object that will be replicated'\n    ]\n  },\n  {\n    'tag': '@param estimationType one of the percentile {@link EstimationType  estimation types}',\n    'alternatives': [\n      '@param estimationType one of the estimation types for percentiles',\n      '@param estimationType one of the types of estimation for percentiles',\n      '@param estimationType one of the available estimation types for percentiles',\n      '@param estimationType one of the estimation types used for calculating percentiles',\n      '@param estimationType one of the possible types of estimation for percentile values'\n    ]\n  },\n  {\n    'tag': '@param nanStrategy one of {@link NaNStrategy} to handle with NaNs',\n    'alternatives': [\n      '@param nanStrategy one of the options in {@link NaNStrategy} for handling NaNs',\n      '@param nanStrategy one of the {@link NaNStrategy} choices to deal with NaN values',\n      '@param nanStrategy one of the approaches defined in {@link NaNStrategy} to handle NaNs',\n      '@param nanStrategy one of the methods provided by {@link NaNStrategy} to handle NaNs',\n      '@param nanStrategy one of the strategies specified in {@link NaNStrategy} to handle NaNs'\n    ]\n  },\n  {\n    'tag': '@param kthSelector {@link KthSelector} to use for pivoting during search',\n    'alternatives': [\n      '@param kthSelector The {@link KthSelector} used for pivot selection in search',\n      '@param kthSelector The {@link KthSelector} to be used for pivot selection during search',\n      '@param kthSelector The {@link KthSelector} to choose pivots during the search process',\n      '@param kthSelector The {@link KthSelector} implementation to utilize for pivoting in search',\n      '@param kthSelector The {@link KthSelector} that will be employed for pivoting in the search'\n    ]\n  },\n  {\n    'tag': '@throws MathIllegalArgumentException if p is not within (0,100]',\n    'alternatives': [\n      '@throws MathIllegalArgumentException if p is not in the range (0,100]',\n      '@throws MathIllegalArgumentException if p is not between 0 (exclusive) and 100 (inclusive)',\n      '@throws MathIllegalArgumentException if the value of p is not in the interval (0,100]',\n      '@throws MathIllegalArgumentException if the provided p value is outside the range (0,100]',\n      '@throws MathIllegalArgumentException if p is not a value within the range (0,100]'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if type or NaNStrategy passed is null',\n    'alternatives': [\n      '@throws NullArgumentException if type or NaNStrategy is null',\n      '@throws NullArgumentException if either type or NaNStrategy is null',\n      '@throws NullArgumentException if the provided type or NaNStrategy is null',\n      '@throws NullArgumentException if either the type or NaNStrategy parameter is null',\n      '@throws NullArgumentException if the type or NaNStrategy argument is null'\n    ]\n  },\n  {\n    'tag': '@return a copy of this',\n    'alternatives': [\n      '@return a duplicate of this object',\n      '@return a cloned instance of this',\n      '@return a replicated version of this',\n      '@return a new copy of this',\n      '@return a replica of this'\n    ]\n  },\n  {\n    'tag': '@param source SynchronizedDescriptiveStatistics to copy',\n    'alternatives': [\n      '@param source SynchronizedDescriptiveStatistics object to replicate',\n      '@param source SynchronizedDescriptiveStatistics instance to duplicate',\n      '@param source SynchronizedDescriptiveStatistics object to be cloned',\n      '@param source SynchronizedDescriptiveStatistics instance to be copied',\n      '@param source SynchronizedDescriptiveStatistics object that will be replicated'\n    ]\n  },\n  {\n    'tag': '@param dest SynchronizedDescriptiveStatistics to copy to',\n    'alternatives': [\n      '@param dest Destination for the copied SynchronizedDescriptiveStatistics',\n      '@param dest Target location for the copied SynchronizedDescriptiveStatistics',\n      '@param dest Location to which the SynchronizedDescriptiveStatistics will be copied',\n      '@param dest Replica location for the SynchronizedDescriptiveStatistics object',\n      '@param dest Where the SynchronizedDescriptiveStatistics will be copied to'\n    ]\n  },\n  {\n    'tag': '@param window the finite window size.',\n    'alternatives': [\n      '@param window the size of the finite window',\n      '@param window the fixed size of the window',\n      '@param window the size of the window (fixed)',\n      '@param window the size of the window (bounded)',\n      '@param window the size of the window (without growth)'\n    ]\n  },\n  {\n    'tag': '@param original the {@code SynchronizedDescriptiveStatistics} instance to copy',\n    'alternatives': [\n      '@param original the {@code SynchronizedDescriptiveStatistics} object to replicate',\n      '@param original the {@code SynchronizedDescriptiveStatistics} instance to duplicate',\n      '@param original the {@code SynchronizedDescriptiveStatistics} object to be cloned',\n      '@param original the {@code SynchronizedDescriptiveStatistics} instance to be copied',\n      '@param original the {@code SynchronizedDescriptiveStatistics} object that will be replicated'\n    ]\n  },\n  {\n    'tag': '@param k dimension of the data',\n    'alternatives': [\n      '@param k the number of dimensions of the data',\n      '@param k the size of the data dimension',\n      '@param k the dimensionality of the data',\n      '@param k the length of the data dimension',\n      '@param k the number of elements in the data dimension'\n    ]\n  },\n  {\n    'tag': '@param isCovarianceBiasCorrected if true, the unbiased sample\\ncovariance is computed, otherwise the biased population covariance\\nis computed',\n    'alternatives': [\n      '@param isCovarianceBiasCorrected if true, the computation will use the unbiased sample covariance, otherwise it will use the biased population covariance',\n      '@param isCovarianceBiasCorrected if set to true, the calculation will use the biased population covariance, otherwise it will use the unbiased sample covariance',\n      '@param isCovarianceBiasCorrected if true, the covariance will be calculated using the unbiased sample method, otherwise it will use the biased population method',\n      '@param isCovarianceBiasCorrected when set to true, the calculation will utilize the unbiased sample covariance, otherwise it will utilize the biased population covariance',\n      '@param isCovarianceBiasCorrected use true for unbiased sample covariance calculation and false for biased population covariance calculation'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values the array of inputs',\n      '@param values the array containing the input values',\n      '@param values the array that holds the input elements',\n      '@param values the provided input array',\n      '@param values the array of values to be processed'\n    ]\n  },\n  {\n    'tag': '@param begin index of the first array element to include',\n    'alternatives': [\n      '@param begin the index of the initial array element to incorporate',\n      '@param begin the index of the first array element to take into account',\n      '@param begin the starting index of the array element to include',\n      '@param begin the index of the initial array element to consider',\n      '@param begin the index from which to start including array elements'\n    ]\n  },\n  {\n    'tag': '@param length the number of elements to include',\n    'alternatives': [\n      '@param length the count of elements to incorporate',\n      '@param length the number of elements to take into account',\n      '@param length the size of the array portion to include',\n      '@param length the total number of elements to consider',\n      '@param length the number of array elements to include'\n    ]\n  },\n  {\n    'tag': '@param source SumOfSquares to copy',\n    'alternatives': [\n      '@param source SumOfSquares object to replicate',\n      '@param source SumOfSquares instance to duplicate',\n      '@param source SumOfSquares object to be cloned',\n      '@param source SumOfSquares instance to be copied',\n      '@param source SumOfSquares object that will be replicated'\n    ]\n  },\n  {\n    'tag': '@param dest SumOfSquares to copy to',\n    'alternatives': [\n      '@param dest Destination for the copied SumOfSquares',\n      '@param dest Target location for the copied SumOfSquares',\n      '@param dest Location to which the SumOfSquares will be copied',\n      '@param dest Replica location for the SumOfSquares object',\n      '@param dest Where the SumOfSquares will be copied to'\n    ]\n  },\n  {\n    'tag': '@param original the {@code SumOfSquares} instance to copy',\n    'alternatives': [\n      '@param original the {@code SumOfSquares} object to replicate',\n      '@param original the {@code SumOfSquares} instance to duplicate',\n      '@param original the {@code SumOfSquares} object to be cloned',\n      '@param original the {@code SumOfSquares} instance to be copied',\n      '@param original the {@code SumOfSquares} object that will be replicated'\n    ]\n  },\n  {\n    'tag': '@param values the input array',\n    'alternatives': [\n      '@param values the array of inputs',\n      '@param values the array containing the input values',\n      '@param values the array that holds the input elements',\n      '@param values the provided input array',\n      '@param values the array of values to be processed'\n    ]\n  },\n  {\n    'tag': '@param begin index of the first array element to include',\n    'alternatives': [\n      '@param begin the index of the initial array element to incorporate',\n      '@param begin the index of the first array element to take into account',\n      '@param begin the starting index of the array element to include',\n      '@param begin the index of the initial array element to consider',\n      '@param begin the index from which to start including array elements'\n    ]\n  }\n]"