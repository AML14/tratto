"output=[\n  {\n    'tag': '@param u1 first base (unscaled) vector',\n    'alternatives': [\n      '@param u1 initial base (unscaled) vector',\n      '@param u1 primary base (unscaled) vector',\n      '@param u1 starting base (unscaled) vector',\n      '@param u1 unscaled vector that serves as the first base',\n      '@param u1 vector that acts as the starting base (unscaled)'\n    ]\n  },\n  {\n    'tag': '@param a2 second scale factor',\n    'alternatives': [\n      '@param a2 next scale factor',\n      '@param a2 scaling factor for the next value',\n      '@param a2 ratio for the second value',\n      '@param a2 multiplier for the second value',\n      '@param a2 coefficient for the second value'\n    ]\n  },\n  {\n    'tag': '@param u2 second base (unscaled) vector',\n    'alternatives': [\n      '@param u2 next base (unscaled) vector',\n      '@param u2 unscaled vector for the next base',\n      '@param u2 base (unscaled) vector for the second value',\n      '@param u2 vector for the second base (unscaled)',\n      '@param u2 second vector acting as the base (unscaled)'\n    ]\n  },\n  {\n    'tag': '@param a3 third scale factor',\n    'alternatives': [\n      '@param a3 next scale factor',\n      '@param a3 scaling factor for the next value',\n      '@param a3 ratio for the third value',\n      '@param a3 multiplier for the third value',\n      '@param a3 coefficient for the third value'\n    ]\n  },\n  {\n    'tag': '@param u3 third base (unscaled) vector',\n    'alternatives': [\n      '@param u3 next base (unscaled) vector',\n      '@param u3 unscaled vector for the next base',\n      '@param u3 base (unscaled) vector for the third value',\n      '@param u3 vector for the third base (unscaled)',\n      '@param u3 third vector acting as the base (unscaled)'\n    ]\n  },\n  {\n    'tag': '@param a4 fourth scale factor',\n    'alternatives': [\n      '@param a4 next scale factor',\n      '@param a4 scaling factor for the next value',\n      '@param a4 ratio for the fourth value',\n      '@param a4 multiplier for the fourth value',\n      '@param a4 coefficient for the fourth value'\n    ]\n  },\n  {\n    'tag': '@param u4 fourth base (unscaled) vector',\n    'alternatives': [\n      '@param u4 next base (unscaled) vector',\n      '@param u4 unscaled vector for the next base',\n      '@param u4 base (unscaled) vector for the fourth value',\n      '@param u4 vector for the fourth base (unscaled)',\n      '@param u4 fourth vector acting as the base (unscaled)'\n    ]\n  },\n  {\n    'tag': '@return start point of the segment',\n    'alternatives': [\n      '@return starting point of the segment',\n      '@return initial point of the segment',\n      '@return origin point of the segment',\n      '@return the first point of the segment',\n      '@return the segment's starting point'\n    ]\n  },\n  {\n    'tag': '@return end point of the segment',\n    'alternatives': [\n      '@return final point of the segment',\n      '@return last point of the segment',\n      '@return terminating point of the segment',\n      '@return the second point of the segment',\n      '@return the segment's end point'\n    ]\n  },\n  {\n    'tag': '@return line containing the segment',\n    'alternatives': [\n      '@return line that includes the segment',\n      '@return the line that encompasses the segment',\n      '@return the line that covers the segment',\n      '@return the line segment is part of',\n      '@return line that the segment belongs to'\n    ]\n  },\n  {\n    'tag': '@param p to check',\n    'alternatives': [\n      '@param p the point to verify',\n      '@param p the point to examine',\n      '@param p the point for validation',\n      '@param p point to be checked',\n      '@param p point to analyze'\n    ]\n  },\n  {\n    'tag': '@return distance between the instance and the point',\n    'alternatives': [\n      '@return distance from the object to the point',\n      '@return distance of the instance to the given point',\n      '@return how far the instance is from the point',\n      '@return length between the object and the point',\n      '@return how distant the instance is from the point'\n    ]\n  },\n  {\n    'tag': '@param start start point of the segment',\n    'alternatives': [\n      '@param start beginning point of the segment',\n      '@param start initial point of the segment',\n      '@param start origin point of the segment',\n      '@param start the first point of the segment',\n      '@param start the segment's starting point'\n    ]\n  },\n  {\n    'tag': '@param end end point of the segment',\n    'alternatives': [\n      '@param end final point of the segment',\n      '@param end last point of the segment',\n      '@param end terminating point of the segment',\n      '@param end the second point of the segment',\n      '@param end the segment's end point'\n    ]\n  },\n  {\n    'tag': '@param line line containing the segment',\n    'alternatives': [\n      '@param line line that includes the segment',\n      '@param line the line that encompasses the segment',\n      '@param line the line that covers the segment',\n      '@param line the line segment is part of',\n      '@param line line that the segment belongs to'\n    ]\n  },\n  {\n    'tag': '@param selectedColumns Array of column indices.',\n    'alternatives': [\n      '@param selectedColumns list of column indexes.',\n      '@param selectedColumns array containing column indices.',\n      '@param selectedColumns array holding column positions.',\n      '@param selectedColumns collection of column identifiers.',\n      '@param selectedColumns set of column numbers.'\n    ]\n  },\n  {\n    'tag': '@return The subMatrix containing the data in the specified rows and\\ncolumns',\n    'alternatives': [\n      '@return The subMatrix with the data in the provided rows and\\ncolumns',\n      '@return The subMatrix that holds the data for the specified rows and\\ncolumns',\n      '@return The subMatrix comprising the data in the given rows and\\ncolumns',\n      '@return The subMatrix containing the values in the provided rows and\\ncolumns',\n      '@return The subMatrix that includes the data in the specified rows and\\ncolumns'\n    ]\n  },\n  {\n    'tag': '@throws NullArgumentException if the row or column selections are\\n{@code null}',\n    'alternatives': [\n      '@throws NullArgumentException when the row or column selections are\\n{@code null}',\n      '@throws NullArgumentException if row or column selections are\\n{@code null}',\n      '@throws NullArgumentException in case row or column selections are\\n{@code null}',\n      '@throws NullArgumentException if either row or column selections are\\n{@code null}',\n      '@throws NullArgumentException when either row or column selections are\\n{@code null}'\n    ]\n  },\n  {\n    'tag': '@throws NoDataException if the row or column selections are empty (zero\\nlength).',\n    'alternatives': [\n      '@throws NoDataException when the row or column selections are empty (zero\\nlength).',\n      '@throws NoDataException if row or column selections are empty (zero\\nlength).',\n      '@throws NoDataException in case row or column selections are empty (zero\\nlength).',\n      '@throws NoDataException if either row or column selections are empty (zero\\nlength).',\n      '@throws NoDataException when either row or column selections are empty (zero\\nlength).'\n    ]\n  },\n  {\n    'tag': '@throws OutOfRangeException if the indices are not valid.',\n    'alternatives': [\n      '@throws OutOfRangeException when the indices are not valid.',\n      '@throws OutOfRangeException if indices are not valid.',\n      '@throws OutOfRangeException in case the indices are not valid.',\n      '@throws OutOfRangeException if the provided indices are not valid.',\n      '@throws OutOfRangeException when the provided indices are not valid.'\n    ]\n  },\n  {\n    'tag': '@param startRow Initial row index',\n    'alternatives': [\n      '@param startRow Row index at the beginning',\n      '@param startRow Starting row index',\n      '@param startRow First row index',\n      '@param startRow Row index from where to start',\n      '@param startRow The row index to initiate from'\n    ]\n  },\n  {\n    'tag': '@param endRow Final row index (inclusive)',\n    'alternatives': [\n      '@param endRow Last row index (inclusive)',\n      '@param endRow Row index at the end (inclusive)',\n      '@param endRow Terminating row index',\n      '@param endRow The final row index',\n      '@param endRow Row index to complete at (inclusive)'\n    ]\n  },\n  {\n    'tag': '@param startColumn Initial column index',\n    'alternatives': [\n      '@param startColumn Column index at the beginning',\n      '@param startColumn Starting column index',\n      '@param startColumn First column index',\n      '@param startColumn Column index from where to start',\n      '@param startColumn The column index to initiate from'\n    ]\n  },\n  {\n    'tag': '@param endColumn Final column index (inclusive)',\n    'alternatives': [\n      '@param endColumn Last column index (inclusive)',\n      '@param endColumn Column index at the end (inclusive)',\n      '@param endColumn Terminating column index',\n      '@param endColumn The final column index',\n      '@param endColumn Column index to complete at (inclusive)'\n    ]\n  },\n  {\n    'tag': '@param destination The arrays where the submatrix data should be copied\\n(if larger than rows/columns counts, only the upper-left part will be\\nused)',\n    'alternatives': [\n      '@param destination The arrays to receive the submatrix data\\n(if larger than rows/columns counts, only the upper-left portion will be\\nused)',\n      '@param destination The arrays that will hold the submatrix data\\n(if larger than rows/columns counts, only the upper-left part will be\\nconsidered)',\n      '@param destination The arrays that should store the submatrix data\\n(if larger than rows/columns counts, only the upper-left portion will be\\nutilized)',\n      '@param destination The arrays for storing the submatrix data\\n(if larger than rows/columns counts, only the upper-left part will be\\nemployed)',\n      '@param destination The arrays where the submatrix data will be placed\\n(if larger than rows/columns counts, only the upper-left portion will be\\nselected)'\n    ]\n  }\n]"