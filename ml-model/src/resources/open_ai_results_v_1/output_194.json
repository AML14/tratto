"[\n    {\n        \"tag\": \"@return a matrix which replicates the input matrix in both directions.\",\n        \"alternatives\": [\n            \"@return a matrix that duplicates the input matrix in both dimensions.\",\n            \"@return a matrix that copies the input matrix in both directions.\",\n            \"@return a matrix that mirrors the input matrix in both directions.\",\n            \"@return a matrix that reproduces the input matrix in both dimensions.\",\n            \"@return a matrix that mirrors the input matrix in both dimensions.\"\n        ]\n    },\n    {\n        \"tag\": \"@param start Start value.\",\n        \"alternatives\": [\n            \"@param start Initial value.\",\n            \"@param start Beginning value.\",\n            \"@param start Value at the start.\",\n            \"@param start First value.\",\n            \"@param start Value at the beginning.\"\n        ]\n    },\n    {\n        \"tag\": \"@param end End value.\",\n        \"alternatives\": [\n            \"@param end Final value.\",\n            \"@param end Last value.\",\n            \"@param end Value at the end.\",\n            \"@param end Value at the conclusion.\",\n            \"@param end Value at the termination.\"\n        ]\n    },\n    {\n        \"tag\": \"@param step Step size.\",\n        \"alternatives\": [\n            \"@param step Increment value.\",\n            \"@param step Interval size.\",\n            \"@param step Size of each increment.\",\n            \"@param step Amount of change per iteration.\",\n            \"@param step Difference between consecutive values.\"\n        ]\n    },\n    {\n        \"tag\": \"@return a sequence as column matrix.\",\n        \"alternatives\": [\n            \"@return a column matrix representing a sequence.\",\n            \"@return a column matrix that represents a sequence.\",\n            \"@return a column matrix containing a sequence.\",\n            \"@return a column matrix of sequential values.\",\n            \"@return a column matrix that holds a sequence.\"\n        ]\n    },\n    {\n        \"tag\": \"@param m Input matrix.\",\n        \"alternatives\": [\n            \"@param m Matrix input.\",\n            \"@param m Matrix as input.\",\n            \"@param m Input as matrix.\",\n            \"@param m Input represented as a matrix.\",\n            \"@param m Matrix passed as input.\"\n        ]\n    },\n    {\n        \"tag\": \"@return the maximum of the matrix element values.\",\n        \"alternatives\": [\n            \"@return the highest value among the elements of the matrix.\",\n            \"@return the maximum value from the elements of the matrix.\",\n            \"@return the largest value among the elements of the matrix.\",\n            \"@return the maximum element value in the matrix.\",\n            \"@return the highest value found in the matrix elements.\"\n        ]\n    },\n    {\n        \"tag\": \"@return the minimum of the matrix element values.\",\n        \"alternatives\": [\n            \"@return the lowest value among the elements of the matrix.\",\n            \"@return the minimum value from the elements of the matrix.\",\n            \"@return the smallest value among the elements of the matrix.\",\n            \"@return the minimum element value in the matrix.\",\n            \"@return the lowest value found in the matrix elements.\"\n        ]\n    },\n    {\n        \"tag\": \"@param m Input array.\",\n        \"alternatives\": [\n            \"@param m Array input.\",\n            \"@param m Array as input.\",\n            \"@param m Input as array.\",\n            \"@param m Input represented as an array.\",\n            \"@param m Array passed as input.\"\n        ]\n    },\n    {\n        \"tag\": \"@return the maximum of the array values.\",\n        \"alternatives\": [\n            \"@return the highest value among the array elements.\",\n            \"@return the maximum value from the array values.\",\n            \"@return the largest value among the array elements.\",\n            \"@return the maximum value in the array.\",\n            \"@return the highest value found in the array elements.\"\n        ]\n    },\n    {\n        \"tag\": \"@return the minimum of the array values.\",\n        \"alternatives\": [\n            \"@return the lowest value among the array elements.\",\n            \"@return the minimum value from the array values.\",\n            \"@return the smallest value among the array elements.\",\n            \"@return the minimum value in the array.\",\n            \"@return the lowest value found in the array elements.\"\n        ]\n    },\n    {\n        \"tag\": \"@param indices Input index array.\",\n        \"alternatives\": [\n            \"@param indices Array of input indices.\",\n            \"@param indices Index array as input.\",\n            \"@param indices Input represented as an index array.\",\n            \"@param indices Input passed as an index array.\",\n            \"@param indices Input array of indices.\"\n        ]\n    },\n    {\n        \"tag\": \"@return the inverse of the mapping defined by indices.\",\n        \"alternatives\": [\n            \"@return the reverse of the mapping defined by indices.\",\n            \"@return the mapping defined by indices in reverse order.\",\n            \"@return the inverse mapping based on the indices provided.\",\n            \"@return the mapping defined by indices in inverted form.\",\n            \"@return the inverse mapping calculated using the indices.\"\n        ]\n    },\n    {\n        \"tag\": \"@return the indices in inverse order (last is first).\",\n        \"alternatives\": [\n            \"@return the indices arranged in reversed order (last to first).\",\n            \"@return the indices listed in reverse order (from last to first).\",\n            \"@return the indices presented in inverted order (last is first).\",\n            \"@return the indices displayed in reverse sequence (last as first).\",\n            \"@return the indices shown in the opposite order (last is first).\"\n        ]\n    },\n    {\n        \"tag\": \"@param size Length of random array.\",\n        \"alternatives\": [\n            \"@param size Size of the random array.\",\n            \"@param size Length of an array with random values.\",\n            \"@param size Number of elements in the random array.\",\n            \"@param size Length of an array containing random values.\",\n            \"@param size Count of elements in the random array.\"\n        ]\n    },\n    {\n        \"tag\": \"@return an array of Gaussian random numbers.\",\n        \"alternatives\": [\n            \"@return a random array of Gaussian numbers.\",\n            \"@return an array filled with Gaussian random values.\",\n            \"@return an array consisting of Gaussian random elements.\",\n            \"@return an array containing random numbers generated from a Gaussian distribution.\",\n            \"@return an array populated with Gaussian random values.\"\n        ]\n    },\n    {\n        \"tag\": \"@param size Number of rows.\",\n        \"alternatives\": [\n            \"@param size Count of rows.\",\n            \"@param size Amount of rows.\",\n            \"@param size Total number of rows.\",\n            \"@param size Number of rows to consider.\",\n            \"@param size Quantity of rows.\"\n        ]\n    },\n    {\n        \"tag\": \"@param popSize Population size.\",\n        \"alternatives\": [\n            \"@param popSize Size of the population.\",\n            \"@param popSize Number of individuals in the population.\",\n            \"@param popSize Total population count.\",\n            \"@param popSize Quantity of individuals in the population.\",\n            \"@param popSize Count of population size.\"\n        ]\n    },\n    {\n        \"tag\": \"@return a 2-dimensional matrix of Gaussian random numbers.\",\n        \"alternatives\": [\n            \"@return a matrix containing 2-dimensional Gaussian random values.\",\n            \"@return a 2D matrix initialized with Gaussian random numbers.\",\n            \"@return a matrix filled with 2-dimensional Gaussian random elements.\",\n            \"@return a 2-dimensional matrix of random numbers produced from a Gaussian distribution.\",\n            \"@return a matrix populated with 2-dimensional Gaussian random values.\"\n        ]\n    },\n    {\n        \"tag\": \"@param maxIterations Maximal number of iterations.\",\n        \"alternatives\": [\n            \"@param maxIterations Maximum iterations allowed.\",\n            \"@param maxIterations Largest number of iterations.\",\n            \"@param maxIterations Maximum count of iterations.\",\n            \"@param maxIterations Max number of repetitive steps.\",\n            \"@param maxIterations Upper limit for the iteration count.\"\n        ]\n    },\n    {\n        \"tag\": \"@param stopFitness Whether to stop if objective function value is smaller than\\n{@code stopFitness}.\",\n        \"alternatives\": [\n            \"@param stopFitness Decision to terminate if objective function value is less than\\n{@code stopFitness}.\",\n            \"@param stopFitness Option to halt if objective function value is lower than\\n{@code stopFitness}.\",\n            \"@param stopFitness Condition to stop if objective function value is smaller than\\n{@code stopFitness}.\",\n            \"@param stopFitness Flag determining whether to terminate if objective function value is less than\\n{@code stopFitness}.\",\n            \"@param stopFitness Choice to halt if objective function value is lower than\\n{@code stopFitness}.\"\n        ]\n    },\n    {\n        \"tag\": \"@param isActiveCMA Chooses the covariance matrix update method.\",\n        \"alternatives\": [\n            \"@param isActiveCMA Decides the method of updating the covariance matrix.\",\n            \"@param isActiveCMA Selects the approach for updating the covariance matrix.\",\n            \"@param isActiveCMA Determines the covariance matrix update approach.\",\n            \"@param isActiveCMA Specifies the method of updating the covariance matrix.\",\n            \"@param isActiveCMA Sets the strategy for updating the covariance matrix.\"\n        ]\n    }\n]"