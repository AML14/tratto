"[\n    {\n        'tag': '@return true if the integration should be stopped',\n        'alternatives': [\n            '@return true if the integration needs to be halted',\n            '@return true if the integration must be terminated',\n            '@return true if the integration is required to stop'\n        ]\n    },\n    {\n        'tag': '@param state state at the beginning of the next step',\n        'alternatives': [\n            '@param state representing the state at the start of the next step',\n            '@param state which denotes the state at the beginning of the next step',\n            '@param state indicating the initial state for the next step'\n        ]\n    },\n    {\n        'tag': '@return reset state (may by the same as initial state if only\\nderivatives should be reset), or null if nothing is reset',\n        'alternatives': [\n            '@return reset state (possibly identical to initial state if only derivatives need to be reset), or null if no resetting is required',\n            '@return reset state (could be the same as the initial state if only derivatives need resetting), or null if no reset is performed',\n            '@return reset state (potentially matching initial state if only derivatives are reset), or null if no reset is carried out'\n        ]\n    },\n    {\n        'tag': '@param handler event handler',\n        'alternatives': [\n            '@param handler for events',\n            '@param event handler',\n            '@param object for handling events'\n        ]\n    },\n    {\n        'tag': '@param maxCheckInterval maximal time interval between switching\\nfunction checks (this interval prevents missing sign changes in\\ncase the integration steps becomes very large)',\n        'alternatives': [\n            '@param maxCheckInterval maximum time interval between checks of the switching function (this interval avoids missing sign changes if the integration steps become extremely large)',\n            '@param maxCheckInterval the maximum time interval between evaluations of the switching function (this interval prevents the omission of sign changes when the integration steps become very large)',\n            '@param maxCheckInterval the upper limit on time interval between checks of the switching function (this interval prevents missing sign changes in case the integration steps become very large)'\n        ]\n    },\n    {\n        'tag': '@param convergence convergence threshold in the event time search',\n        'alternatives': [\n            '@param convergence level of convergence in the event time search',\n            '@param convergence threshold for event time search',\n            '@param convergence criterion in the event time search'\n        ]\n    },\n    {\n        'tag': '@param maxIterationCount upper limit of the iteration count in\\nthe event time search',\n        'alternatives': [\n            '@param maxIterationCount maximum number of iterations allowed in the event time search',\n            '@param maxIterationCount the highest allowable iteration count in the event time search',\n            '@param maxIterationCount the maximum limit of iterations in the event time search'\n        ]\n    },\n    {\n        'tag': '@param solver Root-finding algorithm to use to detect state events',\n        'alternatives': [\n            '@param solver root-finding method employed for identifying state events',\n            '@param solver used for root-finding to detect state events',\n            '@param solver for root-finding to discover state events'\n        ]\n    },\n    {\n        'tag': '@param initialState initial time, state vector and derivative',\n        'alternatives': [\n            '@param initialState initial time, state vector, and derivative',\n            '@param initialState at the start: time, state vector, and derivative',\n            '@param initialState consisting of initial time, state vector, and derivative'\n        ]\n    },\n    {\n        'tag': '@param finalTime target time for the integration',\n        'alternatives': [\n            '@param finalTime desired time for the integration',\n            '@param finalTime indicating the intended time for the integration',\n            '@param finalTime representing the target time for the integration'\n        ]\n    },\n    {\n        'tag': '@param state current value of the independent <i>time</i> variable, state vector\\nand derivative',\n        'alternatives': [\n            '@param state current value of the independent <i>time</i> variable, state vector, and derivative',\n            '@param state representing the current value of the independent <i>time</i> variable, state vector, and derivative',\n            '@param state indicating the present value of the independent <i>time</i> variable, state vector, and derivative'\n        ]\n    },\n    {\n        'tag': '@return value of the g switching function',\n        'alternatives': [\n            '@return value of the g switching function',\n            '@return output of the g switching function',\n            '@return result of the g switching function'\n        ]\n    },\n    {\n        'tag': '@param increasing if true, the value of the switching function increases\\nwhen times increases around event (note that increase is measured with respect\\nto physical time, not with respect to integration which may go backward in time)',\n        'alternatives': [\n            '@param increasing if set to true, the switching function value rises when time increases around the event (note that this increase is measured in terms of physical time, not integration which might go backward in time)',\n            '@param increasing if true, the switching function value grows as time increases around the event (note that increase is measured relative to physical time, not to the integration which could potentially go backward in time)',\n            '@param increasing marking whether the switching function value increases if time increases around the event (note that increase is measured with respect to physical time, not with respect to integration which may go backward in time)'\n        ]\n    },\n    {\n        'tag': '@return indication of what the integrator should do next, this\\nvalue must be one of {@link Action#STOP}, {@link Action#RESET_STATE},\\n{@link Action#RESET_DERIVATIVES} or {@link Action#CONTINUE}',\n        'alternatives': [\n            '@return indication of the next action to be performed by the integrator, this\\nvalue should be one of {@link Action#STOP}, {@link Action#RESET_STATE},\\n{@link Action#RESET_DERIVATIVES} or {@link Action#CONTINUE}',\n            '@return instruction of what the integrator should do next, this\\nvalue should be one of {@link Action#STOP}, {@link Action#RESET_STATE},\\n{@link Action#RESET_DERIVATIVES} or {@link Action#CONTINUE}',\n            '@return description of what the integrator should do next, this\\nvalue must be one of {@link Action#STOP}, {@link Action#RESET_STATE},\\n{@link Action#RESET_DERIVATIVES} or {@link Action#CONTINUE}'\n        ]\n    },\n    {\n        'tag': '@param t0 start value of the independent <i>time</i> variable',\n        'alternatives': [\n            '@param t0 initial value of the independent <i>time</i> variable',\n            '@param t0 representing the starting value of the independent <i>time</i> variable',\n            '@param t0 indicating the initial value of the independent <i>time</i> variable'\n        ]\n    },\n    {\n        'tag': '@param y0 array containing the start value of the state vector',\n        'alternatives': [\n            '@param y0 array holding the initial value of the state vector',\n            '@param y0 representing the starting value of the state vector',\n            '@param y0 indicating the initial value of the state vector'\n        ]\n    },\n    {\n        'tag': '@param t target time for the integration',\n        'alternatives': [\n            '@param t desired time for the integration',\n            '@param t indicating the intended time for the integration',\n            '@param t representing the target time for the integration'\n        ]\n    },\n    {\n        'tag': '@param t current value of the independent <i>time</i> variable',\n        'alternatives': [\n            '@param t present value of the independent <i>time</i> variable',\n            '@param t representing the current value of the independent <i>time</i> variable',\n            '@param t indicating the current value of the independent <i>time</i> variable'\n        ]\n    },\n    {\n        'tag': '@param y array containing the current value of the state vector',\n        'alternatives': [\n            '@param y array holding the current value of the state vector',\n            '@param y indicating the present value of the state vector',\n            '@param y representing the current value of the state vector'\n        ]\n    },\n    {\n        'tag': '@return value of the g switching function',\n        'alternatives': [\n            '@return value of the g switching function',\n            '@return output of the g switching function',\n            '@return result of the g switching function'\n        ]\n    },\n    {\n        'tag': '@param t current value of the independent <i>time</i> variable',\n        'alternatives': [\n            '@param t present value of the independent <i>time</i> variable',\n            '@param t representing the current value of the independent <i>time</i> variable',\n            '@param t indicating the current value of the independent <i>time</i> variable'\n        ]\n    }\n]"