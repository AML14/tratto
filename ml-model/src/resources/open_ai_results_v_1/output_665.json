"output = [\n  {\n    'tag': '@return the lowest value with non-zero probability.',\n    'alternatives': [\n      '@return the minimum value with non-zero probability.',\n      '@return the smallest value with non-zero probability.',\n      '@return the value having the lowest probability that is not zero.',\n      '@return the value with the minimum non-zero probability.',\n      '@return the value having the least probability that is not zero.'\n    ]\n  },\n  {\n    'tag': '@return the highest value with non-zero probability.',\n    'alternatives': [\n      '@return the maximum value with non-zero probability.',\n      '@return the largest value with non-zero probability.',\n      '@return the value having the highest probability that is not zero.',\n      '@return the value with the maximum non-zero probability.',\n      '@return the value having the greatest probability that is not zero.'\n    ]\n  },\n  {\n    'tag': '@param singletons array of random variable values.',\n    'alternatives': [\n      '@param singletons an array containing values of random variables.',\n      '@param singletons an array of random variable values.',\n      '@param singletons the array storing values of random variables.',\n      '@param singletons an array that holds values of random variables.',\n      '@param singletons a collection of values for random variables.'\n    ]\n  },\n  {\n    'tag': '@param probabilities array of probabilities.',\n    'alternatives': [\n      '@param probabilities an array containing probabilities.',\n      '@param probabilities an array of probability values.',\n      '@param probabilities the array storing probabilities.',\n      '@param probabilities an array that holds probability values.',\n      '@param probabilities a collection of probability values.'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if\\n{@code singletons.length != probabilities.length}',\n    'alternatives': [\n      '@throws DimensionMismatchException if the length of singletons does not equal the length of probabilities.',\n      '@throws DimensionMismatchException when the size of singletons is not equal to the size of probabilities.',\n      '@throws DimensionMismatchException if the number of elements in singletons does not match the number of elements in probabilities.',\n      '@throws DimensionMismatchException when the lengths of singletons and probabilities differ.',\n      '@throws DimensionMismatchException if the count of elements in singletons is not the same as the count of elements in probabilities.'\n    ]\n  },\n  {\n    'tag': '@throws NotPositiveException if any of the probabilities are negative.',\n    'alternatives': [\n      '@throws NotPositiveException if there exists a negative probability value.',\n      '@throws NotPositiveException when any of the probabilities are less than or equal to zero.',\n      '@throws NotPositiveException if any of the probabilities have a negative value.',\n      '@throws NotPositiveException when at least one probability is negative.',\n      '@throws NotPositiveException if any of the probabilities are not positive.'\n    ]\n  },\n  {\n    'tag': '@throws NotFiniteNumberException if any of the probabilities are infinite.',\n    'alternatives': [\n      '@throws NotFiniteNumberException if there exists an infinite probability value.',\n      '@throws NotFiniteNumberException when any of the probabilities are infinite.',\n      '@throws NotFiniteNumberException if any of the probabilities have an infinite value.',\n      '@throws NotFiniteNumberException when at least one probability is infinite.',\n      '@throws NotFiniteNumberException if any of the probabilities are not finite.'\n    ]\n  },\n  {\n    'tag': '@throws NotANumberException if any of the probabilities are NaN.',\n    'alternatives': [\n      '@throws NotANumberException if there exists a NaN probability value.',\n      '@throws NotANumberException when any of the probabilities are NaN.',\n      '@throws NotANumberException if any of the probabilities have a NaN value.',\n      '@throws NotANumberException when at least one probability is NaN.',\n      '@throws NotANumberException if any of the probabilities are not a number.'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException all of the probabilities are 0.',\n    'alternatives': [\n      '@throws MathArithmeticException when all probabilities are equal to 0.',\n      '@throws MathArithmeticException when every probability has a value of 0.',\n      '@throws MathArithmeticException if all the probabilities are zero.',\n      '@throws MathArithmeticException when none of the probabilities are non-zero.',\n      '@throws MathArithmeticException if all the probabilities are equal to 0.'\n    ]\n  },\n  {\n    'tag': '@param rng random number generator.',\n    'alternatives': [\n      '@param rng the random number generator.',\n      '@param rng the generator of random numbers.',\n      '@param rng the source of random numbers.',\n      '@param rng an object that generates random numbers.',\n      '@param rng a random number generator instance.'\n    ]\n  },\n  {\n    'tag': '@param singletons array of random variable values.',\n    'alternatives': [\n      '@param singletons an array containing values of random variables.',\n      '@param singletons an array of random variable values.',\n      '@param singletons the array storing values of random variables.',\n      '@param singletons an array that holds values of random variables.',\n      '@param singletons a collection of values for random variables.'\n    ]\n  },\n  {\n    'tag': '@param probabilities array of probabilities.',\n    'alternatives': [\n      '@param probabilities an array containing probabilities.',\n      '@param probabilities an array of probability values.',\n      '@param probabilities the array storing probabilities.',\n      '@param probabilities an array that holds probability values.',\n      '@param probabilities a collection of probability values.'\n    ]\n  },\n  {\n    'tag': '@throws DimensionMismatchException if\\n{@code singletons.length != probabilities.length}',\n    'alternatives': [\n      '@throws DimensionMismatchException if the length of singletons does not equal the length of probabilities.',\n      '@throws DimensionMismatchException when the size of singletons is not equal to the size of probabilities.',\n      '@throws DimensionMismatchException if the number of elements in singletons does not match the number of elements in probabilities.',\n      '@throws DimensionMismatchException when the lengths of singletons and probabilities differ.',\n      '@throws DimensionMismatchException if the count of elements in singletons is not the same as the count of elements in probabilities.'\n    ]\n  },\n  {\n    'tag': '@throws NotPositiveException if any of the probabilities are negative.',\n    'alternatives': [\n      '@throws NotPositiveException if there exists a negative probability value.',\n      '@throws NotPositiveException when any of the probabilities are less than or equal to zero.',\n      '@throws NotPositiveException if any of the probabilities have a negative value.',\n      '@throws NotPositiveException when at least one probability is negative.',\n      '@throws NotPositiveException if any of the probabilities are not positive.'\n    ]\n  },\n  {\n    'tag': '@throws NotFiniteNumberException if any of the probabilities are infinite.',\n    'alternatives': [\n      '@throws NotFiniteNumberException if there exists an infinite probability value.',\n      '@throws NotFiniteNumberException when any of the probabilities are infinite.',\n      '@throws NotFiniteNumberException if any of the probabilities have an infinite value.',\n      '@throws NotFiniteNumberException when at least one probability is infinite.',\n      '@throws NotFiniteNumberException if any of the probabilities are not finite.'\n    ]\n  },\n  {\n    'tag': '@throws NotANumberException if any of the probabilities are NaN.',\n    'alternatives': [\n      '@throws NotANumberException if there exists a NaN probability value.',\n      '@throws NotANumberException when any of the probabilities are NaN.',\n      '@throws NotANumberException if any of the probabilities have a NaN value.',\n      '@throws NotANumberException when at least one probability is NaN.',\n      '@throws NotANumberException if any of the probabilities are not a number.'\n    ]\n  },\n  {\n    'tag': '@throws MathArithmeticException all of the probabilities are 0.',\n    'alternatives': [\n      '@throws MathArithmeticException when all probabilities are equal to 0.',\n      '@throws MathArithmeticException when every probability has a value of 0.',\n      '@throws MathArithmeticException if all the probabilities are zero.',\n      '@throws MathArithmeticException when none of the probabilities are non-zero.',\n      '@throws MathArithmeticException if all the probabilities are equal to 0.'\n    ]\n  },\n  {\n    'tag': '@param rng random number generator used for sampling',\n    'alternatives': [\n      '@param rng the random number generator used for sampling',\n      '@param rng the generator of random numbers used for sampling',\n      '@param rng the source of random numbers used for sampling',\n      '@param rng an object that generates random numbers used for sampling',\n      '@param rng a random number generator instance used for sampling'\n    ]\n  },\n  {\n    'tag': '@param data input dataset',\n    'alternatives': [\n      '@param data the input dataset',\n      '@param data the dataset to be used as input',\n      '@param data the provided input dataset',\n      '@param data the dataset that serves as input',\n      '@param data the input data to be processed'\n    ]\n  },\n  {\n    'tag': '@param data input dataset',\n    'alternatives': [\n      '@param data the input dataset',\n      '@param data the dataset to be used as input',\n      '@param data the provided input dataset',\n      '@param data the dataset that serves as input',\n      '@param data the input data to be processed'\n    ]\n  },\n  {\n    'tag': '@param x the point at which the PMF is evaluated',\n    'alternatives': [\n      '@param x the point where the PMF is evaluated',\n      '@param x the point at which the probability mass function is computed',\n      '@param x the value at which the PMF is calculated',\n      '@param x the value for which the PMF is determined',\n      '@param x the specific value at which the PMF is evaluated'\n    ]\n  },\n  {\n    'tag': '@return the value of the probability mass function at {@code x}',\n    'alternatives': [\n      '@return the calculated value of the probability mass function at {@code x}',\n      '@return the computed result of the probability mass function at {@code x}',\n      '@return the outcome of the probability mass function at {@code x}',\n      '@return the value obtained from evaluating the probability mass function at {@code x}',\n      '@return the result of the probability mass function evaluated at {@code x}'\n    ]\n  },\n  {\n    'tag': '@param x the point at which the CDF is evaluated',\n    'alternatives': [\n      '@param x the point where the CDF is evaluated',\n      '@param x the point at which the cumulative distribution function is computed',\n      '@param x the value at which the CDF is calculated',\n      '@param x the value for which the CDF is determined',\n      '@param x the specific value at which the CDF is evaluated'\n    ]\n  },\n  {\n    'tag': '@param x0 the exclusive lower bound',\n    'alternatives': [\n      '@param x0 the lower bound (exclusive)',\n      '@param x0 the lower limit (exclusive)',\n      '@param x0 the smallest value not included',\n      '@param x0 the value just below the smallest allowed value',\n      '@param x0 the value below which all values are not considered'\n    ]\n  },\n  {\n    'tag': '@param x1 the inclusive upper bound',\n    'alternatives': [\n      '@param x1 the upper bound (inclusive)',\n      '@param x1 the upper limit (inclusive)',\n      '@param x1 the largest value included',\n      '@param x1 the value equal to or above the highest allowed value',\n      '@param x1 the value at or beyond which all values are considered'\n    ]\n  }\n]"