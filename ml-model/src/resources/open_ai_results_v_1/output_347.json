"output = [\n  {\n    'tag': '@return true if empty',\n    'alternatives': [\n      '@return true if the container is empty',\n      '@return true if the object is empty',\n      '@return true if there are no elements',\n      '@return true if the collection has no elements',\n      '@return true if there are no items'\n    ]\n  },\n  {\n    'tag': '@param key the key to retrieve',\n    'alternatives': [\n      '@param key the key to fetch',\n      '@param key the key to get',\n      '@param key the key to obtain',\n      '@param key the key to access',\n      '@param key the key to obtain the value for'\n    ]\n  },\n  {\n    'tag': '@return the associated value',\n    'alternatives': [\n      '@return the corresponding value',\n      '@return the value linked to it',\n      '@return the value that goes along with it',\n      '@return the value associated with it',\n      '@return the value that is related to it'\n    ]\n  },\n  {\n    'tag': '@param key the key to check',\n    'alternatives': [\n      '@param key the key to verify',\n      '@param key the key to test',\n      '@param key the key to inspect',\n      '@param key the key to examine',\n      '@param key the key to validate'\n    ]\n  },\n  {\n    'tag': '@return true if found',\n    'alternatives': [\n      '@return true if located',\n      '@return true if discovered',\n      '@return true if detected',\n      '@return true if identified',\n      '@return true if encountered'\n    ]\n  },\n  {\n    'tag': '@param value the value to check',\n    'alternatives': [\n      '@param value the value to verify',\n      '@param value the value to test',\n      '@param value the value to inspect',\n      '@param value the value to examine',\n      '@param value the value to validate'\n    ]\n  },\n  {\n    'tag': '@return true if found',\n    'alternatives': [\n      '@return true if located',\n      '@return true if discovered',\n      '@return true if detected',\n      '@return true if identified',\n      '@return true if encountered'\n    ]\n  },\n  {\n    'tag': '@param key the key to use',\n    'alternatives': [\n      '@param key the key to utilize',\n      '@param key the key to employ',\n      '@param key the key to apply',\n      '@param key the key to implement',\n      '@param key the key to put into action'\n    ]\n  },\n  {\n    'tag': '@param value the value to use',\n    'alternatives': [\n      '@param value the value to utilize',\n      '@param value the value to employ',\n      '@param value the value to apply',\n      '@param value the value to implement',\n      '@param value the value to put into action'\n    ]\n  },\n  {\n    'tag': '@return the previous mapping for the key',\n    'alternatives': [\n      '@return the previous association for the key',\n      '@return the previous connection for the key',\n      '@return the previous relation for the key',\n      '@return the previous link for the key',\n      '@return the previous mapping for the specified key'\n    ]\n  },\n  {\n    'tag': '@param key the key to remove',\n    'alternatives': [\n      '@param key the key to delete',\n      '@param key the key to eliminate',\n      '@param key the key to erase',\n      '@param key the key to discard',\n      '@param key the key to get rid of'\n    ]\n  },\n  {\n    'tag': '@return the previous value at this key',\n    'alternatives': [\n      '@return the previous value for this key',\n      '@return the previous entry linked to this key',\n      '@return the previous element associated with this key',\n      '@return the previous item mapped to this key',\n      '@return the previous value assigned to this key'\n    ]\n  },\n  {\n    'tag': '@return the key set',\n    'alternatives': [\n      '@return the set of keys',\n      '@return the collection of keys',\n      '@return the keys in the collection',\n      '@return the set containing all the keys',\n      '@return the keys that are currently stored'\n    ]\n  },\n  {\n    'tag': '@return the values',\n    'alternatives': [\n      '@return the set of values',\n      '@return the collection of values',\n      '@return the values in the collection',\n      '@return the set containing all the values',\n      '@return the values that are currently stored'\n    ]\n  },\n  {\n    'tag': '@return the entry set',\n    'alternatives': [\n      '@return the set of entries',\n      '@return the collection of entries',\n      '@return the entries in the collection',\n      '@return the set containing all the entries',\n      '@return the entries that are currently stored'\n    ]\n  },\n  {\n    'tag': '@param map the map of entries to add',\n    'alternatives': [\n      '@param map the map of entries to insert',\n      '@param map the map of entries to include',\n      '@param map the map of entries to append',\n      '@param map the map of entries to put',\n      '@param map the map of entries to attach'\n    ]\n  },\n  {\n    'tag': '@param obj the object to compare to',\n    'alternatives': [\n      '@param obj the object to compare against',\n      '@param obj the object to check against',\n      '@param obj the object to test against',\n      '@param obj the object to evaluate against',\n      '@param obj the object to match up with'\n    ]\n  },\n  {\n    'tag': '@return true if equal',\n    'alternatives': [\n      '@return true if the same',\n      '@return true if identical',\n      '@return true if equivalent',\n      '@return true if matching',\n      '@return true if corresponding'\n    ]\n  },\n  {\n    'tag': '@return the hash code',\n    'alternatives': [\n      '@return the hash value',\n      '@return the hash result',\n      '@return the hash output',\n      '@return the hash sum',\n      '@return the hash number'\n    ]\n  },\n  {\n    'tag': '@param r the code to execute atomically',\n    'alternatives': [\n      '@param r the code to run atomically',\n      '@param r the code to execute with atomicity',\n      '@param r the code to perform atomically',\n      '@param r the code to run with atomic operation',\n      '@param r the code to execute with synchronization'\n    ]\n  },\n  {\n    'tag': '@param numBuckets the number of buckets for this map',\n    'alternatives': [\n      '@param numBuckets the count of buckets for this map',\n      '@param numBuckets the quantity of buckets for this map',\n      '@param numBuckets the size of the bucket array for this map',\n      '@param numBuckets the total number of buckets allocated for this map',\n      '@param numBuckets the number of storage compartments for this map'\n    ]\n  },\n  {\n    'tag': '@return the decorated map',\n    'alternatives': [\n      '@return the enhanced map',\n      '@return the improved map',\n      '@return the modified map',\n      '@return the adorned map',\n      '@return the map with added features'\n    ]\n  },\n  {\n    'tag': '@return the size',\n    'alternatives': [\n      '@return the count',\n      '@return the number',\n      '@return the total',\n      '@return the quantity',\n      '@return the amount'\n    ]\n  },\n  {\n    'tag': '@return true if the map is currently size zero',\n    'alternatives': [\n      '@return true if the map is currently empty',\n      '@return true if the map has no elements',\n      '@return true if the map has a size of zero',\n      '@return true if the map is currently without entries',\n      '@return true if the map has precisely zero entries'\n    ]\n  },\n  {\n    'tag': '@param key the key to search for',\n    'alternatives': [\n      '@param key the key to look for',\n      '@param key the key to find',\n      '@param key the key to seek',\n      '@param key the key to locate',\n      '@param key the key to search'\n    ]\n  }\n]"