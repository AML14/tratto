"output = [\n  {\n    'tag': '@return the current collection size',\n    'alternatives': [\n      '@return the size of the collection at the moment',\n      '@return the current size of the collection',\n      '@return the size of the collection right now',\n      '@return the size of the current collection',\n      '@return the size of the collection at present'\n    ]\n  },\n  {\n    'tag': '@param coll the collection to wrap',\n    'alternatives': [\n      '@param coll the collection to encapsulate',\n      '@param coll the collection to surround',\n      '@param coll the wrapped collection',\n      '@param coll the collection to enclose',\n      '@param coll the collection to envelop'\n    ]\n  },\n  {\n    'tag': '@return true if the underlying iterator has more elements',\n    'alternatives': [\n      '@return true if there are additional elements in the underlying iterator',\n      '@return true if there are more elements in the iterator below',\n      '@return true if there are still elements in the underlying iterator',\n      '@return true if there are more elements in the iterator underneath',\n      '@return true if there are further elements in the underlying iterator'\n    ]\n  },\n  {\n    'tag': '@return the next element from the underlying iterator.',\n    'alternatives': [\n      '@return the subsequent element from the underlying iterator.',\n      '@return the element that follows from the underlying iterator.',\n      '@return the element next in line from the underlying iterator.',\n      '@return the next element coming from the underlying iterator.',\n      '@return the upcoming element from the underlying iterator.'\n    ]\n  },\n  {\n    'tag': '@throws java.util.NoSuchElementException if the underlying iterator has\\nno more elements',\n    'alternatives': [\n      '@throws java.util.NoSuchElementException in case the underlying iterator does\nnot contain any more elements',\n      '@throws java.util.NoSuchElementException if there are no more elements in the\nunderlying iterator',\n      '@throws java.util.NoSuchElementException when the underlying iterator has\nno further elements',\n      '@throws java.util.NoSuchElementException if the underlying iterator runs\nout of elements',\n      '@throws java.util.NoSuchElementException if the underlying iterator is devoid\nof additional elements'\n    ]\n  },\n  {\n    'tag': '@return the underlying iterator',\n    'alternatives': [\n      '@return the iterator that is beneath',\n      '@return the iterator that lies underneath',\n      '@return the iterator located below',\n      '@return the iterator that is underlying',\n      '@return the iterator that is beneath the surface'\n    ]\n  },\n  {\n    'tag': '@param iterator the new underlying iterator',\n    'alternatives': [\n      '@param iterator the updated underlying iterator',\n      '@param iterator the fresh underlying iterator',\n      '@param iterator the replacement underlying iterator',\n      '@param iterator the modified underlying iterator',\n      '@param iterator the new iterator that is underlying'\n    ]\n  },\n  {\n    'tag': '@param iterator the iterator to use',\n    'alternatives': [\n      '@param iterator the iterator to employ',\n      '@param iterator the iterator to utilize',\n      '@param iterator the iterator to make use of',\n      '@param iterator the iterator to apply',\n      '@param iterator the iterator to utilize'\n    ]\n  },\n  {\n    'tag': \"@return true if the single object hasn't been returned yet\",\n    'alternatives': [\n      \"@return true if the individual object hasn't been returned already\",\n      \"@return true if the solitary object hasn't been returned yet\",\n      \"@return true if the one and only object hasn't been returned yet\",\n      \"@return true if the unique object hasn't been returned yet\",\n      \"@return true if the lone object hasn't been returned yet\"\n    ]\n  },\n  {\n    'tag': '@return the single object',\n    'alternatives': [\n      '@return the individual object',\n      '@return the solitary object',\n      '@return the one and only object',\n      '@return the unique object',\n      '@return the lone object'\n    ]\n  },\n  {\n    'tag': '@throws NoSuchElementException if the single object has already\\n   been returned',\n    'alternatives': [\n      '@throws NoSuchElementException if the individual object has already\\n   been returned',\n      '@throws NoSuchElementException if the solitary object has already\\n   been returned',\n      '@throws NoSuchElementException if the one and only object has already\\n   been returned',\n      '@throws NoSuchElementException if the unique object has already\\n   been returned',\n      '@throws NoSuchElementException if the lone object has already\\n   been returned'\n    ]\n  },\n  {\n    'tag': '@throws IllegalStateException if the {@code next} method has not\\n       yet been called, or the {@code remove} method has already\\n       been called after the last call to the {@code next}\\n       method.',\n    'alternatives': [\n      '@throws IllegalStateException if the {@code next} method has not\\n       been invoked yet, or the {@code remove} method has already\\n       been invoked after the last call to the {@code next}\\n       method.',\n      '@throws IllegalStateException if the {@code next} method has not\\n       been called yet, or the {@code remove} method has already\\n       been called subsequent to the last invocation of the {@code next}\\n       method.',\n      '@throws IllegalStateException if the {@code next} method has not\\n       yet been called, or the {@code remove} method has already\\n       been invoked after the last call to the {@code next}\\n       method.',\n      '@throws IllegalStateException if the {@code next} method has not\\n       been invoked yet, or the {@code remove} method has already\\n       been called after the last invocation of the {@code next}\\n       method.',\n      '@throws IllegalStateException if the {@code next} method has not\\n       been called yet, or the {@code remove} method has already\\n       been invoked subsequent to the last call to the {@code next}\\n       method.'\n    ]\n  },\n  {\n    'tag': '@throws UnsupportedOperationException if remove is not supported',\n    'alternatives': [\n      '@throws UnsupportedOperationException if the removal operation is not supported',\n      '@throws UnsupportedOperationException if the remove function is not supported',\n      '@throws UnsupportedOperationException if removal is not accessible',\n      '@throws UnsupportedOperationException if the remove operation is not enabled',\n      '@throws UnsupportedOperationException if delete is not allowed'\n    ]\n  },\n  {\n    'tag': '@param object the single object to return from the iterator',\n    'alternatives': [\n      '@param object the individual object to yield from the iterator',\n      '@param object the solitary object to produce from the iterator',\n      '@param object the one and only object to generate from the iterator',\n      '@param object the unique object to output from the iterator',\n      '@param object the lone object to provide from the iterator'\n    ]\n  },\n  {\n    'tag': '@param object the single object to return from the iterator',\n    'alternatives': [\n      '@param object the individual object to yield from the iterator',\n      '@param object the solitary object to produce from the iterator',\n      '@param object the one and only object to generate from the iterator',\n      '@param object the unique object to output from the iterator',\n      '@param object the lone object to provide from the iterator'\n    ]\n  },\n  {\n    'tag': '@param obj the object to add',\n    'alternatives': [\n      '@param obj the object to include',\n      '@param obj the object to insert',\n      '@param obj the object to append',\n      '@param obj the object to put',\n      '@param obj the object to incorporate'\n    ]\n  },\n  {\n    'tag': '@throws UnsupportedOperationException if the underlying iterator is not of\\ntype {@link ListIterator}',\n    'alternatives': [\n      '@throws UnsupportedOperationException if the underlying iterator is not of\\ntype {@link ListIterator}',\n      '@throws UnsupportedOperationException if the iterator below is not of\\ntype {@link ListIterator}',\n      '@throws UnsupportedOperationException if the underlying iterator is not of\\ntype {@link ListIterator}',\n      '@throws UnsupportedOperationException if the iterator beneath is not of\\ntype {@link ListIterator}',\n      '@throws UnsupportedOperationException if the underlying iterator is not of\\ntype {@link ListIterator}'\n    ]\n  },\n  {\n    'tag': '@return true if there are more elements',\n    'alternatives': [\n      '@return true if there are additional elements',\n      '@return true if there are further elements',\n      '@return true if there are extra elements',\n      '@return true if there are additional items',\n      '@return true if there are further items'\n    ]\n  },\n  {\n    'tag': '@return true if there are previous elements',\n    'alternatives': [\n      '@return true if there are preceding elements',\n      '@return true if there are earlier elements',\n      '@return true if there are former elements',\n      '@return true if there are previous items',\n      '@return true if there are earlier items'\n    ]\n  },\n  {\n    'tag': '@return the next element from the iterator',\n    'alternatives': [\n      '@return the subsequent element from the iterator',\n      '@return the element that follows from the iterator',\n      '@return the element that comes next from the iterator',\n      '@return the next element in line from the iterator',\n      '@return the upcoming element from the iterator'\n    ]\n  },\n  {\n    'tag': '@throws NoSuchElementException if there are no more elements',\n    'alternatives': [\n      '@throws NoSuchElementException if there are no additional elements',\n      '@throws NoSuchElementException if there are no further elements',\n      '@throws NoSuchElementException if there are no more items',\n      '@throws NoSuchElementException if there are no extra elements',\n      '@throws NoSuchElementException if there are no further items'\n    ]\n  },\n  {\n    'tag': '@return the index of the next element',\n    'alternatives': [\n      '@return the index of the subsequent element',\n      '@return the index of the element that follows',\n      '@return the index of the element next in line',\n      '@return the index of the upcoming element',\n      '@return the index of the element that comes next'\n    ]\n  },\n  {\n    'tag': '@return the previous element',\n    'alternatives': [\n      '@return the preceding element',\n      '@return the earlier element',\n      '@return the former element',\n      '@return the last element',\n      '@return the element that came before'\n    ]\n  },\n  {\n    'tag': '@throws NoSuchElementException if there are no previous elements',\n    'alternatives': [\n      '@throws NoSuchElementException if there are no preceding elements',\n      '@throws NoSuchElementException if there are no earlier elements',\n      '@throws NoSuchElementException if there are no former elements',\n      '@throws NoSuchElementException if there are no last elements',\n      '@throws NoSuchElementException if there are no elements that came before'\n    ]\n  },\n  {\n    'tag': '@return the index of the previous element',\n    'alternatives': [\n      '@return the index of the preceding element',\n      '@return the index of the earlier element',\n      '@return the index of the former element',\n      '@return the index of the last element',\n      '@return the index of the element that came before'\n    ]\n  }\n]"