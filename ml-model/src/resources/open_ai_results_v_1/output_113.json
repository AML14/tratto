"[\n  {\n    'tag': '@return {@code true} if the each of the components are equal\\nwithin the allowed absolute error.',\n    'alternatives': [\n      '@return {@code true} if all the elements are identical\\nwithin the permissible absolute margin of error.',\n      '@return returns {@code true} if each of the constituents are equal\\nwithin the accepted absolute tolerance.',\n      '@return {@code true} if every component is equivalent\\nwith an allowed absolute error.',\n      '@return {@code true} if all components are the same\\nwithin the allowed absolute error.',\n      '@return {@code true} if each element is equal\\nwithin the given absolute error range.'\n    ]\n  },\n  {\n    'tag': '@param eps Tolerance (absolute error).',\n    'alternatives': [\n      '@param eps Absolute tolerance (error).',\n      '@param eps Maximum allowed absolute error.',\n      '@param eps Permissible absolute error.',\n      '@param eps Error tolerance (absolute).',\n      '@param eps Absolute precision (error).'\n    ]\n  },\n  {\n    'tag': '@param eps Tolerance (absolute error).',\n    'alternatives': [\n      '@param eps Absolute tolerance (error).',\n      '@param eps Maximum allowed absolute error.',\n      '@param eps Permissible absolute error.',\n      '@param eps Error tolerance (absolute).',\n      '@param eps Absolute precision (error).'\n    ]\n  },\n  {\n    'tag': '@return {@code true} if the scalar part of the quaternion is zero.',\n    'alternatives': [\n      '@return {@code true} if the quaternion has zero scalar component.',\n      '@return {@code true} if the scalar part of the quaternion is equal to zero.',\n      '@return {@code true} if the quaternion's scalar part is zero.',\n      '@return {@code true} if the quaternion's scalar component is zero.',\n      '@return {@code true} if the scalar part of the quaternion equals zero.'\n    ]\n  },\n  {\n    'tag': '@return the unit quaternion with positive scalar part.',\n    'alternatives': [\n      '@return the normalized quaternion with positive scalar component.',\n      '@return the quaternion with positive scalar part normalized.',\n      '@return the quaternion with a positive scalar part and unit length.',\n      '@return the quaternion whose scalar part is positive and unitary.',\n      '@return the quaternion that has a positive scalar part and is unitary.'\n    ]\n  },\n  {\n    'tag': '@return the inverse.',\n    'alternatives': [\n      '@return the reciprocal.',\n      '@return the opposite.',\n      '@return the negation.',\n      '@return the inverse value.',\n      '@return the flipped value.'\n    ]\n  },\n  {\n    'tag': '@throws ZeroException if the norm (squared) of the quaternion is zero.',\n    'alternatives': [\n      '@throws ZeroException when the squared norm of the quaternion is zero.',\n      '@throws ZeroException if the modulus (squared) of the quaternion is zero.',\n      '@throws ZeroException if the norm squared of the quaternion is zero.',\n      '@throws ZeroException if the squared magnitude of the quaternion is zero.',\n      '@throws ZeroException if the quaternion has zero squared norm.'\n    ]\n  },\n  {\n    'tag': '@return the scalar part.',\n    'alternatives': [\n      '@return the real part.',\n      '@return the real component.',\n      '@return the part that represents the scalar.',\n      '@return the part that corresponds to the scalar.',\n      '@return the scalar component.'\n    ]\n  },\n  {\n    'tag': '@return the first component of the vector part.',\n    'alternatives': [\n      '@return the initial element of the vector component.',\n      '@return the first element of the vector part.',\n      '@return the initial component of the vector part.',\n      '@return the first constituent of the vector component.',\n      '@return the first element of the vector section.'\n    ]\n  },\n  {\n    'tag': '@return the second component of the vector part.',\n    'alternatives': [\n      '@return the second element of the vector component.',\n      '@return the second element of the vector part.',\n      '@return the second component of the vector part.',\n      '@return the second constituent of the vector component.',\n      '@return the second element of the vector section.'\n    ]\n  },\n  {\n    'tag': '@return the third component of the vector part.',\n    'alternatives': [\n      '@return the third element of the vector component.',\n      '@return the third element of the vector part.',\n      '@return the third component of the vector part.',\n      '@return the third constituent of the vector component.',\n      '@return the third element of the vector section.'\n    ]\n  },\n  {\n    'tag': '@return the scalar part.',\n    'alternatives': [\n      '@return the real part.',\n      '@return the real component.',\n      '@return the part that represents the scalar.',\n      '@return the part that corresponds to the scalar.',\n      '@return the scalar component.'\n    ]\n  },\n  {\n    'tag': '@return the vector part.',\n    'alternatives': [\n      '@return the imaginary part.',\n      '@return the imaginary component.',\n      '@return the part that represents the vector.',\n      '@return the part that corresponds to the vector.',\n      '@return the vector component.'\n    ]\n  },\n  {\n    'tag': '@param alpha Scalar factor.',\n    'alternatives': [\n      '@param alpha Scale factor.',\n      '@param alpha Multiplicative factor.',\n      '@param alpha Scalar multiplier.',\n      '@param alpha Scalar coefficient.',\n      '@param alpha Scalar scaling factor.'\n    ]\n  },\n  {\n    'tag': '@return a scaled quaternion.',\n    'alternatives': [\n      '@return the quaternion after being scaled.',\n      '@return the quaternion that has been multiplied by a factor.',\n      '@return the quaternion that is adjusted for scaling.',\n      '@return the quaternion after applying scaling.',\n      '@return the quaternion that is multiplied by a scalar.'\n    ]\n  },\n  {\n    'tag': '@param a Scalar component.',\n    'alternatives': [\n      '@param a Real part.',\n      '@param a Real component.',\n      '@param a Scalar constituent.',\n      '@param a Scalar element.',\n      '@param a Scalar part.'\n    ]\n  },\n  {\n    'tag': '@param b First vector component.',\n    'alternatives': [\n      '@param b First element of the vector.',\n      '@param b First element of the vector component.',\n      '@param b First component of the vector.',\n      '@param b First constituent of the vector.',\n      '@param b First element of the vector part.'\n    ]\n  },\n  {\n    'tag': '@param c Second vector component.',\n    'alternatives': [\n      '@param c Second element of the vector.',\n      '@param c Second element of the vector component.',\n      '@param c Second component of the vector.',\n      '@param c Second constituent of the vector.',\n      '@param c Second element of the vector part.'\n    ]\n  },\n  {\n    'tag': '@param d Third vector component.',\n    'alternatives': [\n      '@param d Third element of the vector.',\n      '@param d Third element of the vector component.',\n      '@param d Third component of the vector.',\n      '@param d Third constituent of the vector.',\n      '@param d Third element of the vector part.'\n    ]\n  },\n  {\n    'tag': '@param scalar Scalar part of the quaternion.',\n    'alternatives': [\n      '@param scalar Real component of the quaternion.',\n      '@param scalar Scalar constituent of the quaternion.',\n      '@param scalar Scalar element of the quaternion.',\n      '@param scalar Scalar section of the quaternion.',\n      '@param scalar Scalar value of the quaternion.'\n    ]\n  },\n  {\n    'tag': '@param v Components of the vector part of the quaternion.',\n    'alternatives': [\n      '@param v Elements of the quaternion\\'s vector component.',\n      '@param v Elements of the quaternion\\'s vector section.',\n      '@param v Elements of the quaternion\\'s vector part.',\n      '@param v Vector constituents of the quaternion.',\n      '@param v Vector parts of the quaternion.'\n    ]\n  },\n  {\n    'tag': '@param v Components of the vector part of the pure quaternion.',\n    'alternatives': [\n      '@param v Elements of the pure quaternion\\'s vector component.',\n      '@param v Elements of the pure quaternion\\'s vector section.',\n      '@param v Elements of the pure quaternion\\'s vector part.',\n      '@param v Vector constituents of the pure quaternion.',\n      '@param v Vector parts of the pure quaternion.'\n    ]\n  },\n  {\n    'tag': '@return the absolute value.',\n    'alternatives': [\n      '@return the magnitude.',\n      '@return the absolute magnitude.',\n      '@return the modulus.',\n      '@return the absolute magnitude value.',\n      '@return the absolute modulus.'\n    ]\n  },\n  {\n    'tag': '@param addend Value to be added to this {@code Complex}.',\n    'alternatives': [\n      '@param addend Value to be summed to this {@code Complex}.',\n      '@param addend Value to be included in this {@code Complex}.',\n      '@param addend Value to be added into this {@code Complex}.',\n      '@param addend Value to be appended to this {@code Complex}.',\n      '@param addend Value to be combined with this {@code Complex}.'\n    ]\n  },\n  {\n    'tag': '@return {@code this + addend}.',\n    'alternatives': [\n      '@return {@code this} plus {@code addend}.',\n      '@return the sum of {@code this} and {@code addend}.',\n      '@return the result of adding {@code this} and {@code addend}.',\n      '@return the addition of {@code this} and {@code addend}.',\n      '@return the outcome of combining {@code this} and {@code addend}.'\n    ]\n  }\n]\n"