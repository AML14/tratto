"[\n  {\n    \"tag\": \"@return the tree node containing the smallest element not smaller\\nthan the reference object or null if either the tree is empty or\\nall its elements are smaller than the reference object\",\n    \"alternatives\": [\n      \"@return the node of the tree that holds the minimum value greater than or equal to the reference object, or null if the tree is empty or all its elements are smaller than the reference object\",\n      \"@return the tree node that contains the smallest element greater than or equal to the reference object, or null if the tree is empty or if all its elements are smaller than the reference object\",\n      \"@return the smallest tree node that has an element not less than the reference object, or null if the tree is empty or all its elements are smaller than the reference object\"\n    ]\n  },\n  {\n    \"tag\": \"@return the tree node containing the largest element not larger\\nthan the reference object (in which case the node is guaranteed\\nnot to be empty) or null if either the tree is empty or all its\\nelements are larger than the reference object\",\n    \"alternatives\": [\n      \"@return the node in the tree that holds the maximum value less than or equal to the reference object (in a non-empty tree), or null if the tree is empty or all its elements are larger than the reference object\",\n      \"@return the tree node that contains the largest element not greater than the reference object (guaranteed to be non-empty), or null if the tree is empty or all its elements are larger than the reference object\",\n      \"@return the largest tree node that has an element not greater than the reference object (the node is guaranteed to be non-empty), or null if the tree is empty or all its elements are larger than the reference object\"\n    ]\n  },\n  {\n    \"tag\": \"@throws org.apache.commons.math3.exception.NullArgumentException if\\nany argument is {@code null}.\",\n    \"alternatives\": [\n      \"@throws org.apache.commons.math3.exception.NullArgumentException when any parameter is {@code null}.\",\n      \"@throws org.apache.commons.math3.exception.NullArgumentException if any argument is null.\",\n      \"@throws org.apache.commons.math3.exception.NullArgumentException if any parameter is set to {@code null}.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NotStrictlyPositiveException if {@code degreesOfFreedom <= 0}\",\n    \"alternatives\": [\n      \"@throws NotStrictlyPositiveException in case {@code degreesOfFreedom <= 0}\",\n      \"@throws NotStrictlyPositiveException if the value of {@code degreesOfFreedom} is less than or equal to zero\",\n      \"@throws NotStrictlyPositiveException if the {@code degreesOfFreedom} parameter is not strictly positive\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NotStrictlyPositiveException if {@code degreesOfFreedom <= 0}\",\n    \"alternatives\": [\n      \"@throws NotStrictlyPositiveException in case {@code degreesOfFreedom <= 0}\",\n      \"@throws NotStrictlyPositiveException if the given value of {@code degreesOfFreedom} is less than or equal to zero\",\n      \"@throws NotStrictlyPositiveException if the input parameter {@code degreesOfFreedom} is not strictly positive\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NotStrictlyPositiveException if {@code degreesOfFreedom <= 0}\",\n    \"alternatives\": [\n      \"@throws NotStrictlyPositiveException in case {@code degreesOfFreedom <= 0}\",\n      \"@throws NotStrictlyPositiveException if the provided value of {@code degreesOfFreedom} is less than or equal to zero\",\n      \"@throws NotStrictlyPositiveException if the {@code degreesOfFreedom} parameter is not strictly positive\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NotStrictlyPositiveException if {@code degreesOfFreedom <= 0}\",\n    \"alternatives\": [\n      \"@throws NotStrictlyPositiveException in case {@code degreesOfFreedom <= 0}\",\n      \"@throws NotStrictlyPositiveException if the value of {@code degreesOfFreedom} is less than or equal to zero\",\n      \"@throws NotStrictlyPositiveException if the {@code degreesOfFreedom} parameter is not strictly positive\"\n    ]\n  },\n  {\n    \"tag\": \"@return {@code true}\",\n    \"alternatives\": [\n      \"@return {@code true}\",\n      \"@return the value {@code true}\",\n      \"@return true\"\n    ]\n  },\n  {\n    \"tag\": \"@return a convergence checker that delegates to {@code checker}.\",\n    \"alternatives\": [\n      \"@return a convergence checker that relies on {@code checker}.\",\n      \"@return a convergence checker that uses {@code checker} for its operation.\",\n      \"@return a convergence checker that is based on {@code checker}.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NotStrictlyPositiveException if the number of successes is not positive\",\n    \"alternatives\": [\n      \"@throws NotStrictlyPositiveException if the count of successful outcomes is not strictly positive\",\n      \"@throws NotStrictlyPositiveException if the number of successes is less than or equal to zero\",\n      \"@throws NotStrictlyPositiveException if the value of the number of successes is not strictly positive\"\n    ]\n  },\n  {\n    \"tag\": \"@throws OutOfRangeException if the probability of success is not in the\\nrange {@code [0, 1]}.\",\n    \"alternatives\": [\n      \"@throws OutOfRangeException if the success probability is not within the valid range of {@code [0, 1]}.\",\n      \"@throws OutOfRangeException if the probability of success is not between 0 and 1 (inclusive)\",\n      \"@throws OutOfRangeException if the value of the success probability is outside the range of {@code [0, 1]}.\"\n    ]\n  },\n  {\n    \"tag\": \"@throws NotStrictlyPositiveException if the number of successes is not positive\",\n    \"alternatives\": [\n      \"@throws NotStrictlyPositiveException if the count of successful outcomes is not strictly positive\",\n      \"@throws NotStrictlyPositiveException if the number of successes is less than or equal to zero\",\n      \"@throws NotStrictlyPositiveException if the value of the number of successes is not strictly positive\"\n    ]\n  },\n  {\n    \"tag\": \"@throws OutOfRangeException if the probability of success is not in the\\nrange {@code [0, 1]}.\",\n    \"alternatives\": [\n      \"@throws OutOfRangeException if the success probability is not within the valid range of {@code [0, 1]}.\",\n      \"@throws OutOfRangeException if the probability of success is not between 0 and 1 (inclusive)\",\n      \"@throws OutOfRangeException if the value of the success probability is outside the range of {@code [0, 1]}.\"\n    ]\n  },\n  {\n    \"tag\": \"@return {@code true}\",\n    \"alternatives\": [\n      \"@return {@code true}\",\n      \"@return the boolean value {@code true}\",\n      \"@return true\"\n    ]\n  },\n  {\n    \"tag\": \"@return projected point\",\n    \"alternatives\": [\n      \"@return the point that has been projected\",\n      \"@return the result of the point projection\",\n      \"@return the projected point\"\n    ]\n  },\n  {\n    \"tag\": \"@return real value\",\n    \"alternatives\": [\n      \"@return the actual value\",\n      \"@return the numeric value\",\n      \"@return the real number\"\n    ]\n  },\n  {\n    \"tag\": \"@param a right hand side parameter of the operator\",\n    \"alternatives\": [\n      \"@param a is a parameter on the right side of the operator\",\n      \"@param a represents the right hand side parameter of the operator\",\n      \"@param a denotes the parameter on the right side of the operator\"\n    ]\n  },\n  {\n    \"tag\": \"@return this+a\",\n    \"alternatives\": [\n      \"@return this plus a\",\n      \"@return the sum of this and a\",\n      \"@return the result of adding this and a\"\n    ]\n  },\n  {\n    \"tag\": \"@param a right hand side parameter of the operator\",\n    \"alternatives\": [\n      \"@param a is a parameter on the right side of the operator\",\n      \"@param a represents the right hand side parameter of the operator\",\n      \"@param a denotes the parameter on the right side of the operator\"\n    ]\n  },\n  {\n    \"tag\": \"@return this-a\",\n    \"alternatives\": [\n      \"@return this minus a\",\n      \"@return the difference between this and a\",\n      \"@return the result of subtracting a from this\"\n    ]\n  },\n  {\n    \"tag\": \"@param a right hand side parameter of the operator\",\n    \"alternatives\": [\n      \"@param a is a parameter on the right side of the operator\",\n      \"@param a represents the right hand side parameter of the operator\",\n      \"@param a denotes the parameter on the right side of the operator\"\n    ]\n  },\n  {\n    \"tag\": \"@return this&times;a\",\n    \"alternatives\": [\n      \"@return this multiplied by a\",\n      \"@return the product of this and a\",\n      \"@return the result of multiplying this by a\"\n    ]\n  },\n  {\n    \"tag\": \"@param a right hand side parameter of the operator\",\n    \"alternatives\": [\n      \"@param a is a parameter on the right side of the operator\",\n      \"@param a represents the right hand side parameter of the operator\",\n      \"@param a denotes the parameter on the right side of the operator\"\n    ]\n  },\n  {\n    \"tag\": \"@return this&divide;a\",\n    \"alternatives\": [\n      \"@return this divided by a\",\n      \"@return the quotient of dividing this by a\",\n      \"@return the result of dividing this by a\"\n    ]\n  },\n  {\n    \"tag\": \"@param a right hand side parameter of the operator\",\n    \"alternatives\": [\n      \"@param a is a parameter on the right side of the operator\",\n      \"@param a represents the right hand side parameter of the operator\",\n      \"@param a denotes the parameter on the right side of the operator\"\n    ]\n  }\n]"